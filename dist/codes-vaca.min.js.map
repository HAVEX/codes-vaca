{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/p6-solo/index.js","webpack:///./node_modules/p6-solo/src/aggregate.js","webpack:///./node_modules/p6-solo/src/allocate.js","webpack:///./node_modules/p6-solo/src/arrays.js","webpack:///./node_modules/p6-solo/src/derive.js","webpack:///./node_modules/p6-solo/src/embed.js","webpack:///./node_modules/p6-solo/src/join.js","webpack:///./node_modules/p6-solo/src/match.js","webpack:///./node_modules/p6-solo/src/pipeline.js","webpack:///./node_modules/p6-solo/src/query.js","webpack:///./node_modules/p6-solo/src/stats.js","webpack:///./node_modules/p6-solo/src/toarray.js","webpack:///./node_modules/p6/flexgl/src/attribute.js","webpack:///./node_modules/p6/flexgl/src/flexgl.js","webpack:///./node_modules/p6/flexgl/src/framebuffer.js","webpack:///./node_modules/p6/flexgl/src/program.js","webpack:///./node_modules/p6/flexgl/src/resource.js","webpack:///./node_modules/p6/flexgl/src/shader.js","webpack:///./node_modules/p6/flexgl/src/subroutine.js","webpack:///./node_modules/p6/flexgl/src/texture.js","webpack:///./node_modules/p6/flexgl/src/uniform.js","webpack:///./node_modules/p6/flexgl/src/varying.js","webpack:///./node_modules/p6/index.js","webpack:///./node_modules/p6/src/aggregate.js","webpack:///./node_modules/p6/src/ajax.js","webpack:///./node_modules/p6/src/allocate.js","webpack:///./node_modules/p6/src/arrays.js","webpack:///./node_modules/p6/src/cache.js","webpack:///./node_modules/p6/src/color.js","webpack:///./node_modules/p6/src/colorhex.js","webpack:///./node_modules/p6/src/compile.js","webpack:///./node_modules/p6/src/cstore.js","webpack:///./node_modules/p6/src/ctypes.js","webpack:///./node_modules/p6/src/derive.js","webpack:///./node_modules/p6/src/encode.js","webpack:///./node_modules/p6/src/extent.js","webpack:///./node_modules/p6/src/gradients.js","webpack:///./node_modules/p6/src/initialize.js","webpack:///./node_modules/p6/src/interact.js","webpack:///./node_modules/p6/src/match.js","webpack:///./node_modules/p6/src/metavis/axis.js","webpack:///./node_modules/p6/src/metavis/brush.js","webpack:///./node_modules/p6/src/metavis/chart.js","webpack:///./node_modules/p6/src/metavis/format.js","webpack:///./node_modules/p6/src/metavis/layout.js","webpack:///./node_modules/p6/src/metavis/legend.js","webpack:///./node_modules/p6/src/metavis/scale.js","webpack:///./node_modules/p6/src/metavis/svg.js","webpack:///./node_modules/p6/src/output.js","webpack:///./node_modules/p6/src/parse.js","webpack:///./node_modules/p6/src/pipeline.js","webpack:///./node_modules/p6/src/render.js","webpack:///./node_modules/p6/src/reveal.js","webpack:///./node_modules/p6/src/utils.js","webpack:///./node_modules/p6/src/visualize.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/fileloader.js","webpack:///./src/main.js","webpack:///./src/models/kp.js","webpack:///./src/models/router.js","webpack:///./src/models/terminal.js","webpack:///./src/ui/button.js","webpack:///./src/ui/dropdown.js","webpack:///./src/ui/layout.js","webpack:///./src/ui/panel.js","webpack:///./src/ui/progress.js","webpack:///./src/ui/table.js","webpack:///./src/vis/lineplot.js","webpack:///./src/vis/matrixplot.js","webpack:///./src/vis/scatterplot.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_src_main_js__WEBPACK_IMPORTED_MODULE_0__","container","$","modal","closable","locale","format","formatPrefix","defaultLocale","definition","_locale__WEBPACK_IMPORTED_MODULE_0__","decimal","thousands","grouping","currency","__webpack_exports__","x","_formatDecimal__WEBPACK_IMPORTED_MODULE_0__","Math","abs","NaN","toExponential","indexOf","coefficient","slice","length","width","t","j","g","max","push","substring","reverse","join","numerals","replace","prefixExponent","exponent","min","floor","Array","formatSpecifier","re","specifier","FormatSpecifier","match","exec","Error","this","fill","align","sign","symbol","zero","comma","precision","trim","type","toString","out","i1","i0","%","toFixed","b","round","e","f","toPrecision","_formatRounded__WEBPACK_IMPORTED_MODULE_1__","_formatPrefixAuto__WEBPACK_IMPORTED_MODULE_0__","X","toUpperCase","prefixes","group","_formatGroup__WEBPACK_IMPORTED_MODULE_1__","_identity__WEBPACK_IMPORTED_MODULE_7__","_formatNumerals__WEBPACK_IMPORTED_MODULE_2__","percent","newFormat","_formatSpecifier__WEBPACK_IMPORTED_MODULE_3__","_formatTypes__WEBPACK_IMPORTED_MODULE_5__","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","_formatTrim__WEBPACK_IMPORTED_MODULE_4__","_formatPrefixAuto__WEBPACK_IMPORTED_MODULE_6__","charCodeAt","Infinity","padding","_exponent__WEBPACK_IMPORTED_MODULE_0__","k","pow","step","global","root","self","p6Solo","allocate","arrays","aggregate","pipeline","derive","stats","embed","toArray","p6","solo","ArrayOpts","data","spec","headers","bin","ks","attributes","keys","bins","binCollection","result","$bin","binAttr","binCount","column","map","binInterval","$group","isArray","forEach","si","JSON","stringify","bl","res","parse","$data","gk","$collect","$reduce","key","attr","opt","a","unique","mergedResult","concat","row","fname","warnMsg","console","warn","options","array","header","fields","types","schema","skip","ds","parsers","ta","h","shift","parseInt","isNaN","parseFloat","Date","insertRows","rows","objectArray","offset","vl","vector","vi","rowArray","columnArray","_reduce","reduce","apply","arguments","avg","normalize","range","seq","start","end","intv","interval","sum","scan","pfsum","accum","iscan","diff","difference","intersect","filter","lcm","A","histogram","numBin","_max","_min","hg","binID","counts","var","std","sqrt","tranfs","Function","id","$id","$by","lookup","index","dataLeft","dataRight","len","keyL","kr","indexes","_match","obj","sat","Number","queries","queue","cache","tag","task","then","_callback","q","execute","oncomplete","arrayOpts","query","indexBy","indexed","mf","sortBy","sortArray","sort","al","orderBy","ss","binAggregate","attrKey","embedData","rangeBegin","rangeEnd","count","partition","numPart","pid","ceil","partitions","partitionBy","parts","bi","hash","toColumnArray","ai","domains","arg","Attribute","glContext","attribute","ctx","attributeID","setAttribute","ArrayBuffer","isView","Float32Array","bindBuffer","ARRAY_BUFFER","ptr","bufferData","STATIC_DRAW","create","location","createBuffer","size","link","program","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","load","arrayBuffer","delete","deleteBuffer","FlexGL","flexgl","canvas","document","createElement","height","left","right","top","bottom","context","sharedFunction","getElementById","cavnas","clientWidth","clientHeight","style","position","marginLeft","marginTop","names","gl","getContext","setupWebGL","_dict","env","dict","dictionary","resources","_resource__WEBPACK_IMPORTED_MODULE_0__","framebuffers","_framebuffer__WEBPACK_IMPORTED_MODULE_3__","programManager","_program__WEBPACK_IMPORTED_MODULE_1__","blendExt","_shader__WEBPACK_IMPORTED_MODULE_2__","getExtension","enableExtension","extensions","extension","extProps","ep","ext","MAX_EXT","MIN_EXT","appendChild","set","buffer","uniform","isProgram","serialize","aoa","sa","texture","dim","channel","sampler","update","varying","framebuffer","enableRead","bindFramebuffer","fbName","FRAMEBUFFER","subroutine","fn","parameter","keyValuePairs","newArray","dictKeys","fxgl","shader","vs","fs","createProgram","app","props","vertex","fragment","draw","render","args","dimension","Framebuffer","createFramebuffer","renderbuffer","createRenderbuffer","buf","Uint8Array","_texture__WEBPACK_IMPORTED_MODULE_0__","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","framebufferRenderbuffer","DEPTH_ATTACHMENT","activeTexture","TEXTURE0","bindTexture","getUniformLocation","uniform1i","deleteRenderbuffer","deleteTexture","deleteFramebuffer","Program","pm","kernels","shaders","_shader__WEBPACK_IMPORTED_MODULE_0__","deps","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","use","useProgram","detachShader","deleteProgram","Resource","resource","gpuResources","_uniform__WEBPACK_IMPORTED_MODULE_0__","_attribute__WEBPACK_IMPORTED_MODULE_1__","_texture__WEBPACK_IMPORTED_MODULE_2__","_varying__WEBPACK_IMPORTED_MODULE_3__","_subroutine__WEBPACK_IMPORTED_MODULE_4__","resourceTypes","resourceType","resourceName","Shader","glResource","parameters","shaderType","VERTEX_SHADER","FRAGMENT_SHADER","toGLSL","returnType","glsl","str","envParam","RegExp","matched","applyEnvParameters","expr","dtype","getExtraDeps","fnString","extraDeps","declareDep","dep","uniqueDeps","option","require","debug","main","shaderSource","sourceCode","shaderArgs","split","getDeps","subRoutines","log","subDeps","sdep","sres","allDeps","_shader","createShader","compileShader","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","compile","_shaderType","source","Subroutine","Texture","textureID","setTexture","texData","texImage2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texIndex","createTexture","copyFromFBO","copyTexImage2D","RGBA","texSubImage2D","updateTexture","resize","Uniform","serializeArray","arrayOfArray","Int32Array","Varying","_src_pipeline__WEBPACK_IMPORTED_MODULE_0__","undefined","ajax","_src_ajax__WEBPACK_IMPORTED_MODULE_3__","cstore","_src_cstore__WEBPACK_IMPORTED_MODULE_1__","ctypes","_src_ctypes__WEBPACK_IMPORTED_MODULE_2__","_src_parse__WEBPACK_IMPORTED_MODULE_4__","vecId","aggrOpts","$p","groupKeyValue","gl_PointSize","aDataIdx","uDataDim","aDataIdy","y","vResult","getData","uFieldId","uDataSize","uFilterFlag","texture2D","fFilterResults","vec2","uVisLevel","pos","Vec2","ii","gid","Int","uGroupFields","uIndexCount","getFieldDomain","getFieldWidth","gl_Position","vec4","discard","uAggrOpt","gl_FragColor","vs2","_square","fs2","$vec4","gl_FragCoord","uResultDim","float","uFieldCount","uDataInput","resultFieldCount","resultDomains","getAvgValues","groupFields","groupFieldIds","resultDim","resultDimension","fieldWidths","newFieldSpec","$calculate","$out","newFieldNames","resultFields","resultFieldIds","operators","_update","opts","vertexAttribDivisorANGLE","aDataValx","aDataValy","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","disable","CULL_FACE","DEPTH_TEST","enable","BLEND","blendFunc","ONE","blendEquation","FUNC_ADD","uGroupGetStat","viewport","drawArraysInstancedANGLE","POINTS","dataDimension","fGroupResults","drawArrays","TRIANGLES","fAggrStats","_execute","getResult","newFieldIds","gf","fieldDomains","aDataItemId","_utils__WEBPACK_IMPORTED_MODULE_0__","dataSize","extent","uFieldDomains","uFieldWidths","intervals","resultSize","rowTotal","colTotal","readPixels","request","url","method","dataType","encodeURIComponent","Promise","resolve","reject","req","XMLHttpRequest","open","responseType","onload","status","response","statusText","onerror","setRequestHeader","send","getAll","promises","all","post","dataProps","categoryIndex","strHashes","categoryLookup","strLists","dkeys","dtypes","cachedResult","crossfilters","deriveCount","rowSize","colSize","getDataWidth","fid","TLB","deriveMax","fieldCount","field","fi","deriveDomains","deriveWidths","deriveFieldCount","indexAttrData","aVertexId","aDataFieldId","indexCount","tData","$int_fid","$float_r","$float_s","uDeriveCount","fDerivedValues","$int_fieldId","$float_addrX","$float_addrY","offsetY","fieldId","addrY","addrX","variance","vectorAdd","v","vectorSum","vectors","numberOfVectors","_vectorAvg","vectorAvg","cacheTag","dataDim","fieldTotal","colorResolution","colorSetMax","defaultColorSet","gradient","_gradients__WEBPACK_IMPORTED_MODULE_0__","colorset","color","colorManager","setColorTable","setColorScheme","mapColorRGB","updateScheme","newColors","tColorGraident","updateTable","colors","uColorSet","colorTable","substr","rgba2hex","getColors","uColorMode","rgb","rgba","hexStr","hex","colorStr","_colorhex__WEBPACK_IMPORTED_MODULE_1__","alpha","cc","colorGradient","c0","c1","xi","pop","isRgb","colorValue","$float_value","colorRGB","Vec3","intValue","uDefaultColor","uVisDomains","int","uColorCount","vec3","colorhex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_aggregate__WEBPACK_IMPORTED_MODULE_2__","_cache__WEBPACK_IMPORTED_MODULE_3__","_match__WEBPACK_IMPORTED_MODULE_4__","_extent__WEBPACK_IMPORTED_MODULE_5__","visualize","_visualize__WEBPACK_IMPORTED_MODULE_6__","ColumnStore","columns","struct","colStats","colAlloc","colRead","initCStore","configureColumn","initStruct","cid","_ctypes__WEBPACK_IMPORTED_MODULE_0__","addRows","addObjects","objArray","addColumn","columnData","columnName","columnType","values","di","metadata","info","col","exportAsJSON","ri","dataFrame","exportAsRowArray","export","import","nominal","short","Int16Array","double","Float64Array","string","Uint16Array","time","temporal","integer","numeric","derivedFields","marco","formula","getDerivedValue","uDeriveId","uOptMode","minValue","maxValue","newDerivedDomains","deriveFieldId","encode","visualEncodings","vmap","opacity","vmapIndex","code","codeIndex","uVisualEncodings","uDefaultAlpha","revealDensity","uRevealMode","uMarkSize","renderMode","uInterleaveX","mark","viewSetting","isRect","markSpace","scaleX","domainX","scaleY","domainY","uMarkSpace","histDim","histMin","histMax","histIntv","histBin","isHistogram","uDefaultWidth","uDefaultHeight","smallest","vDiscardData","fieldIds","extents","idCount","gradients","inferno","magma","plasma","viridis","init","body","defaultLayout","_flexgl_src_flexgl__WEBPACK_IMPORTED_MODULE_0__","views","interact","viewTags","view","actions","events","condition","callback","viewTag","vis","sx","sy","w","interactor","chart","svg","append","rect","box","getBoundingClientRect","tx","ty","dy","getSelection","dx","clientX","clientY","selection","invert","action","cursor","brushOptions","brush","_metavis_brush__WEBPACK_IMPORTED_MODULE_0__","selections","axisDist","selectors","axisSelect","translate","onmousewheel","ny","exp","deltaY","delta","uPosOffset","uVisScale","onmousedown","onmousemove","onmouseup","updatePos","onclick","onmouseover","vertexShaderFilter","sel","visSelect","Bool","uFilterControls","uVisControls","uFilterRanges","uVisRanges","vertexShaderSelect","uFilterLevel","uSelectCount","uInSelections","fragmentShader","SELECT_MAX","filterControls","filterRanges","visControls","visRanges","inSelections","from","control","ctrl","filterSpec","$in","newDomains","matchFields","filterSelections","viewSelections","domain","bitmap","UNSIGNED_BYTE","axis","domainIntervals","parent","scale","metric","innerWidth","innerHeight","styles","stroke","stroke-width","ticks","tickLength","tickPosition","tickInterval","tickAlign","skipLast","tickFormat","grid","_","visable","labelPos","labelAngle","Y","tickLabelAlign","labelPosition","getTickInterval","log10","scaleOptions","_scale__WEBPACK_IMPORTED_MODULE_0__","show","Attr","x1","x2","y1","y2","Style","svgTicks","tickLabel","class","font-size","textAnchor","gx1","gx2","gy1","gy2","labelText","text","stroke-opacity","remove","base","selectX","selectY","border","brushstart","brushend","css","bx","by","selector","intStart","drag","addEventListener","evt","preventDefault","x0","y0","nw","nh","sp","ondrag","selectorBox","nx","window","removeEventListener","plot","hist","features","categories","labels","showLegend","onhover","legend","axisOffset","xAxisOption","_format__WEBPACK_IMPORTED_MODULE_1__","yAxisOption","_legend__WEBPACK_IMPORTED_MODULE_3__","xAxes","yAxes","labelOffset","_axis__WEBPACK_IMPORTED_MODULE_0__","xAxisTitle","yAxisTitle","chartLayer","barHeight","isFinite","hMarks","removeAxis","yp","printformat","numericSymbols","_arrays__WEBPACK_IMPORTED_MODULE_0__","number","assign","defaultProperties","layout","viz","div","prop","className","createSVG","_svg__WEBPACK_IMPORTED_MODULE_0__","backSVG","scales","frontSVG","addProperty","destroy","_super","removeChild","hide","display","addChart","_chart__WEBPACK_IMPORTED_MODULE_1__","exportImage","beforeExport","imageCanvas","svgString","XMLSerializer","serializeToString","DOMURL","URL","webkitURL","svgBlob","Blob","svgURL","createObjectURL","canvasLayer","Image","svgLayer","drawImage","src","png","toDataURL","revokeObjectURL","defaultColors","defaultSize","gradID","gradientID","label","_format__WEBPACK_IMPORTED_MODULE_2__","gradDirection","linearGradient","title","_axis__WEBPACK_IMPORTED_MODULE_1__","Scale","margin","d0","d1","r0","r1","domainLength","rangeLength","setAttr","elem","setStyle","Svg","createElementNS","viewBox","preserveAspectRatio","publicMethods","createTextNode","getAttribute","on","event","addEventListner","output","rs","ax","ay","arraySize","subarray","kid","delimiter","loadLine","delimiterCode","initPos","EOL","QUOTE","L","_initialize__WEBPACK_IMPORTED_MODULE_2__","interactions","visualization","_responseType","registers","operation","optID","addToPipeline","dataOptions","_allocate__WEBPACK_IMPORTED_MODULE_0__","_compile__WEBPACK_IMPORTED_MODULE_3__","register","filterFlag","dataInput","ids","resume","reg","deriveSpec","log2","binDomain","histFunction","binMin","_derive__WEBPACK_IMPORTED_MODULE_4__","visLayers","read","_output__WEBPACK_IMPORTED_MODULE_1__","branchID","branch","branches","operations","run","readResult","clearViews","runSpec","specs","head","viewIndex","encoding","interaction","_interact__WEBPACK_IMPORTED_MODULE_5__","visMap","$float_indexedValue0","$float_indexedValue1","$float_defaultValue","$float_exp","getNonIndexedData","indexedValue0","indexedValue1","defaultValue","instancedXY","posX","posY","vColorRGBA","uVisShape","dist","gl_PointCoord","xy","smoothstep","interleave","mod","uFeatureCount","polygon","val0","val1","aDataItemVal0","aDataItemVal1","reveal","aViewX","aViewY","uViewDim","offScreenFBO","Vec4","uMaxRGBA","viewDim","maxRGBA","seqInt","bind","seqFloat","userActions","_color__WEBPACK_IMPORTED_MODULE_0__","chartPadding","_metavis_layout__WEBPACK_IMPORTED_MODULE_6__","enhance","_reveal__WEBPACK_IMPORTED_MODULE_3__","_render__WEBPACK_IMPORTED_MODULE_2__","updateInstancedAttribute","vm","fv","visDomain","visDimension","dimSetting","_encode__WEBPACK_IMPORTED_MODULE_4__","ONE_MINUS_SRC_ALPHA","lineWidth","pv","primitive","LINE_STRIP","act","viewId","eval","fileLoader","file","onLoadStart","ftype","onstart","onLoadComplete","onLoad","chunk","bufferSize","rawText","lines","reader","FileReader","fileSize","lineTotal","counting","leftOver","onloadend","target","readyState","DONE","blob","readAsBinaryString","line","error","NOT_FOUND_ERR","alert","NOT_READABLE_ERR","ABORT_ERR","fileList","progressBars","results","d3_format__WEBPACK_IMPORTED_MODULE_14__","p6_solo__WEBPACK_IMPORTED_MODULE_4___default","dataopt","board","_ui_layout__WEBPACK_IMPORTED_MODULE_8__","cols","timelines","_ui_panel__WEBPACK_IMPORTED_MODULE_9__","cell","backgroundColor","summary","overflow","_ui_table__WEBPACK_IMPORTED_MODULE_11__","_ui_button__WEBPACK_IMPORTED_MODULE_10__","icon","fileInput","onchange","files","fileName","tr","addRow","_ui_progress__WEBPACK_IMPORTED_MODULE_13__","percentage","childNodes","fileId","db","entity","rowCount","_models_kp__WEBPACK_IMPORTED_MODULE_1__","_models_router__WEBPACK_IMPORTED_MODULE_3__","_models_terminal__WEBPACK_IMPORTED_MODULE_2__","_fileloader__WEBPACK_IMPORTED_MODULE_0__","meta","updateCell","preprocess","model","loadDataFromFile","startButton","timeLinePlots","obtainTemporalSummary","selEntity","tres","aggrResult","metrics","se","sem","val","dp","VT","$sum","PE","pes","_vis_matrixplot__WEBPACK_IMPORTED_MODULE_7__","linkTimeLinePlots","mouse","showLineCursor","onbrush","brushCallBack","moveBrush","onbrushend","change","html","plotOption","_vis_lineplot__WEBPACK_IMPORTED_MODULE_5__","terminal","router","colorMap","kp","mergedData","KP","statsVmap","_vis_scatterplot__WEBPACK_IMPORTED_MODULE_6__","p6__WEBPACK_IMPORTED_MODULE_0__","RT","time_ahead_gvt","total_rollback","primary_rollback","secondary_rollback","kps","Router","LP","router_id","fwd_events","rev_events","total_sat_time","total_traffic","routers","$count","total_traffic_KB","total_forward_events","total_reverse_events","$max","Terminal","terminal_id","fin_chunks","data_size","fin_hops","fin_chunks_time","busy_time","terminals","total_data_size","total_busy_time","Button","button","fontSize","background","textAlign","verticalAlign","marginRight","input","click","innerHTML","showLoading","hideLoading","toggleLoading","Dropdown","dropdown","wrapper","items","menu","item","itemDiv","ic","Layout","layoutId","spacing","divs","cells","createColumns","widthTotal","cs","colWidth","createColumn","createRows","rowWidth","heightTotal","rowHeight","createLayout","Panel","panel","headerHeight","classNames","angularJS","AngularJS","fullScreen","paddingLeft","panelTitle","controls","child","domArray","toggleFullScreen","zIndex","Progress","bar","progress","jquery","jQuery","setPercentage","Table","table","tableHead","tableBody","_row","td","HTMLElement","tbody","linePlot","dopt","dataSizes","yLabel","chartTitle","xLabel","printLegend","d3","select","scaleLinear","curve","curveMonotoneX","nest","entries","series","scaleOrdinal","schemeCategory20","xDomain","yDomain","pointPerSeries","axisBottom","tickSize","tickPadding","brushX","selectedDomain","axisLeft","selectAll","enter","mouseG","lineCursor","brushHandle","move","scaleBand","rangeRound","z","sizeScales","subset","xAxis","axisTop","bandwidth","yAxis","scatterPlot"],"mappings":"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","file":"codes-vaca.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","import app from './src/main.js';\napp({container: 'main'});\n$('.ui.large.modal').modal({closable: false}).modal('toggle');","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","var root = typeof self == 'object' && self.self === self && self ||\n           typeof global == 'object' && global.global === global && global ||\n           this;\n\nvar p6Solo = {\n    allocate    : require('./src/allocate'),\n    arrays      : require('./src/arrays'),\n    aggregate   : require('./src/aggregate'),\n    pipeline    : require('./src/pipeline'),\n    derive      : require('./src/derive'),\n    match       : require('./src/match'),\n    join        : require('./src/join'),\n    stats       : require('./src/stats'),\n    embed       : require('./src/embed'),\n    toArray     : require('./src/toarray')\n};\n\nif(typeof root.p6 == 'object') {\n    root.p6.solo = p6Solo;\n} else {\n    root.p6Solo = p6Solo;\n}\n\nif(typeof module != 'undefined' && module.exports)\n    module.exports = root.p6Solo;\n","var ArrayOpts = require(\"./arrays.js\");\n\nmodule.exports = function(data, spec, headers){\n    var i,\n        l = data.length,\n        attributes = headers || Object.keys(data[0]),\n        bin,\n        bins = [],\n        binCollection = {},\n        result = [],\n        ks;\n\n    if(!spec.hasOwnProperty('$group') && !spec.hasOwnProperty('$bin')) return result;\n\n    if(typeof spec.$bin == 'object') {\n        var binAttr = Object.keys(spec.$bin)[0],\n            binCount = spec.$bin[binAttr];\n\n        if(attributes.indexOf(binAttr) !== -1) {\n            var column = data.map(function(d){return d[binAttr]}),\n                min = ArrayOpts.min(column),\n                max = ArrayOpts.max(column),\n                binInterval = (max - min) / binCount;\n\n            for(i = 0; i < l; i++){\n                data[i]['bin@' + binAttr] = Math.min(Math.floor(data[i][binAttr]/binInterval), binCount-1);\n            }\n\n            spec.$group = 'bin@' + binAttr;\n            attributes.push('bin@' + binAttr);\n        }\n    }\n\n    for(i = 0; i < l; i++){\n        if(Array.isArray(spec.$group)) {\n            ks = [];\n            spec.$group.forEach(function(si){\n                ks.push(data[i][si]);\n            });\n            bin = JSON.stringify(ks);\n        } else {\n            bin = data[i][spec.$group];\n        }\n        if( bins.indexOf(bin) < 0 ){\n            bins.push(bin);\n            binCollection[bin] = [data[i]];\n        } else {\n            binCollection[bin].push(data[i]);\n        }\n    }\n\n    var bl = bins.length;\n\n    for(i = 0; i < bl; i++){\n        var res = {};\n        if(Array.isArray(spec.$group)) {\n            ks = JSON.parse(bins[i]);\n            spec.$group.forEach(function(s, j){\n                res[s] = ks[j];\n            })\n\n        } else {\n            res[spec.$group] = bins[i];\n        }\n\n        if(spec.$data) {\n            res.data = binCollection[bins[i]];\n        }\n\n        if(spec.$group) {\n            var gkeys = Array.isArray(spec.$group) ? spec.$group : [spec.$group];\n\n            gkeys.forEach(function(gk){\n                if(attributes.indexOf(gk) === -1) {\n                    throw Error('Invalid attribute name: ', gk);\n                }\n            })\n        }\n\n        var out = spec.$collect || spec.$reduce || [];\n        var keys = Object.keys(out);\n        if(keys.length === 0) return result;\n        keys.forEach(function(key){\n            var attr = key,\n                opt = out[key];\n\n            if(opt === \"$count\" || opt === \"$data\") {\n                attr = key;\n            }\n            if(typeof out[key] === 'object'){\n                opt = Object.keys(out[key])[0];\n                attr = out[key][opt];\n\n                if(attributes.indexOf(attr) === -1 && attr !== \"*\" && !Array.isArray(attr)) {\n                    var warnMsg = \"No matching attribute or operation defined for the new attribute \" + key + \":\" + spec[key];\n                    console.warn(warnMsg);\n                    return;\n                }\n            }\n\n            if(typeof opt === \"function\") {\n                // res[key] = binCollection[bins[i]].map(function(a){ return a[attr]; }).reduce(opt);\n                res[key] = opt.call(null, binCollection[bins[i]].map(function(a){ return a[attr]; }));\n            } else if(typeof opt === \"string\") {\n                if(opt === \"$unique\") {\n                    res[key] = ArrayOpts.unique(binCollection[bins[i]].map(function(a){ return a[key]; }));\n                } else if (opt === \"$list\") {\n                    res[key] = binCollection[bins[i]].map(function(a){ return a[attr]; });\n                } else if (opt === \"$first\") {\n                    res[key] = binCollection[bins[i]][0][attr];\n                } else if (opt === \"$merge\") {\n                    var mergedResult = [];\n                    binCollection[bins[i]].map(function(a){ return a[attr]; }).forEach(function(m){\n                        mergedResult = mergedResult.concat(m);\n                    })\n                    res[key] = mergedResult;\n                } else if (opt === \"$count\") {\n                    res[key] = binCollection[bins[i]].length;\n                } else if (opt === \"$data\") {\n\n                    res[key] = (spec[key][opt] == '*')\n                        ? binCollection[bins[i]]\n                        : binCollection[bins[i]].map(function(data){\n                            var row = {};\n                            spec[key][opt].forEach(function(k){ row[k] = data[k] });\n                            return row;\n                        });\n                } else {\n                    var fname = opt.slice(1);\n\n                    if(fname in ArrayOpts) {\n                        res[key] = ArrayOpts[fname].call(null, binCollection[bins[i]].map(function(a){\n                            return a[attr];\n                        }));\n                    }\n                }\n            }\n        });\n        result.push(res);\n    }\n\n    return result;\n};\n","/**\n * alloc(options) - allocating memory for storing data values in different schemaures.\n * @exports allocate\n * @param {Object} options - Options for allocating memory.\n * @param {Array} options.array - Array containing the data values.\n * @param {Array} options.fields - Fields in the data.\n * @param {number} [options.skip=0] - Number of rows to be skiped in data.\n * @param {object[]} [options.data] - default data\n *\n */\nmodule.exports = function allocate(options) {\n    'use strict';\n    var array = options.array || [],\n        header = options.fields || array[0],\n        types = options.types || [],\n        schema = options.schema || {},\n        skip = options.skip || 0,\n        data = options.data || [];\n\n    var ds = {},\n        parsers = [];\n\n    if (types.length && typeof(types) == 'string') {\n        var ta = [];\n        for (var i = 0; i < header.length; i++) {\n            ta.push(types);\n        }\n        types = ta;\n    }\n\n    if (typeof schema == 'object') {\n        header = Object.keys(schema);\n        types = Object.keys(schema).map(function(h) {\n            return schema[h];\n        });\n    }\n\n    if (typeof skip == 'number') {\n        for (var j = 0; j < skip; j++)\n            array.shift();\n    }\n\n    types.forEach(function(t) {\n        parsers.push(getParser(t));\n    })\n\n    function getParser(type) {\n        if (type == 'int' || type.match('veci*')) {\n            return function(value) {\n                var res = parseInt(value);\n                return (isNaN(res)) ? 0 : res;\n            };\n        } else if (type == 'float' || type.match('vecf*')) {\n            return function(value) {\n                var res = parseFloat(value);\n                return (isNaN(res)) ? 0 : res;\n            };\n        } else if (['date', 'time', 'datetime'].indexOf(type) != -1) {\n            return function(value) {\n                return new Date(value);\n            };\n        } else if (['money', 'price', 'cost'].indexOf(type) != -1) {\n            return function(value) {\n                return parseFloat(value.substring(1));\n            };\n        } else {\n            return function(value) {\n                return value;\n            };\n        }\n    }\n\n    ds.insertRows = function(rows) {\n        array = array.concat(rows);\n    }\n    \n    /**\n    * @method objectArray\n    * @return {Object[]} - Return data as array of objects\n    */\n    ds.objectArray = function() {\n        if (typeof(header) !== 'undefined' && header.length) {\n            var l = header.length;\n            array.forEach(function(a) {\n                var o = {},\n                    offset = 0;\n                for (var i = 0; i < l; i++) {\n                    var k = header[i];\n                    if (k.length) {\n                        if (types[i].match(/^(veci|vecf)\\d+$/)) {\n                            var vl = parseInt(types[i].slice(4)),\n                                vector = [];\n                            a.slice(offset, offset + vl).forEach(function(vi) {\n                                vector.push(parsers[i](vi));\n                            });\n                            o[k] = vector;\n                            offset += vl;\n                        } else {\n                            o[k] = parsers[i](a[offset]);\n                            offset++;\n                        }\n                    }\n                }\n                data.push(o);\n            });\n        }\n        return data;\n    }\n\n    /**\n    * @method rowArray\n    * @return {Array[]} - data as row arrays\n    */\n    ds.rowArray = function() {\n        array.forEach(function(a) {\n            var row = [];\n            header.forEach(function(k, i) {\n                if (k.length) {\n                    row.push(parsers[i](a[i]));\n                }\n            });\n            data.push(row);\n        });\n        data.fields = header;\n        data.schema = 'rowArray';\n        return data;\n    }\n\n    /**\n    * @method collumArray\n    * @return {Array[]} - data as column arrays\n    */\n    ds.columnArray = function() {\n        header.forEach(function(k, i) {\n            var column = array.map(function(a) {\n                return parsers[i](a[i]);\n            });\n            data.push(column);\n        });\n        data.fields = header;\n        data.schema = 'columnArray';\n        return data;\n    }\n    //TODO: make columnArray extensible like rowArray and objectArray\n\n    return ds;\n};\n","var array = {};\nfunction _reduce(array, opt) {\n    var i,\n        len = array.length,\n        fn,\n        result;\n\n    if(!len) return 0;\n\n    switch (opt) {\n        case \"max\":\n            result = array.reduce(function(a, b) {\n                return (a > b) ? a : b;\n            });\n            break;\n        case \"min\":\n            result = array.reduce(function(a, b) {\n                return (a < b) ? a : b;\n            });\n            break;\n        case \"and\":\n        case \"&\":\n            result = array.reduce(function(a, b) {\n                return a & b;\n            });\n            break;\n        case \"or\":\n        case \"|\":\n            result = array.reduce(function(a, b) {\n                return a | b;\n            });\n            break;\n        case \"mult\":\n        case \"*\":\n            result = array.reduce(function(a, b) {\n                return a * b;\n            });\n            break;\n        default: // \"sum\" or \"+\"\n            result = array.reduce(function(a, b) {\n                return a + b;\n            });\n            break;\n    }\n\n    return result;\n}\n\narray.reduce = function(opt) {\n    return function(array) {\n        var a = (array instanceof Array) ? array : Array.apply(null, arguments);\n        return _reduce(a, opt);\n    };\n};\n\narray.avg = function(array) {\n    return _reduce(array, \"+\") / array.length;\n    // return array.reduce(function(a,b){ return 0.5 * (a + b)});\n};\n\narray.normalize = function(array) {\n    var max = _reduce(array, \"max\"),\n        min = _reduce(array, \"min\"),\n        range = max - min;\n\n    return array.map(function(a){\n        return (a - min) / range;\n    });\n}\n\narray.seq = function(start, end, intv) {\n    var interval = intv || 1,\n        array = [];\n\n    for(var i=start; i<=end; i+=interval)\n        array.push(i);\n\n    return array;\n};\n\n[\"max\", \"min\", \"mult\", \"and\", \"or\"].forEach(function(f) {\n    array[f] = array.reduce(f);\n});\n\narray.sum = array.reduce(\"+\");\n\narray.scan = array.pfsum = function(a){\n    var pfsum = [],\n        accum = 0;\n\n    for (var i = 0; i < a.length; i++) {\n        accum += a[i];\n        pfsum.push(accum);\n    }\n\n    return pfsum;\n};\n\narray.iscan = function(a) {\n    return array.scan([0].concat(a));\n};\n\narray.diff = function(a, b) {\n    var difference = [];\n    a.forEach(function(d){\n        if (b.indexOf(d)===-1) {\n            difference.push(d);\n        }\n    });\n    return difference;\n};\n\narray.intersect = function(a, b) {\n    var t;\n    if (b.length > a.length) t = b, b = a, a = t; // indexOf to loop over shorter\n    return a.filter(function (e) {\n            if (b.indexOf(e) !== -1) return true;\n    });\n};\n\narray.unique = function(a) {\n    return a.reduce(function(b, c) {\n        if (b.indexOf(c) < 0) b.push(c);\n        return b;\n    }, []);\n};\n\narray.lcm = function(A) {\n    var n = A.length, a = Math.abs(A[0]);\n    for (var i = 1; i < n; i++) {\n        var b = Math.abs(A[i]), c = a;\n        while (a && b){ (a > b) ? a %= b : b %= a; }\n        a = Math.abs(c*A[i])/(a+b);\n    }\n    return a;\n};\n\narray.stats = function(array){\n    return {\n        max: _reduce(array, \"max\"),\n        min: _reduce(array, \"min\"),\n        avg: array.avg(array)\n    };\n};\n\narray.histogram = function(array, numBin, _max, _min) {\n    var l = array.length,\n        min = (typeof(_min) == 'number') ? _min : _reduce(array, \"min\"),\n        max = (typeof(_max) == 'number') ? _max : _reduce(array, \"max\"),\n        range = max - min,\n        interval = range / numBin,\n        bins = [],\n        // ids = [],\n        hg = new Array(numBin+1).fill(0);\n\n    for(var b = 0; b < numBin; b++) {\n        bins.push([min + range * (b/(numBin)), min + range*(b+1)/(numBin)]);\n        // ids[b] = [];\n    }\n\n    // ids[numBin] = [];\n\n    for(var i = 0; i < l; i++) {\n        binID = Math.floor( (array[i] - min) / range * (numBin));\n        hg[binID]++;\n        // ids[binID].push(i);\n    };\n\n    hg[numBin-1] += hg[numBin];\n    // ids[numBin-1] = ids[numBin-1].concat(ids.pop());\n    return {\n        bins: bins,\n        counts: hg.slice(0,numBin),\n        // ids: ids\n    };\n}\n\narray.var = function(rowArray) {\n    var m = _reduce(rowArray, \"+\") / rowArray.length,\n        va = rowArray.map(function(a){ return Math.pow(a-m, 2) });\n\n    return _reduce(va, \"+\") / (rowArray.length - 1);\n}\n\narray.std = function(rowArray) {\n    return Math.sqrt(array.var(rowArray));\n}\n\n\n\nmodule.exports = array;\n","var $ = require('./arrays.js');\n\nmodule.exports = function(data, spec){\n    if(!Array.isArray(data))\n        throw new Error(\"Inproper input data format.\");\n\n    if(typeof(spec) === \"function\") {\n        data.forEach(spec);\n    } else {\n        var result = [],\n            tranfs = {};\n\n        Object.keys(spec).forEach(function(s){\n            if(typeof(spec[s]) == \"function\") {\n                tranfs[s] = function(d) { d[s] = spec[s](d) };\n            } else {\n                tranfs[s] = Function(\"attr\", \"attr.\" + s + \"=\" + spec[s].replace(/@/g, 'attr.').replace(/\\$/g, '$.') + \";\");\n            }\n        });\n\n        data.forEach(function(d){\n            Object.keys(spec).forEach(function(s){\n                tranfs[s](d);\n            });\n        });\n    }\n\n    return data;\n}\n","module.exports = function embed(spec) {\n    var id = spec.$id || spec.$by,\n        attributes = Object.keys(spec);\n\n    if(!id) throw Error(\"No id specified for embed!\");\n\n    attributes.filter(function(attr){\n        return (attr != \"$by\" && attr != \"$id\")\n    })\n    .forEach(function(attr){\n        var embedKey = spec[attr][0][id],\n            i = 0,\n            n = data.length,\n            l = spec[attr].length;\n\n        var lookup = data.map(function(d){ d[attr] = []; return d[id];});\n\n        for(i = 0; i < l; i++) {\n            var index = lookup.indexOf(spec[attr][i][id]);\n            if(index !== -1) {\n                data[index][attr].push(spec[attr][i]);\n            }\n            // delete spec[attr][i][id];\n        }\n    });\n    return data;\n}\n","module.exports = function join(dataLeft, dataRight) {\n    var len = dataLeft.length,\n        keyL = Object.keys(dataLeft[0]),\n        keyR = Object.keys(dataRight[0]);\n        \n    var keys = keyR.filter(function(kr){ return (keyL.indexOf(kr) === -1);});\n\n    keys.forEach(function(k){\n        for(var i = 0; i < len; i++) {\n            dataLeft[i][k] = dataRight[i][k];    \n        }\n    });\n\n    return dataLeft;\n}\n","module.exports = function match(data, spec) {\n    var indexes = data[0];\n\n    if(!Array.isArray(indexes)) indexes = [];\n\n    return data.filter(function(a){\n        if(_match(a, spec, indexes)) return a;\n    });\n};\n\nfunction _match(obj, spec, indexes){\n    var match,\n        opt,\n        index,\n        sat = true,\n        keys = Object.keys(spec);\n\n    keys.forEach(function(key){\n        if(key === \"$not\") {\n            match = !_match(obj, spec[key], indexes);\n        } else if(key == \"$or\" || key == \"$and\" ) {\n            match = (key == \"$and\");\n            spec[key].forEach(function(s){\n                match = (key == \"$and\") ? match & _match(obj, s, indexes) : match | _match(obj, s, indexes);\n            });\n        } else {\n            index = (indexes.length > 0) ? indexes.indexOf(key) : key;\n\n            if(typeof spec[key] === 'object'){\n                opt = Object.keys(spec[key])[0];\n\n                if(opt[0] == \"$\" && spec[key][opt] instanceof Array){\n                    if(opt == \"$in\" || opt == \"$nin\"){\n                        match = ((opt == \"$nin\") ^ (spec[key][opt].indexOf(obj[index]) > -1));\n                    } else if(opt == \"$inRange\"){\n                        match =(obj[key] >= spec[key][opt][0] & obj[index] <= spec[key][opt][1]);\n                    } else if(opt == \"$ninRange\"){\n                        match =(obj[key] < spec[key][opt][0] | obj[index] > spec[key][opt][1]);\n                    } else if(opt == \"$inDate\"){\n                        match = (spec[key][opt].map(Number).indexOf(+(obj[index])) > -1);\n                    }\n                } else if(spec[key] instanceof Array) {\n                    match =(obj[key] >= spec[key][0] & obj[index] <= spec[key][1]);\n                }\n            } else {\n                if(spec[key][0] === \"$\") {\n                    match = (obj[spec[key].slice(1)] === obj[index]);\n                } else {\n                    match = (spec[key] == obj[index]);\n                }\n            }\n        }\n        sat = sat & match;\n    });\n\n    return sat;\n}\n","const derive = require('./derive');\nconst queries = require('./query');\nconst aggregate = require('./aggregate');\nconst match = require('./match');\n\nmodule.exports = function pipeline (data){\n    var queue = [],\n        cache = {},\n        opt = {},\n        workers = [],\n        completed = 0,\n        result = [],\n        callback = function() {};\n\n    if(Array.isArray(data)) {\n        result = data;\n    }\n\n    opt.derive = derive;\n    opt.match = match;\n    opt.aggregate = aggregate;\n\n    Object.keys(queries).forEach(function(f) {\n        opt[f] = queries[f];\n    });\n\n    opt.cache = function(data, tag){\n        cache[tag] = pipeline.result();\n    };\n\n    opt.map = function(f){\n        result = data.map(f);\n        return pipeline;\n    };\n\n    var merge = {\n        aggregate: function (lastJob) {\n            var mergeSpec = {};\n            for(var key in lastJob.aggregate) {\n                var optSpec = lastJob.aggregate[key];\n                if(typeof optSpec == 'object')\n                    mergeSpec[key] = Object.keys(optSpec)[0];\n                else\n                    mergeSpec[key] = optSpec;\n            }\n            return opt.aggregate(finalResult, mergeSpec);\n        }\n    }\n\n    var finalResult = [];\n\n    function mergeResult(workerResult) {\n        var rl = finalResult.length,\n            wl = workerResult.length;\n        for(var i = 0; i < wl; i++) {\n            finalResult[rl+i] = workerResult[i];\n        }\n        completed += 1;\n\n        if(completed == workers.length) {\n            var lastJob = queue[queue.length-1],\n                lastJobOpt = Object.keys(lastJob)[0];\n            if( lastJobOpt == 'aggregate') {\n                finalResult = merge.aggregate(lastJob);\n            }\n            callback(finalResult);\n        }\n    }\n\n    var pipeline = {};\n\n    // pipeline.opt = opt;\n    Object.keys(opt).forEach(function(o){\n        pipeline[o] = function(spec) {\n            var task = {};\n            task[o] = spec;\n            queue.push(task);\n            return pipeline;\n        };\n    })\n\n    pipeline.then = function(_callback) {\n        callback = _callback;\n        queue.forEach(function(q){\n            var f = Object.keys(q)[0];\n            result = opt[f](result, q[f]);\n        });\n        return result;\n    }\n\n    pipeline.execute = function(data) {\n        if(Array.isArray(data)) result = data;\n        queue.forEach(function(q){\n            var f = Object.keys(q)[0];\n            result = opt[f](result, q[f]);\n        });\n        return result;\n    }\n\n    pipeline.oncomplete = pipeline.then;\n\n    pipeline.result = function() {\n        return result;\n    };\n\n    pipeline.data = function(data) {\n        result = data;\n        return pipeline\n    }\n\n    pipeline.queue = function() {\n        return queue;\n    }\n\n    return pipeline;\n}\n","const arrayOpts = require(\"./arrays.js\");\nconst aggregate = require(\"./aggregate.js\");\nconst match = require(\"./match.js\");\n\nvar query = {};\nquery.match = match;\nquery.group = aggregate;\n\nquery.indexBy = function(data, id){\n    var indexed = {};\n    data.forEach(function(d){\n        if(!indexed.hasOwnProperty(d[id])){\n            indexed[d[id]] = [ d ];\n        } else {\n            indexed[d[id]].push(d);\n        }\n        delete d[id];\n    });\n    return indexed;\n};\n\n// query.list = function(data, id) {\n//     return data.map(function(d){return d[id];});\n// }\n\nquery.range = function(data, id) {\n    var array = data.map(function(d){return d[id];});\n    return [ arrayOpts.min(array), arrayOpts.max(array) ];\n};\n\nquery.map = function(data, m) {\n    var mf = function(d){return d};\n    if(typeof m === \"string\")\n        mf = function(d){return d[m]};\n    else if(typeof m === \"function\")\n        mf = m;\n\n    return data.map(mf);\n};\n\n// Object.keys(arrayOpts).forEach(function(opt) {\n//     query[opt] = function(data, id) {\n//         var arr = query.map(data, id);\n//         return arrayOpts[opt](arr);\n//     }\n// });\n\n\n\nquery.sortBy = function(data, spec) {\n    function sortArray(a, b, p) {\n        return a[p] > b[p] ? 1 : a[p] < b[p] ? -1 : 0;\n    }\n    return data.sort(function(a, b){\n        var r = 0,\n            i = 0,\n            attributes = Object.keys(spec),\n            al = attributes.length;\n\n        while( r === 0 && i < al ) {\n            r = sortArray(a, b, attributes[i]) * spec[attributes[i]];\n            i++;\n        }\n        return r;\n    })\n};\n\nquery.orderBy = function(c, s, o) {\n    var spec = {};\n    s.forEach(function(ss){\n        spec[ss] = o;\n    });\n    return query.sort(c, spec);\n};\n\nquery.histogram = function(data, spec, max, min) {\n    var result = {};\n    for(var key in spec) {\n        result[key] = arrayOpts.histogram(data.map(function(d){return d[key]}), spec[key], max, min);\n    }\n    return result;\n};\n\nquery.binAggregate = function(data, spec) {\n    var attrKey = Object.keys(spec)[0],\n        attributes = Object.keys(spec).filter(function(k) { return k != \"$data\" && k!=attrKey;}) || [],\n        embedData = spec.$data || false,\n        numBin = spec[attrKey],\n        array = data.map(function(d){ return d[attrKey]; }),\n        l = array.length,\n        min = arrayOpts.min(array),\n        max = arrayOpts.max(array),\n        range = max - min,\n        interval = range / numBin,\n        bins = [];\n\n\n    for(var b = 0; b < numBin; b++) {\n        bins[b] = {binID: b, rangeBegin: min + range * (b/(numBin)), rangeEnd: min + range*(b+1)/(numBin), count: 0};\n        // if(embedData)\n            bins[b].data = [];\n        // attributes.forEach(function(attr){\n        //     bins[b][attr] = 0;\n        // })\n    }\n\n    // bins[numBin] = [];\n\n    for(var i = 0; i < l; i++) {\n        binID = Math.floor( (array[i] - min) / range * (numBin));\n        if(binID == numBin) binID--;\n        data[i].binID = binID;\n        // if(embedData)\n            bins[binID].data.push(data[i]);\n        // bins[binID].count++;\n        // attributes.forEach(function(attr){\n        //     bins[binID][attr] += data[i][attr];\n        // });\n    }\n\n    spec.$by = \"binID\";\n    delete spec[attrKey];\n\n    var result = query.group(data, spec);\n    result = query.indexBy(result, \"binID\");\n\n\n    // result.forEach(function(r){\n    //     r.rangeBegin = bins[r.binID].rangeBegin;\n    //     r.rangeEnd = bins[r.binID].rangeEnd;\n    // })\n\n    bins.forEach(function(bin){\n\n        if(result.hasOwnProperty(bin.binID)) {\n            attributes.forEach(function(attr){\n                bin[attr] = result[bin.binID][0][attr];\n            });\n            if(embedData) bin.data = result[bin.binID][0].data;\n        } else {\n            attributes.forEach(function(attr){\n                bin[attr] = 0;\n            });\n        }\n\n    })\n    // console.log(bins);\n    // return result;\n    return bins;\n}\n\nquery.partition = function(data, numPart) {\n    var len = data.length,\n        p = Math.ceil(len / numPart),\n        pid,\n        partitions = [];\n\n    for(var b = 0; b < numPart; b++) {\n        partitions[b] = {partition: b, data: [], count: 0};\n    }\n\n    for(var i = 0; i < len; i++) {\n        pid = Math.floor(i / p);\n        partitions[pid].data.push(data[i]);\n        partitions[pid].count++;\n    }\n\n    return partitions;\n}\n\nquery.partitionBy = function(data, spec) {\n    var len = data.length,\n        pid,\n        partitions = [],\n        key = Object.keys(spec)[0],\n        parts = spec[key];\n\n    parts.forEach(function(b, bi) {\n        partitions[bi] = {partition: bi, data: [], count: 0, name: b};\n    })\n\n    for(var i = 0; i < len; i++) {\n        pid = parts.indexOf(data[i][key]);\n        if(pid>-1){\n            partitions[pid].data.push(data[i]);\n            partitions[pid].count++;\n        }\n    }\n    return partitions;\n}\n\nquery.normalize = function(data, fields) {\n    var hash = {};\n\n    fields.forEach(function(f){\n        var array = data.map(function(d){ return d[f]; });\n        hash[f] = arrayOpts.normalize(array);\n    });\n\n    data.forEach(function(d, i){\n        fields.forEach(function(f){\n            d[f] = hash[f][i];\n        });\n    });\n\n    return data;\n}\n\nquery.toColumnArray = function(data) {\n    var columnArray = [];\n        attributes = Object.keys(data[0]).filter(function(k) { return k; });\n\n    attributes.forEach(function(attr){\n        columnArray.push(data.map(function(d){return d[attr];}));\n    });\n\n    columnArray.fields = attributes;\n\n    attributes.forEach(function(attr, ai){\n        columnArray[attr] = columnArray[ai];\n    });\n\n    return columnArray;\n}\n\nmodule.exports = query;\n","var array = require(\"./arrays\");\n\nfunction stats(data, fields){\n\n    if(!Array.isArray(data))\n        throw new Error(\"Inproper input data format.\");\n\n    var result = {};\n\n    fields.forEach(function(f) {\n        var a = data.map(function(d){return d[f]; });\n        result[f] = {\n            min: array.min(a),\n            max: array.max(a),\n            avg: array.avg(a),\n            std: array.std(a)\n        };\n    });\n\n    return result;\n};\n\n\nstats.domains = function(data, fields) {\n    if(!Array.isArray(data))\n        throw new Error(\"Inproper input data format.\");\n\n    var result = {};\n\n    fields.forEach(function(f) {\n        var a = data.map(function(d){return d[f]; });\n        result[f] = [ array.min(a), array.max(a) ];\n    });\n\n    return result;\n}\n\nmodule.exports = stats;\n","module.exports = function toArray(data, arg){\n    var options = arg || {},\n        fields = options.fields || Object.keys(data[0]) || [],\n        format = options.format || 'row';\n\n    if(format == 'row') {\n        return data.map(function(d){\n            var row = new Array(fields.length);\n            fields.forEach(function(f, i){\n                row[i] = d[f];\n            });\n            return row;\n        });\n    } else {\n        return fields.map(function(f){\n            return data.map(function(d){ return d[f]; })\n        })\n    }\n}\n","export default function Attribute(glContext) {\n    \n    var attribute = (this instanceof Attribute) ? this : {},\n        ctx = glContext,\n        attributeID = 0;\n\n    function setAttribute(name, data) {\n        if(Array.isArray(data) || ArrayBuffer.isView(data)){\n            if(!ArrayBuffer.isView(data)) data = new Float32Array(data);\n            attribute[name].data = data;\n            ctx.bindBuffer(ctx.ARRAY_BUFFER, attribute[name].ptr);\n            ctx.bufferData(ctx.ARRAY_BUFFER, data, ctx.STATIC_DRAW);\n        }\n    }\n    attribute.create = function(name, type, data) {\n        attribute[name] = {\n            name: name,\n            type: type || 'float',\n            data: null,\n            location: attributeID++,\n            ptr: ctx.createBuffer(),\n            size: parseInt(type.slice(3,4)) || 1\n        };\n\n        if(data !== null && data.length) setAttribute(name, data);\n\n        attribute[name].link = function(program) {\n            ctx.bindBuffer(ctx.ARRAY_BUFFER, this.ptr);\n            this.location = ctx.getAttribLocation(program, this.name);\n            ctx.vertexAttribPointer(this.location, this.size, ctx.FLOAT, false, 0, 0);\n            ctx.enableVertexAttribArray(this.location);\n            return this;\n        }\n\n        attribute[name].load = function(arrayBuffer) {\n            setAttribute(this.name, arrayBuffer);\n            return this;\n        }\n\n        attribute[name].header = function() {\n            return 'attribute ' + this.type + ' ' + this.name + ';\\n';\n        }\n\n        attribute[name].delete = function() {\n            ctx.deleteBuffer(this.ptr);\n        }\n\n        return attribute[name];\n    };\n\n    return attribute;\n}\n","import Resource from './resource';\nimport ProgramManager from './program';\nimport Shader from './shader';\nimport Framebuffer from './framebuffer';\n\nexport default function FlexGL(arg) {\n\n    var flexgl = (this instanceof FlexGL) ? this : {},\n        options = arg || {},\n        container = options.container || null,\n        canvas = options.canvas || document.createElement(\"canvas\"),\n        width = options.width || null,\n        height = options.height || null,\n        padding = options.padding || {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        },\n        ctx = options.context || options.ctx || null,\n        kernels = {},\n        program = null,\n        sharedFunction = options.sharedFunction || {};\n\n\n    if (typeof(canvas) == \"string\") {\n        if (canvas[0] == \"#\") canvas = document.getElementById(cavnas.substring(1));\n        else canvas = document.getElementById(cavnas);\n    }\n    if (container) {\n        container = (typeof(container) == \"string\") ? document.getElementById(container) : container;\n        if (width === null) width = container.clientWidth;\n        if (height === null) height = container.clientHeight;\n    }\n    // width -= padding.left + padding.right;\n    // height -= padding.top + padding.bottom;\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.position = \"absolute\";\n    canvas.style.marginLeft = padding.left + \"px\";\n    canvas.style.marginTop = padding.top + \"px\";\n\n    if (ctx === null)\n        ctx = setupWebGL(canvas);\n    flexgl.ctx = ctx;\n    flexgl.canvas = canvas;\n\n    ctx._dict = options.env || options.dict || options.dictionary || {};\n\n\n    var resources = new Resource(ctx),\n        framebuffers = new Framebuffer(ctx),\n        programManager = new ProgramManager(ctx, resources),\n        shaders = new Shader(ctx, resources);\n\n    var blendExt = ctx.getExtension(\"EXT_blend_minmax\");\n    if (blendExt) {\n        ctx.MAX_EXT = blendExt.MAX_EXT;\n        ctx.MIN_EXT = blendExt.MIN_EXT;\n    }\n\n    ctx.ext = ctx.getExtension(\"ANGLE_instanced_arrays\");\n    enableExtension([\n        \"OES_texture_float\",\n        \"OES_texture_float_linear\",\n        // \"OES_texture_half_float\",\n        // \"OES_texture_half_float_linear\"\n    ]);\n\n    if (container)\n        container.appendChild(canvas);\n\n    function setupWebGL(canvas) {\n        var names = [\"webgl\", \"experimental-webgl\"];\n        var gl = null;\n        for (var i = 0; i < names.length; ++i) {\n            try {\n                gl = canvas.getContext(names[i]);\n            } catch (e) {}\n            if (gl) break;\n        }\n        return gl;\n    }\n\n    function enableExtension(extensions) {\n        if (!Array.isArray(extensions)) extensions = [extensions];\n        extensions.forEach(function(extension) {\n            var extProps = ctx.getExtension(extension);\n            if (extProps !== null) {\n                Object.keys(extProps).forEach(function(ep) {\n                    if (!ext.hasOwnProperty(ep)) {\n                        ctx.ext[ep] = extProps[ep];\n                    }\n                })\n            }\n        });\n    };\n\n    flexgl.enableExtension = enableExtension;\n\n    /**\n     * Allocate Attributes in vertex buffer array stored in GPU memory\n     * @param  {String} name attribute name\n     * @param  {String} type attribute type: float, vec2, ...\n     * @param  {Array} data data values\n     * @return {Object}      FLexGL object\n     */\n    flexgl.attribute = function(name, type, data) {\n        resources.allocate(\"attribute\", name, type, data);\n        Object.defineProperty(flexgl.attribute, name, {\n            get: function() {\n                return resources.attribute[name];\n            },\n            set: function(data) {\n                resources.attribute[name].load(data);\n            }\n        });\n        return flexgl;\n    };\n    flexgl.buffer = flexgl.attribute; //alias\n\n    /**\n     * Create a Uniform variable for WebGL shader programs\n     * @param  {String} name attribute name\n     * @param  {String} type uniform variable type: float, vec2, ...\n     * @param  {Array} data data values\n     * @return {Object}      FLexGL object\n     */\n    flexgl.uniform = function(name, type, data) {\n        resources.allocate(\"uniform\", name, type, data);\n        if (!flexgl.uniform.hasOwnProperty(name)) {\n            Object.defineProperty(flexgl.uniform, name, {\n                get: function() {\n                    return resources.uniform[name];\n                },\n                set: function(data) {\n                    resources.uniform[name].load(data);\n                    if (ctx.isProgram(program))\n                        resources.uniform[name].link(program);\n                }\n            });\n        }\n        return flexgl;\n    };\n\n    flexgl.uniform.serialize = function(aoa) {\n        var sa = [];\n        aoa.forEach(function(a) {\n            sa = sa.concat(a);\n        })\n        return sa;\n    }\n\n    /**\n     * Create a Uniform variable for WebGL shader programs\n     * @param  {String} name attribute name\n     * @param  {String} type texture type: unsigned_byte or float, ...\n     * @param  {Array} data data values\n     * @param  {Array} dim [width, height]\n     * @param  {String} [channel='alpha'] WebGL formats (rgba, alpha)\n     * @param  {Object} [sampler=null] FLexGL Uniform Object\n     * @return {Object}      FLexGL object\n     */\n    flexgl.texture = function(name, type, data, dim, channel, sampler) {\n        resources.allocate(\"texture\", name, type, dim, channel, data, sampler);\n        Object.defineProperty(flexgl.texture, name, {\n            get: function() {\n                return resources.texture[name];\n            },\n            set: function(data) {\n                resources.texture[name].load(data);\n            }\n        });\n        return flexgl;\n    }\n\n    flexgl.texture.update = function(name, data, offset, dim) {\n        resources.texture[name].update(data, offset, dim);\n    }\n\n    /**\n     * Create a Uniform variable for WebGL shader programs\n     * @param  {String} name attribute name\n     * @param  {String} [type] Varying variable type: float, vec2, ...\n     * @param  {Number} [size=1] data array\n     * @return {Object}      FLexGL object\n     */\n    flexgl.varying = function(name, type, size) {\n        resources.allocate(\"varying\", name, type, size);\n        return flexgl;\n    };\n\n    /**\n     * Create a Uniform variable for WebGL shader programs\n     * @param  {String} name attribute name\n     * @param  {String} type attribute type: float, vec2, ...\n     * @param  {Array} dim [width, height]\n     * @param  {Object} [texture=null] FLexGL Texture Object\n     * @return {Object}      FLexGL object\n     */\n    flexgl.framebuffer = function(name, type, dim, texture) {\n        var texture = texture || resources.allocate('texture', name, type, dim, 'rgba', null);\n\n        framebuffers.create(name, type, dim, texture);\n        if (!flexgl.framebuffer.hasOwnProperty(name)) {\n            Object.defineProperty(flexgl.framebuffer, name, {\n                get: function() {\n                    return framebuffers[name];\n                }\n            });\n        }\n        return flexgl;\n    }\n\n    flexgl.framebuffer.enableRead = function(name) {\n        framebuffers[name].enableRead(program);\n    }\n\n    flexgl.bindFramebuffer = function(fbName) {\n        if (fbName === null)\n            ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n        else\n            ctx.bindFramebuffer(ctx.FRAMEBUFFER, framebuffers[fbName].ptr);\n    }\n\n    flexgl.subroutine = function(name, type, fn) {\n        resources.allocate(\"subroutine\", name, type, fn);\n        return flexgl;\n    }\n\n    flexgl.parameter = function(keyValuePairs) {\n        Object.keys(keyValuePairs).forEach(function(key) {\n            ctx._dict[key] = keyValuePairs[key];\n            if (Array.isArray(ctx._dict[key])) {\n                var i = 0;\n                Object.defineProperty(ctx._dict, key, {\n                    get: function() {\n                        return keyValuePairs[key][i++];\n                    },\n                    set: function(newArray) {\n                        i = 0;\n                        ctx._dict[key] = newArray;\n                    }\n                });\n            } else if(typeof(ctx._dict[key]) == 'object') {\n                var dictKeys = Object.keys(ctx._dict[key]);\n                fxgl.uniform('dict'+key, 'float', dictKeys.map(d=>ctx._dict[key][d]));\n            }\n        })\n        return flexgl;\n    }\n\n    flexgl.dictionary = flexgl.parameter;\n\n    flexgl.shader = programManager.shader;\n\n    flexgl.program = function(name, vs, fs) {\n        program = programManager.program(name, vs, fs);\n        return ctx;\n    }\n\n    flexgl.createProgram = function(name, vs, fs) {\n        program = programManager.create(name, vs, fs);\n        return ctx;\n    }\n\n    flexgl.app = function(name, props) {\n        var vs = flexgl.shader.vertex(props.vs),\n            fs = flexgl.shader.fragment(props.fs),\n            fb = props.framebuffer || null;\n\n        flexgl.program(name, vs, fs);\n\n        var draw = props.render || props.draw;\n\n        return function(args) {\n            var gl = flexgl.program(name);\n            return draw.call(gl, args);\n        }\n    }\n\n    flexgl.dimension = function() {\n        return [canvas.width, canvas.height];\n    }\n\n    flexgl.resources = resources;\n\n    return flexgl;\n}\n","import Texture from './texture';\n\nexport default function Framebuffer(glContext) {\n\n    var framebuffer = (this instanceof Framebuffer) ? this : {},\n        ctx = glContext;\n\n    framebuffer.create = function(name, type, dim, texture) {\n\n        framebuffer[name] = {\n            ptr: ctx.createFramebuffer(),\n            name: name,\n            type: type || \"float\",\n            width: dim[0] || 1024,\n            height: dim[1] || 1024,\n            texture: texture || null,\n            renderbuffer: ctx.createRenderbuffer(),\n        }\n\n        if (framebuffer[name].texture === null) {\n            var buf = (type == 'float') ?\n                new Float32Array(dim[0] * dim[1] * 4) :\n                new Uint8Array(dim[0] * dim[1] * 4);\n            framebuffer[name].texture = Texture(ctx).create(name, type, dim, \"rgba\", buf);\n        }\n\n        var renderbuffer = framebuffer[name].renderbuffer;\n        ctx.bindFramebuffer(ctx.FRAMEBUFFER, framebuffer[name].ptr);\n        ctx.bindRenderbuffer(ctx.RENDERBUFFER, renderbuffer);\n        ctx.renderbufferStorage(\n            ctx.RENDERBUFFER,\n            ctx.DEPTH_COMPONENT16,\n            framebuffer[name].width,\n            framebuffer[name].height\n        );\n        ctx.framebufferTexture2D(\n            ctx.FRAMEBUFFER,\n            ctx.COLOR_ATTACHMENT0,\n            ctx.TEXTURE_2D,\n            framebuffer[name].texture.ptr,\n            0\n        );\n        ctx.framebufferRenderbuffer(\n            ctx.FRAMEBUFFER,\n            ctx.DEPTH_ATTACHMENT,\n            ctx.RENDERBUFFER,\n            renderbuffer\n        );\n        ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);\n        ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n\n        framebuffer[name].enableRead = function(program) {\n            ctx.activeTexture(ctx.TEXTURE0 + this.texture.index);\n            ctx.bindTexture(ctx.TEXTURE_2D, this.texture.ptr);\n            this.texture.location = ctx.getUniformLocation(program, this.texture.name);\n            ctx.uniform1i(this.texture.location, this.texture.index);\n        };\n\n        framebuffer[name].delete = function() {\n            ctx.bindRenderbuffer(gl.RENDERBUFFER, null);\n            ctx.bindFramebuffer(gl.FRAMEBUFFER, null);\n            ctx.deleteRenderbuffer(this.renderbuffer);\n            ctx.deleteTexture(this.texture.ptr)\n            ctx.deleteFramebuffer(this.ptr);\n        };\n\n        return framebuffer[name];\n    }\n\n    return framebuffer;\n}\n","import Shader from './shader';\n\nexport default function Program(glContext, resources) {\n\n    var program,\n        ctx = glContext,\n        pm = {},\n        kernels = {},\n        shaders = new Shader(glContext, resources);\n\n    pm.create = function(name, vs, fs) {\n        var name = name || \"default\",\n            vs = vs || \"default\",\n            fs = fs || \"default\",\n            deps = [];\n\n        if (kernels.hasOwnProperty(name)) {\n            pm.delete(name);\n        }\n\n        kernels[name] = ctx.createProgram();\n\n        kernels[name].vs = (typeof vs == \"object\") ? vs : shaders.vertex[vs];\n        kernels[name].fs = (typeof fs == \"object\") ? fs : shaders.fragment[fs];\n\n        ctx.attachShader(kernels[name], kernels[name].vs);\n        ctx.attachShader(kernels[name], kernels[name].fs);\n        ctx.linkProgram(kernels[name]);\n        var linked = ctx.getProgramParameter(kernels[name], ctx.LINK_STATUS);\n        if (!linked) {\n            var lastError = ctx.getProgramInfoLog(kernels[name]);\n            throw (\"Error in program linking:\" + lastError);\n            ctx.deleteProgram(kernels[name]);\n            return null;\n        }\n\n        deps = deps.concat(kernels[name].vs.deps);\n        deps = deps.concat(kernels[name].fs.deps);\n        kernels[name].deps = deps;\n\n        return kernels[name];\n    }\n\n    pm.use = pm.program = function(name, vs, fs) {\n        if (kernels.hasOwnProperty(name)) {\n            program = kernels[name];\n            ctx.useProgram(program);\n            resources.link(program, program.deps);\n            return program;\n        } else {\n            return pm.create(name, vs, fs);\n        }\n    }\n\n    pm.delete = function(name) {\n        if (kernels.hasOwnProperty(name)) {\n            ctx.detachShader(kernels[name], kernels[name].vs);\n            ctx.detachShader(kernels[name], kernels[name].fs);\n            ctx.deleteProgram(kernels[name]);\n            delete kernels[name];\n        }\n    }\n\n    pm.shader = function(arg, fn) {\n        var options = arg;\n        shaders.create(options, fn);\n        return pm;\n    }\n\n    pm.shader.vertex = function(fn) {\n        var options = {\n            type: \"vertex\"\n        };\n        if (fn.name) options.name = fn.name;\n        return shaders.create(options, fn);\n    }\n\n    pm.shader.fragment = function(fn) {\n        var options = {\n            type: \"fragment\"\n        };\n        if (fn.name) options.name = fn.name;\n        return shaders.create(options, fn);\n    }\n\n    return pm;\n}\n","import Uniform from './uniform';\nimport Attribute from './attribute';\nimport Texture from './texture';\nimport Varying from './varying';\nimport Subroutine from './subroutine';\n\nexport default function Resource(glContext) {\n    var resource = (this instanceof Resource) ? this : {},\n        gpuResources = {};\n\n    resource.uniform = new Uniform(glContext);\n    resource.attribute = new Attribute(glContext);\n    resource.texture = new Texture(glContext);\n    resource.varying = new Varying(glContext);\n    resource.subroutine = new Subroutine();\n\n    var resourceTypes = ['uniform', 'attribute', 'texture', 'varying', 'subroutine'];\n\n    resource.allocate = function(type, props) {\n        if (resourceTypes.indexOf(type) === -1) {\n            throw Error(\"Error: Invalid resource type: \" + type);\n        }\n        var res = resource[type].create.apply(null, Array.prototype.slice.call(arguments, 1));\n        res.resourceType = type;\n        gpuResources[res.name] = res;\n        if (!gpuResources.hasOwnProperty(res.name)) {\n            Object.defineProperty(gpuResources, res.name, {\n                get: function() {\n                    return gpuResources[res.name];\n                },\n                set: function(data) {\n                    gpuResources[res.name].load(data);\n                }\n            });\n        }\n        return res;\n    };\n\n    resource.link = function(program, resources) {\n        var requiredResources = (Array.isArray(resources)) ? resources : Object.keys(gpuResources);\n        requiredResources.forEach(function(resourceName) {\n            if (gpuResources.hasOwnProperty(resourceName))\n                gpuResources[resourceName].link(program);\n        })\n    };\n\n    resource.get = function(name) {\n        return gpuResources[name];\n    }\n\n    resource.create = resource.allocate;\n\n    return resource;\n};\n","export default function Shader(glContext, glResource) {\n    \n    var shader = (this instanceof Shader) ? this : {},\n        ctx = glContext,\n        resource = glResource,\n        parameters = ctx._dict || {};\n\n    shader.vertex = {};\n    shader.fragment = {};\n\n    var shaderType = {\n        vertex: ctx.VERTEX_SHADER,\n        fragment: ctx.FRAGMENT_SHADER\n    };\n\n    // Convert JS functions to GLSL codes\n    function toGLSL(returnType, name, fn){\n\n        var glsl = returnType + ' ' +\n            name + '(' + applyEnvParameters(fn.toString())\n            .replace(\n                /var\\s+([\\w|\\d]+)\\s*=\\s*new\\s+([\\w|\\d]+)\\((.*)\\)/g,\n                function(expr, name, dtype, value){\n                    var parts;\n                    if(value)\n                        parts = [dtype.toLowerCase(), name, '=', value];\n                    else\n                        parts = [dtype.toLowerCase(), name];\n\n                    return parts.join(' ')\n                }\n            )\n            .replace(/for\\s*\\(\\s*var\\s+/g, 'for(int ')\n            .replace(/var\\s/g, 'float ')\n            .replace(/this./g, '')\n            .replace(/\\$(.*)\\((.*)\\)\\s*(=|;)/g, \"$1 $2 $3\");\n            // .replace(/\\$(.*?)\\./g, \"$1 \")\n\n        if(name == \"main\") {\n            glsl = glsl.replace(/function.*\\(\\s*([\\s\\S]*?)\\s*{/, '){') + \"\\n\";\n        } else {\n            var args = glsl.match(/function.*\\(\\s*([\\s\\S]*?)\\s*\\)/)[1];\n\n            if(args != \"\") {\n                args = args.replace(/\\$([\\w|\\d]+)_/g, \"$1 \");\n            }\n            glsl = glsl\n                .replace(/function.*\\(\\s*([\\s\\S]*?)\\s*\\)/, args+')') + \"\\n\";\n        }\n        return glsl;\n    }\n\n    //set parameters in JS functions before converting to GLSL codes\n    function applyEnvParameters(str){\n        //find all $(...) and replace them with parameters\n        var envParam = Object.keys(parameters);\n        if(envParam.length > 0){\n            var re = new RegExp(\"\\\\$\\\\((\"+envParam.join(\"|\")+\")\\\\)\",\"g\");\n            str = str.replace(re, function(matched){\n                return parameters[matched.slice(2,matched.length-1)];\n            });\n        }\n\n        // Make uniforms to be used as parameters in shaders, like $(uniformName)\n        // var envUniforms = Object.keys(resource.uniform);\n        // re = new RegExp(\"\\\\$\\\\((\"+envUniforms.join(\"|\")+\")\\\\)\",\"g\");\n        // str = str.replace(re, function(matched){\n        //     return resource.uniform[matched.slice(2,matched.length-1)].data;\n        // });\n\n        return str;\n    }\n\n    function compile(shaderType, shaderSource) {\n        if (shaderType !== ctx.VERTEX_SHADER && shaderType !== ctx.FRAGMENT_SHADER) {\n            throw (\"Error: unknown shader type\");\n        }\n        var _shader = ctx.createShader(shaderType);\n        ctx.shaderSource(_shader, shaderSource);\n        ctx.compileShader(_shader);\n\n        // Check the compile status, get compile error if any\n        var compiled = ctx.getShaderParameter(_shader, ctx.COMPILE_STATUS);\n        if (!compiled) {\n            var lastError = ctx.getShaderInfoLog(_shader);\n            console.log(shaderSource + '\\n ====================================================');\n            throw new Error(\"Error compiling shader '\" + _shader + \"':\" + lastError);\n\n            ctx.deleteShader(_shader);\n            return null;\n        }\n\n        return _shader;\n    }\n\n    function getDeps(fn) {\n        var deps = [],\n            sourceCode = fn.toString(),\n            shaderArgs = sourceCode.match(/function\\s.*?\\(([^)]*)\\)/),\n            args = (shaderArgs !== null && shaderArgs.length) ? shaderArgs[1] : [];\n        // args = args.replace(/(?:\\r\\n|\\r|\\n|\\s)/g, '');\n        //\n        if(args.length) {\n            deps = args.split(',').map(function(arg) {\n                return arg.replace(/\\/\\*.*\\*\\//, '').trim();\n            }).filter(function(arg) {\n                return arg;\n            });\n        }\n\n        var extraDeps = getExtraDeps(sourceCode);\n        if(extraDeps.length) {\n            deps = deps.concat(extraDeps\n            .filter(function(d){\n                return deps.indexOf(d) === -1;\n            }))\n        }\n\n        return deps;\n    }\n\n    function getExtraDeps(fnString) {\n        var extraDeps = fnString.match(/this\\.(\\w+)/g);\n        if(extraDeps !== null) {\n            extraDeps = extraDeps.map(function(d){\n                return d.slice(5);\n            });\n        }\n        return extraDeps || [];\n    }\n\n    function declareDep(dep) {\n        var res = resource.get(dep);\n        if(typeof res === 'undefined')\n            throw new Error('Resource/dependence \"' + dep + '\" is not found.');\n        if(res.resourceType == 'subroutine')\n            return toGLSL(res.type, res.name, res.fn);\n        else\n            return res.header();\n    }\n\n    function uniqueDeps(deps) {\n        var names = {};\n        deps.forEach(function(d, i){\n            names[d] = i;\n        });\n\n        return Object.keys(names);\n    }\n\n    shader.create = function(arg, fn){\n        var option = arg || {},\n            name = option.name || \"default\",\n            type = option.type || \"vertex\",\n            deps = option.require || option.deps || [],\n            precision = option.precision || \"high\",\n            debug = option.debug || false,\n            main = option.main || fn || function() {};\n\n        var shaderSource = 'precision ' + precision + 'p float;\\n';\n\n        if(deps.length === 0) deps = uniqueDeps(getDeps(main));\n\n        //get dependence from subroutines if any\n        var extraDeps = [],\n            subRoutines = [];\n\n        deps.forEach(function(dep){\n            var res = resource.get(dep);\n            if(typeof res == 'undefined') {\n                console.log(dep);\n                throw Error ('Error! Undefined variable in shader: '+  dep.name);\n            }\n            if(res.resourceType == 'subroutine') {\n                subRoutines.push(res.name);\n                var subDeps = getExtraDeps(res.fn.toString());\n                if(subDeps.length) {\n                    //TODO: make this recursive to check all subroutine deps\n                    subDeps.forEach(function(sdep){\n                        var sres = resource.get(sdep);\n                        if(sres.resourceType == 'subroutine')\n                            extraDeps = extraDeps.concat(getExtraDeps(sres.fn.toString()));\n                    })\n\n                    extraDeps = extraDeps.concat(subDeps);\n                }\n            }\n        })\n\n        if(extraDeps.length) {\n            var allDeps = extraDeps\n            // .filter(function(d){\n            //     return deps.indexOf(d) === -1;\n            // })\n            .concat(deps.filter(function(d){\n                return subRoutines.indexOf(d) === -1;\n            }))\n            .concat(subRoutines);\n\n            deps = uniqueDeps(allDeps);\n        }\n\n\n        if(Array.isArray(deps)){\n            deps.forEach(function(dep){\n                shaderSource += declareDep(dep);\n            });\n        } else if(typeof(deps) == 'object') {\n            Object.keys(deps).forEach(function(resourceType){\n                deps[resourceType].forEach(function(dep){\n                    shaderSource += declareDep(dep);\n                });\n            })\n        }\n\n        shaderSource += toGLSL('void', 'main', main);\n        if(debug)\n            console.log(shaderSource);\n        var _shader = compile(shaderType[type], shaderSource);\n        _shader._shaderType = shaderType[type];\n        _shader.deps = deps;\n        _shader.source = shaderSource;\n        shader[type][name] = _shader;\n        return _shader;\n    }\n\n    return shader;\n}\n","export default function Subroutine() {\n\n    var subroutine = (this instanceof Subroutine) ? this : {};\n\n    subroutine.create = function(name, type, fn) {\n        subroutine[name] = {\n            name: name,\n            type: type || 'float',\n            fn: fn,\n            resourceType: \"subroutine\"\n        };\n\n        subroutine[name].link = function(program) {\n            return this;\n        }\n\n        subroutine[name].load = function(fn) {\n            subroutine[name].fn = fn;\n            return this;\n        }\n\n        subroutine[name].header = function() {\n            return this.fn.toString();\n        }\n\n        return subroutine[name];\n    };\n\n    return subroutine;\n}\n","import Uniform from \"./uniform\";\n\nexport default function Texture(glContext) {\n\n    var texture = (this instanceof Texture) ? this : {},\n        ctx = glContext,\n        textureID = 0;\n\n    function setTexture(name, texData) {\n        var type = ctx[texture[name].type.toUpperCase()],\n            format = ctx[texture[name].channel.toUpperCase()],\n            width = texture[name].dim[0],\n            height = texture[name].dim[1];\n\n        texture[name].data = texData;\n\n        ctx.bindTexture(ctx.TEXTURE_2D, texture[name].ptr);\n        ctx.texImage2D(ctx.TEXTURE_2D, 0, format, width, height, 0, format, type, texData);\n        ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MIN_FILTER, ctx.NEAREST);\n        ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MAG_FILTER, ctx.NEAREST);\n        ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_WRAP_S, ctx.CLAMP_TO_EDGE);\n        ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_WRAP_T, ctx.CLAMP_TO_EDGE);\n        ctx.bindTexture(ctx.TEXTURE_2D, null);\n    }\n\n    function updateTexture(name, texData, offset, dim) {\n        var type = ctx[texture[name].type.toUpperCase()],\n            format = ctx[texture[name].channel.toUpperCase()],\n            width = dim[0] || texture[name].dim[0],\n            height = dim[1] || texture[name].dim[1];\n\n        ctx.bindTexture(ctx.TEXTURE_2D, texture[name].ptr);\n        ctx.texSubImage2D(ctx.TEXTURE_2D, 0, offset[0], offset[1], width, height, format, type, texData);\n        ctx.bindTexture(ctx.TEXTURE_2D, null);\n    }\n\n    // TODO: Add support for texture compression\n    // function compressTexture(texData) {\n    //\n    //     var ext = (\n    //       ctx.getExtension(\"WEBGL_compressed_texture_s3tc\") ||\n    //       ctx.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\") ||\n    //       ctx.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\")\n    //     );\n    //\n    //     ctx.compressedTexImage2D(ctx.TEXTURE_2D, 0, ext.COMPRESSED_RGBA_S3TC_DXT3_EXT, texture[name].dim[0], texture[name].dim[1], 0, texData);\n    //     ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MAG_FILTER, ctx.LINEAR);\n    //     ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MIN_FILTER, ctx.LINEAR);\n    // }\n\n    texture.create = function(name, type, dim, channel, data, sampler) {\n        var texIndex = (texture.hasOwnProperty(name)) ? texture[name].index : textureID++;\n        texture[name] = {\n            name: name,\n            index: texIndex,\n            type: type || \"float\",\n            dim: dim || [512, 512],\n            channel: channel || \"alpha\",\n            data: null,\n            location: null,\n            sampler: sampler || null,\n            ptr: ctx.createTexture()\n        };\n\n        // if(data !== null && data.length)\n        setTexture(name, data);\n\n        if (texture[name].sampler === null) {\n            texture[name].sampler = Uniform(ctx).create(name, 'sampler2D', texture[name]);\n        } else {\n            texture[name].sampler.data = texture[name];\n        }\n\n        texture[name].link = function(program) {\n            if (this.data !== null) {\n                // ctx.activeTexture(ctx.TEXTURE0 + this.index);\n                // ctx.bindTexture(ctx.TEXTURE_2D, this.ptr);\n                // this.location = ctx.getUniformLocation(program, this.name);\n                // ctx.uniform1i(this.location, this.index);\n                if (typeof(this.sampler.data) == 'undefined' || this.sampler.data === null)\n                    this.sampler.data = texture[name];\n\n                this.sampler.link(program);\n            }\n            return this;\n        }\n\n        texture[name].load = function(texData) {\n            setTexture(this.name, texData);\n            return this;\n        }\n\n        texture[name].copyFromFBO = function() {\n            ctx.bindTexture(ctx.TEXTURE_2D, this.ptr);\n            ctx.copyTexImage2D(\n                ctx.TEXTURE_2D,\n                0,\n                ctx.RGBA,\n                0,\n                0,\n                this.dim[0],\n                this.dim[1],\n                0\n            );\n            ctx.bindTexture(ctx.TEXTURE_2D, null);\n        }\n\n        texture[name].update = function(texData, offset, dim) {\n            updateTexture(this.name, texData, offset, dim);\n            return this;\n        }\n\n        texture[name].resize = function(dim, data) {\n            this.dim = dim;\n            setTexture(this.name, data);\n        }\n\n        texture[name].delete = function() {\n            glContext.deleteTexture(this.ptr);\n        }\n\n        texture[name].header = function() {\n            if (this.name == this.sampler.name)\n                return 'uniform sampler2D ' + this.sampler.name + ';\\n';\n            else\n                return '';\n        }\n\n        return texture[name];\n    }\n\n    return texture;\n}\n","export default function Uniform(glContext, name, type, data) {\n\n    var uniform = (this instanceof Uniform) ? this : {},\n        ctx = glContext;\n\n    function serializeArray(arrayOfArray) {\n        var sa = [];\n        arrayOfArray.forEach(function(a){\n            sa = sa.concat(a);\n        })\n        return sa;\n    }\n\n    function setUniform() {\n        var type = this.type,\n            location = this.location,\n            size = this.size,\n            data = this.data;\n\n        if(Array.isArray(data)) {\n            var hasArray = data.filter(function(d){return Array.isArray(d);});\n            if(hasArray)\n                data = serializeArray(data);\n        }\n\n        if((type == 'float' || type == 'int') && !Array.isArray(data) && !ArrayBuffer.isView(data))\n            data = [data];\n\n        var buf;\n        if (type.slice(0,3) == 'vec' || type == 'float') {\n            buf = new Float32Array(data);\n            ctx['uniform' + size + 'fv'](location, buf);\n        } else if(type.slice(0,4) == 'ivec' || type == 'int'){\n            buf = new Int32Array(data);\n            ctx['uniform' + size + 'iv'](location, buf);\n        } else if(type.slice(0,3) == 'mat') {\n            buf = new Float32Array(data);\n            ctx['uniformMatrix' + size + 'fv'](location, false, buf);\n        } else if(type == 'sampler2D') {\n            if(data.hasOwnProperty('resourceType') && data.resourceType == 'texture') {\n                ctx.activeTexture(ctx.TEXTURE0 + data.index);\n                ctx.bindTexture(ctx.TEXTURE_2D, data.ptr);\n                ctx.uniform1i(location, data.index);\n            }\n        }\n    }\n\n    uniform.create = function(name, type, data) {\n\n        if(Array.isArray(data)) {\n            var hasArray = data.filter(function(d){return Array.isArray(d);});\n            if(hasArray)\n                data = serializeArray(data);\n        }\n\n        uniform[name] = {\n            type: type,\n            name: name,\n            data: data,\n            location: null,\n            size: parseInt(type.slice(3,4)) || parseInt(type.slice(4,5)) || 1\n        };\n\n        uniform[name].link = function(program) {\n            if(typeof this.data !== 'undefined' && this.data !== null) {\n                this.location = ctx.getUniformLocation(program, this.name);\n                setUniform.call(this);\n            }\n            return this;\n        };\n\n        uniform[name].load = function(data) {\n            this.data = data;\n            return this;\n        };\n\n        uniform[name].header = function() {\n            var header = 'uniform ' + this.type + ' ' + this.name,\n                len = 0;\n\n            if(this.type != 'sampler2D') {\n                len = this.data.length / this.size;\n            }\n\n            //TODO: fix declaration for matrix\n            if(len > 1 && type != 'mat4') {\n                header += '[' + len + ']';\n            }\n            return header + ';\\n';\n        };\n\n        return uniform[name];\n    }\n\n\n    return uniform;\n}\n","export default function Varying(glContext) {\n\n    var varying = (this instanceof Varying) ? this : {},\n        ctx = glContext;\n\n    varying.create = function(name, type, size) {\n        varying[name] = {\n            name: name,\n            type: type || 'float',\n            size: size || 1,\n        };\n\n        varying[name].link = function() {};\n\n        varying[name].header = function() {\n            var header = 'varying ' + this.type + ' ' + this.name;\n            if(this.size > 1)\n                header += '[' + this.size + ']';\n            return header + ';\\n';\n        }\n\n        return varying[name];\n    }\n\n    return varying;\n}\n","import p6 from './src/pipeline';\nimport cstore from './src/cstore';\nimport  * as ctypes  from './src/ctypes';\nimport * as ajax from './src/ajax';\nimport parse     from './src/parse';\n\nexport default p6;\n\nvar root = typeof self == 'object' && self.self === self && self ||\n           typeof global == 'object' && global.global === global && global ||\n           this;\n\nroot.p6 = p6;\nroot.p6.ajax = ajax;\nroot.p6.cstore = cstore;\nroot.p6.ctypes = ctypes;\nroot.p6.parse = parse;\n\n\n","import {seqFloat} from './utils';\n\nconst vecId = ['x', 'y', 'z'];\nconst aggrOpts = ['$min', '$max', '$count', '$sum', '$avg', '$var', '$std'];\n\nexport default function aggregate($p) {\n    var aggregate = {};\n\n    $p.uniform('uGroupGetStat', 'float', 0.0)\n        .uniform('uAggrOpt', 'int', 2);\n\n    function vertexShader() {\n        gl_PointSize = 1.0;\n\n        var i, j, k;\n        var x, groupKeyValue;\n\n        i = (this.aDataIdx + 0.5) / this.uDataDim.x;\n        j = (this.aDataIdy + 0.5) / this.uDataDim.y;\n        this.vResult = this.getData(this.uFieldId, i, j);\n\n        if (this.aDataIdy * this.uDataDim.x + this.aDataIdx >= this.uDataSize) {\n            this.vResult = 0.0;\n        }\n\n        if (this.uFilterFlag == 1) {\n            if (texture2D(this.fFilterResults, vec2(i, j)).a < this.uVisLevel - 0.01)\n                this.vResult = 0.0;\n        }\n\n        var pos = new Vec2();\n        for (var ii = 0; ii < 2; ii++) {\n            var gid = new Int();\n            gid = this.uGroupFields[ii];\n            if (gid != -1) {\n                if (this.uIndexCount > 0) {\n                    if (gid == 0) {\n                        groupKeyValue = i;\n                    } else if (gid == 1) {\n                        groupKeyValue = j;\n                    }\n                }\n                if (this.uIndexCount == 0 || gid > 1) {\n                    var d = new Vec2();\n                    d = this.getFieldDomain(gid);\n                    groupKeyValue = (this.getData(gid, i, j) - d.x) / (d.y - d.x) * (this.getFieldWidth(gid)) / (this.getFieldWidth(gid) + 1.);\n                    groupKeyValue += 0.5 / this.getFieldWidth(gid);\n                }\n                pos[ii] = groupKeyValue * 2.0 - 1.0;\n            } else {\n                pos[ii] = 0.5;\n            }\n        }\n\n        gl_Position = vec4(pos, 0.0, 1.0);\n    }\n\n    function fragmentShader() {\n        if (this.vResult == 0.0) discard;\n\n        if (this.uAggrOpt == 2)\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        else\n            gl_FragColor = vec4(0.0, 0.0, 1.0, this.vResult);\n    }\n\n    var vs = $p.shader.vertex(vertexShader),\n        fs = $p.shader.fragment(fragmentShader);\n\n    $p.program(\"group\", vs, fs);\n\n    var vs2 = $p.shader.vertex(function main() {\n        gl_Position = vec4(this._square, 0, 1);\n    });\n\n    var fs2 = $p.shader.fragment(function() {\n        var x, y, res;\n        $vec4(value);\n        x = (gl_FragCoord.x) / this.uResultDim.x;\n        y = (gl_FragCoord.y) / this.uResultDim.y;\n        y = (float(this.uFieldId - this.uIndexCount) + y) / float(this.uFieldCount);\n        value = texture2D(this.uDataInput, vec2(x, y));\n        if (this.uAggrOpt > 3)\n            res = value.a / value.b;\n        else\n            res = value.a;\n        gl_FragColor = vec4(0.0, 0.0, 0.0, res);\n    });\n\n    $p.program(\"group2\", vs2, fs2);\n\n    var resultFieldCount,\n        getAvgValues = false,\n        getVarStd = false,\n        resultDomains;\n\n    function _execute(opts, groupFieldIds, resultFieldIds) {\n        resultFieldCount = resultFieldIds.length;\n        var gl = $p.program(\"group\");\n        $p.bindFramebuffer(\"fGroupResults\");\n        $p.framebuffer.enableRead(\"fDerivedValues\");\n        $p.framebuffer.enableRead(\"fFilterResults\");\n\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n\n        $p.uniform.uGroupFields = groupFieldIds;\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE);\n        gl.blendEquation(gl.FUNC_ADD);\n        $p.uniform.uGroupGetStat = 0.0;\n        var resultDomains = new Array(resultFieldIds.length);\n        $p.uniform.uResultDim = $p.resultDimension;\n\n        getAvgValues = false;\n        getVarStd = false;\n        resultFieldIds.forEach(function(f, i) {\n            var opt = aggrOpts.indexOf(opts[i]);\n            if (opt == -1) throw Error(\"unknow operator for aggreation: \" + opts[i]);\n            gl.viewport(0, i * $p.resultDimension[1], $p.resultDimension[0], $p.resultDimension[1]);\n            if (opt == 0) gl.blendEquation(gl.MIN_EXT);\n            else if (opt == 1) gl.blendEquation(gl.MAX_EXT);\n            else gl.blendEquation(gl.FUNC_ADD);\n            $p.uniform.uFieldId = f;\n            $p.uniform.uAggrOpt = opt;\n            gl.ext.drawArraysInstancedANGLE(\n                gl.POINTS, 0,\n                $p.dataDimension[0],\n                $p.dataDimension[1]\n            );\n            if (opt > 3) {\n                getAvgValues = true;\n                if (opt > 4) getVarStd = true;\n            }\n        });\n\n        if (getAvgValues) {\n            // console.log('*** Second Pass for Aggregation');\n            var fieldCount = $p.uniform.uFieldCount.data,\n                preAggrData = $p.uniform.uDataInput.data;\n\n            $p.uniform.uDataInput.data = $p.framebuffer.fGroupResults.texture;\n            $p.uniform.uFieldCount.data = resultFieldIds.length;\n\n\n                $p.framebuffer(\n                    \"fAggrStats\",\n                    \"float\", [$p.resultDimension[0], $p.resultDimension[1] * resultFieldIds.length]\n                );\n                $p.bindFramebuffer(\"fAggrStats\");\n\n\n\n            gl = $p.program(\"group2\");\n            $p.framebuffer.enableRead(\"fGroupResults\");\n            gl.ext.vertexAttribDivisorANGLE($p.attribute._square.location, 0);\n\n            gl.disable(gl.BLEND);\n            resultFieldIds.forEach(function(f, i) {\n                var opt = aggrOpts.indexOf(opts[i]);\n                $p.uniform.uAggrOpt = opt;\n                $p.uniform.uFieldId = i;\n                gl.viewport(0, i * $p.resultDimension[1], $p.resultDimension[0], $p.resultDimension[1]);\n                gl.drawArrays(gl.TRIANGLES, 0, 6);\n            })\n            $p.uniform.uDataInput.data = $p.framebuffer.fAggrStats.texture;\n\n        } else {\n            $p.uniform.uDataInput.data = $p.framebuffer.fGroupResults.texture;\n\n        }\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    aggregate.execute = function(spec) {\n        var groupFields = spec.$by || spec.$group,\n            groupFieldIds = [-1, -1].\n        resultDim = [1, 1];\n\n        if (!Array.isArray(groupFields)) groupFields = [groupFields];\n        if (groupFields.length == 2) {\n            groupFieldIds[0] = $p.fields.indexOf(groupFields[0]);\n            groupFieldIds[1] = $p.fields.indexOf(groupFields[1]);\n            $p.resultDimension = [\n                $p.fieldWidths[groupFieldIds[0]],\n                $p.fieldWidths[groupFieldIds[1]]\n            ];\n        } else {\n            groupFieldIds[0] = $p.fields.indexOf(groupFields[0]);\n            $p.resultDimension = [$p.fieldWidths[groupFieldIds[0]], 1];\n        }\n\n\n        // console.log( groupFieldIds, $p.resultDimension, $p.fieldWidths, $p.fieldDomains);\n        // var resultFields = Object.keys(spec).filter(function(d){return d!='$by' && d!='$group';}),\n        //     resultFieldIds = resultFields.map(function(f) { return fields.indexOf(f); }),\n        //     operators = resultFields.map(function(r){return spec[r]; });\n\n\n        var newFieldSpec = spec.$calculate || spec.$reduce || spec.$out || null;\n\n        if (newFieldSpec === null) {\n            newFieldSpec = {};\n            Object.keys(spec).filter(function(d) {\n                return d != '$by' && d != '$group';\n            }).forEach(function(d) {\n                newFieldSpec[d] = spec[d];\n            });\n        }\n\n        var newFieldNames = Object.keys(newFieldSpec),\n            resultFields = newFieldNames.map(function(f) {\n                return newFieldSpec[f][Object.keys(newFieldSpec[f])[0]];\n            }),\n            resultFieldIds = resultFields.map(function(f) {\n                return $p.fields.indexOf(f);\n            }),\n            operators = resultFields.map(function(f, i) {\n                return Object.keys(newFieldSpec[newFieldNames[i]])[0];\n            });\n\n        if (!$p._update) {\n            $p.framebuffer(\n                \"fGroupResults\",\n                \"float\", [$p.resultDimension[0], $p.resultDimension[1] * resultFields.length]\n            );\n        }\n        _execute(operators, groupFieldIds, resultFieldIds);\n\n        $p.getResult = aggregate.result;\n        $p.indexes = groupFields;\n        $p.dataDimension = $p.resultDimension;\n\n        var newFieldIds = groupFieldIds.filter(function(f) {\n            return f !== -1\n        }).concat(resultFieldIds);\n\n        $p.fields = groupFields\n            .map(function(gf) {\n                return (gf.substring(0, 4) == 'bin@') ? gf.slice(4) : gf;\n            })\n            .concat(newFieldNames);\n\n        $p.uniform.uDataDim.data = $p.resultDimension;\n        $p.uniform.uIndexCount.data = $p.indexes.length;\n        $p.uniform.uFieldCount.data = $p.fields.length - $p.indexes.length;\n\n        // $p.fieldWidths = $p.fieldWidths.concat($p.deriveWidths);\n        // $p.fieldDomains = $p.fieldDomains.concat($p.deriveDomains);\n\n        $p.fieldDomains = newFieldIds.map(function(f) {\n            return $p.fieldDomains[f];\n        });\n        $p.fieldWidths = newFieldIds.map(function(f) {\n            return $p.fieldWidths[f];\n        });\n\n        // $p.uniform.uDataInput.data = $p.framebuffer.fGroupResults.texture;\n\n        $p.attribute.aDataItemId = seqFloat(0, $p.resultDimension[0] * $p.resultDimension[1] - 1);\n        $p.dataSize = $p.resultDimension[0] * $p.resultDimension[1];\n        $p.uniform.uDataSize.data = $p.dataSize;\n\n        $p.indexes.forEach(function(d, i) {\n            // $p.attribute['aDataId' + vecId[i]] = seqFloat(0, $p.resultDimension[i]-1);\n            $p.attribute['aDataId' + vecId[i]] = new Float32Array($p.resultDimension[i]).map(function(d, i) {\n                return i;\n            });\n            $p.attribute['aDataVal' + vecId[i]] = new Float32Array($p.resultDimension[i]).map(function(d, i) {\n                return i;\n            });\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataId' + vecId[i]].location, i);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataVal' + vecId[i]].location, i);\n        });\n\n        if ($p.indexes.length == 1) {\n            $p.attribute.aDataIdy = new Float32Array(1);\n            $p.attribute.aDataValy = new Float32Array(1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n        }\n        if (!$p._update) {\n            resultDomains = $p.opt.extent(resultFieldIds, $p.dataDimension);\n        }\n        for (var ii = $p.indexes.length; ii < $p.indexes.length + resultFieldIds.length; ii++) {\n            $p.fieldDomains[ii] = resultDomains[ii - $p.indexes.length];\n            $p.fieldWidths[ii] = resultDomains[ii - $p.indexes.length][1] - resultDomains[ii - $p.indexes.length][0];\n        }\n\n        $p.uniform.uFieldDomains.data = $p.fieldDomains;\n        $p.uniform.uFieldWidths.data = $p.fieldWidths;\n        $p.uniform.uFilterFlag.data = 0;\n\n        $p.indexes.forEach(function(d, i) {\n            // $p.attribute['aDataId' + vecId[i]] = seqFloat(0, $p.resultDimension[i]-1);\n            var interval = 1;\n\n            if ($p.intervals.hasOwnProperty(d))\n                interval = $p.intervals[d].interval;\n\n            $p.attribute['aDataVal' + vecId[i]] = seqFloat(\n                $p.fieldDomains[i][0],\n                $p.fieldDomains[i][1],\n                interval\n            );\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataId' + vecId[i]].location, i);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataVal' + vecId[i]].location, i);\n        });\n    }\n\n    aggregate.result = function(arg) {\n        var options = arg || {},\n            offset = options.offset || [0, 0],\n            resultSize = options.size || $p.resultDimension[0] * $p.resultDimension[1],\n            rowTotal = Math.min(resultSize, $p.resultDimension[0]),\n            colTotal = Math.ceil(resultSize / $p.resultDimension[0]);\n\n        $p.bindFramebuffer(\"fGroupResults\");\n        var gl = $p.program(\"group\"),\n            result = new Float32Array(rowTotal * colTotal * 4 * resultFieldCount);\n\n        gl.readPixels(offset[0], offset[1], rowTotal, colTotal * resultFieldCount, gl.RGBA, gl.FLOAT, result);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return result.filter(function(d, i) {\n            return i % 4 === 3;\n        });\n    }\n\n    return aggregate;\n}\n","export function request(arg) {\n    var url = arg.url || arg,\n        method = arg.method || \"GET\",\n        dataType = arg.dataType || \"json\",\n        data = arg.data || [],\n        query = [];  //arraybuffer, blob, document, json, text\n\n    for (var key in data) {\n        query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));\n    }\n\n    return new Promise(function(resolve, reject) {\n\n        var req = new XMLHttpRequest();\n        req.open(method, url);\n        req.responseType = dataType;\n\n        req.onload = function() {\n          if (req.status == 200) {\n            resolve(req.response);\n          }\n          else {\n            reject(Error(req.statusText));\n          }\n        };\n\n        req.onerror = function() {\n          reject(Error(\"Network Error\"));\n        };\n\n        if (method == 'POST') {\n            req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        }\n\n        req.send(data);\n    });\n};\n\nexport let get = request;\n\nexport function getAll(options) {\n    var promises = [];\n    options.forEach(function(option){\n        promises.push(\n            ajax.get(option)\n            .then(function(result){\n                return new Promise(function(resolve, reject) {\n                    resolve(result);\n                });\n            })\n        );\n    });\n\n    return Promise.all(promises);\n}\n\nexport function post(arg) {\n    arg.method = \"POST\";\n    return ajax.request(arg);\n};\n","import {seqFloat} from './utils';\nconst vecId = ['x', 'y', 'z'];\nexport default function($p, dataProps) {\n    var data = dataProps || [];\n\n    $p.indexes = data.indexes || [];\n    $p.categoryIndex = data.strHashes || {};\n    $p.categoryLookup = data.strLists || {};\n    $p.dkeys =  data.keys || [];\n    $p.dtypes =  data.dtypes || data.types || [];\n    $p.intervals =  data.intervals || {};\n    $p.cachedResult = [];\n    $p.pipeline = [];\n    $p.crossfilters = {};\n    $p.deriveCount = 0;\n    $p.resultDimension = [1, 1];\n    $p.dataSize = 0;\n\n    var dkeys = $p.dkeys,\n        dtypes = $p.dtypes,\n        stats =  data.stats || null;\n\n    if (data.hasOwnProperty(\"size\"))\n        $p.dataSize = data.size;\n    else if (Array.isArray(data))\n        $p.dataSize = Math.max.apply(null, data.map(function(d) {\n            return d.length;\n        }));\n\n    var rowSize = Math.min($p.dataSize, 8192),\n        colSize = Math.ceil($p.dataSize / rowSize);\n\n    $p.dataDimension = [rowSize, colSize];\n\n    $p.fields = $p.indexes.concat(dkeys.filter(function(k) {\n        return $p.indexes.indexOf(k) === -1;\n    }));\n    $p.fieldWidths = new Array($p.fields.length).concat(new Array($p.deriveMax).fill(1));\n    $p.fieldCount = $p.fields.length - $p.indexes.length;\n\n\n    function getDataWidth(fid, range) {\n        var range = Math.abs(range[1] - range[0]);\n        if (dtypes[fid] == \"index\" || dtypes[fid] == \"int\" || dtypes[fid] == \"string\") {\n            return range + 1;\n        } else if (dtypes[fid] == \"histogram\") {\n            return range;\n        } else if (dtypes[fid] == \"time\") {\n            var interval = stats[$p.fields[fid]].min;\n            if (interval === 0) interval = (data[fid][1] - data[fid][0]) || 1;\n            $p.intervals[dkeys[fid]] = {};\n            $p.intervals[dkeys[fid]].dtype = 'time';\n            $p.intervals[dkeys[fid]].interval = interval;\n            $p.intervals[dkeys[fid]].min = stats[dkeys[fid]].min;\n            $p.intervals[dkeys[fid]].max = stats[dkeys[fid]].max;\n            return range / interval + 1;\n        } else if ([\"nominal\", \"ordinal\", \"categorical\"].indexOf(dtypes[fid]) > -1) {\n            return data.TLB.length;\n        } else if (dtypes[fid] in [\"float\", \"double\", \"numeric\"]) {\n            return 10;\n        } else {\n            return range+1;\n        }\n    }\n    $p.fields.forEach(function(field) {\n        var min = stats[field].min,\n            max = stats[field].max,\n            fi = dkeys.indexOf(field);\n        $p.fieldWidths[fi] = getDataWidth(fi, [min, max]);\n    });\n    $p.getDataWidth = getDataWidth;\n    $p.deriveDomains = new Array($p.deriveMax).fill([0, 1]);\n    $p.deriveWidths = new Array($p.deriveMax).fill(1);\n    $p.deriveFieldCount = 0;\n\n    if ($p.indexes.length === 0) {\n        $p.attribute(\"aDataIdx\", \"float\", seqFloat(0, $p.dataDimension[0] - 1));\n        $p.attribute(\"aDataIdy\", \"float\", seqFloat(0, $p.dataDimension[1] - 1));\n        $p.attribute(\"aDataValx\", \"float\", seqFloat(0, $p.dataDimension[0] - 1));\n        $p.attribute(\"aDataValy\", \"float\", seqFloat(0, $p.dataDimension[1] - 1));\n    } else {\n\n        $p.indexes.forEach(function(id, i) {\n            var indexAttrData = arrays.unique(data[id]).sort(function(a, b) {\n                return a - b;\n            });\n            $p.attribute(\"aDataVal\" + vecId[i], \"float\", new Float32Array(indexAttrData));\n            $p.attribute(\"aDataId\" + vecId[i], \"float\", seqFloat(0, indexAttrData.length - 1));\n            $p.fieldWidths[i] = indexAttrData.length;\n            $p.dataDimension[i] = indexAttrData.length;\n        });\n    }\n\n    $p.attribute(\"aDataItemVal0\", \"float\", null);\n    $p.attribute(\"aDataItemVal1\", \"float\", null);\n    $p.attribute(\"aDataItemId\", \"float\", new Float32Array($p.dataSize).map((d,i)=>i));\n    $p.attribute(\"aDataFieldId\", \"vec2\", new Float32Array($p.fields.length * 2).map((d,i)=>i));\n    $p.attribute(\"aVertexId\", \"float\", [0, 1, 2, 3, 4, 5]);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aVertexId.location, 0);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataFieldId.location, 0);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemId.location, 1);\n\n    $p.attribute(\"_square\", \"vec2\", new Float32Array([-1.0, -1.0,\n        1.0, -1.0, -1.0, 1.0, -1.0, 1.0,\n        1.0, -1.0,\n        1.0, 1.0\n    ]));\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute._square.location, 1);\n\n    //setup all attribute, uniform, texture, varying needed by all the shaders\n    $p.uniform(\"uDataSize\",    \"float\", $p.dataSize);\n    $p.uniform(\"uDataDim\",     \"vec2\",  $p.dataDimension);\n    $p.uniform(\"uResultDim\",   \"vec2\",  $p.dataDimension);\n    $p.uniform(\"uIndexCount\",  \"int\",   $p.indexes.length);\n    $p.uniform(\"uFieldWidths\", \"float\", $p.fieldWidths);\n    $p.uniform(\"uFieldCount\",  \"int\",   $p.fieldCount);\n    $p.uniform(\"uFieldId\",     \"int\",   0);\n    $p.uniform(\"uFilterFlag\",  \"int\",   0);\n    $p.uniform(\"uGroupFields\", \"int\",   [0, -1]);\n    $p.uniform(\"uDataInput\",   \"sampler2D\");\n    $p.uniform(\"uDeriveCount\", \"int\", $p.deriveMax);\n    // $p.uniform(\"uDeriveDomains\", \"vec2\", $p.deriveDomains);\n    // $p.uniform(\"uDeriveWidths\", \"float\", $p.deriveWidths);\n\n    $p.uniform(\"uFilterLevel\", \"float\", 0.1)\n    $p.uniform('uVisLevel',    \"float\", 0.1)\n\n    $p.varying(\"vResult\", \"float\");\n    $p.varying(\"vDiscardData\", \"float\");\n    $p.texture(\n        \"tData\",\n        \"float\",\n        new Float32Array($p.dataDimension[0] * $p.dataDimension[1] * $p.fieldCount), [$p.dataDimension[0], $p.dataDimension[1] * $p.fieldCount],\n        \"alpha\"\n    );\n    $p.framebuffer(\"fFilterResults\", \"unsigned_byte\", $p.dataDimension);\n    $p.framebuffer(\"fGroupResults\", \"float\", [1024, 1]);\n    $p.framebuffer(\"fDerivedValues\", \"float\", [$p.dataDimension[0], $p.dataDimension[1] * $p.deriveMax]);\n\n    $p.parameter({\n        fieldCount: $p.fields.length - $p.indexes.length,\n        indexCount: $p.indexes.length\n    });\n\n    $p.fields.slice($p.indexes.length).forEach(function(attr, ai) {\n        var buf = new Float32Array($p.dataDimension[0] * $p.dataDimension[1]);\n        for (var i = 0, l = data[attr].length; i < l; i++) {\n            buf[i] = data[attr][i];\n        }\n        $p.texture.tData.update(\n            buf, [0, $p.dataDimension[1] * ai], $p.dataDimension\n        );\n    });\n\n    //TODO: get data statistics using the GPU\n    if(stats !== null) {\n        $p.fieldDomains = $p.fields.map(function(k, i) {\n            return [stats[k].min, stats[k].max];\n        })\n        .concat(new Array($p.deriveMax).fill([0, 1]));\n\n        $p.uniform(\"uFieldDomains\", \"vec2\",  $p.fieldDomains);\n\n    } else {\n        $p.uniform(\"uFieldDomains\", \"vec2\",  $p.fields.map(f => [0, 1]));\n    }\n\n\n    // $p.texture.tData.sampler = $p.uniform.uDataInput;\n    $p.uniform.uDataInput = $p.texture.tData;\n\n    function getFieldWidth($int_fid) {\n        return this.uFieldWidths[fid];\n    }\n\n    function getFieldDomain($int_fid) {\n        return this.uFieldDomains[fid];\n    }\n\n    function getData($int_fid, $float_r, $float_s) {\n        var t, value;\n        if (fid >= this.uFieldCount + this.uIndexCount) {\n            t = (float(fid - this.uFieldCount - this.uIndexCount) + s) /\n                float(this.uDeriveCount);\n            value = texture2D(this.fDerivedValues, vec2(r, t)).a;\n        } else {\n            if (this.uIndexCount > 0 && fid == 0) value = this.aDataValx;\n            else if (this.uIndexCount > 1 && fid == 1) value = this.aDataValy;\n            else {\n                t = (float(fid - this.uIndexCount) + s) / float(this.uFieldCount);\n                value = texture2D(this.uDataInput, vec2(r, t)).a;\n            }\n        }\n        return value;\n    }\n\n    function getNonIndexedData($int_fieldId, $float_addrX, $float_addrY) {\n        var offsetY, value;\n        if (fieldId >= this.uFieldCount + this.uIndexCount) {\n            offsetY = (float(fieldId - this.uFieldCount - this.uIndexCount) + addrY) /\n                float(this.uDeriveCount);\n            value = texture2D(this.fDerivedValues, vec2(addrX, offsetY)).a;\n        } else {\n            offsetY = (float(fieldId - this.uIndexCount) + addrY) / float(this.uFieldCount);\n            value = texture2D(this.uDataInput, vec2(addrX, offsetY)).a;\n        }\n        return value;\n    }\n\n    $p.subroutine(\"getFieldWidth\", \"float\", getFieldWidth);\n    $p.subroutine(\"getFieldDomain\", \"vec2\", getFieldDomain);\n    $p.subroutine(\"getData\", \"float\", getData);\n    $p.subroutine(\"getNonIndexedData\", \"float\", getNonIndexedData);\n\n    var gl = $p.ctx;\n    gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n    gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n    gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n    gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n\n}\n","function _reduce(array, opt) {\n    var i,\n        len = array.length,\n        fn,\n        result;\n\n    if (!len) return 0;\n\n    switch (opt) {\n        case \"max\":\n            result = array.reduce(function(a, b) {\n                return (a > b) ? a : b;\n            });\n            break;\n        case \"min\":\n            result = array.reduce(function(a, b) {\n                return (a < b) ? a : b;\n            });\n            break;\n        case \"and\":\n        case \"&\":\n            result = array.reduce(function(a, b) {\n                return a & b;\n            });\n            break;\n        case \"or\":\n        case \"|\":\n            result = array.reduce(function(a, b) {\n                return a | b;\n            });\n            break;\n        case \"mult\":\n        case \"*\":\n            result = array.reduce(function(a, b) {\n                return a * b;\n            });\n            break;\n        default: // \"sum\" or \"+\"\n            result = array.reduce(function(a, b) {\n                return a + b;\n            });\n            break;\n    }\n\n    return result;\n}\n\nexport function reduce(opt) {\n    return function(array) {\n        var a = (array instanceof Array) ? array : Array.apply(null, arguments);\n        return _reduce(a, opt);\n    };\n};\n\nexport function avg(array) {\n    return _reduce(array, \"+\") / array.length;\n    // return array.reduce(function(a,b){ return 0.5 * (a + b)});\n};\n\nexport function normalize(array) {\n    var max = _reduce(array, \"max\"),\n        min = _reduce(array, \"min\"),\n        range = max - min;\n\n    return array.map(function(a) {\n        return (a - min) / range;\n    });\n}\n\nexport function seq(start, end, intv) {\n    var interval = intv || 1,\n        array = [];\n\n    for (var i = start; i <= end; i += interval)\n        array.push(i);\n\n    return array;\n};\n\n// [\"max\", \"min\", \"mult\", \"and\", \"or\"].forEach(function(f) {\n//     array[f] = array.reduce(f);\n// });\n\n// export sum = array.reduce(\"+\");\n\nexport function scan(a) {\n    var pfsum = [],\n        accum = 0;\n\n    for (var i = 0; i < a.length; i++) {\n        accum += a[i];\n        pfsum.push(accum);\n    }\n\n    return pfsum;\n};\n\nexport function iscan(a) {\n    return array.scan([0].concat(a));\n};\n\nexport function diff(a, b) {\n    var difference = [];\n    a.forEach(function(d) {\n        if (b.indexOf(d) === -1) {\n            difference.push(d);\n        }\n    });\n    return difference;\n};\n\nexport function intersect(a, b) {\n    var t;\n    if (b.length > a.length) t = b, b = a, a = t; // indexOf to loop over shorter\n    return a.filter(function(e) {\n        if (b.indexOf(e) !== -1) return true;\n    });\n};\n\nexport function unique(a) {\n    return a.reduce(function(b, c) {\n        if (b.indexOf(c) < 0) b.push(c);\n        return b;\n    }, []);\n};\n\nexport function lcm(A) {\n    var n = A.length,\n        a = Math.abs(A[0]);\n    for (var i = 1; i < n; i++) {\n        var b = Math.abs(A[i]),\n            c = a;\n        while (a && b) {\n            (a > b) ? a %= b: b %= a;\n        }\n        a = Math.abs(c * A[i]) / (a + b);\n    }\n    return a;\n};\n\nexport function stats(array) {\n    return {\n        max: _reduce(array, \"max\"),\n        min: _reduce(array, \"min\"),\n        avg: array.avg(array)\n    };\n};\n\nexport function histogram(array, numBin, _max, _min) {\n    var l = array.length,\n        min = (typeof(_min) == 'number') ? _min : _reduce(array, \"min\"),\n        max = (typeof(_max) == 'number') ? _max : _reduce(array, \"max\"),\n        range = max - min,\n        interval = range / numBin,\n        bins = [],\n        // ids = [],\n        hg = new Array(numBin + 1).fill(0);\n\n    for (var b = 0; b < numBin; b++) {\n        bins.push([min + range * (b / (numBin)), min + range * (b + 1) / (numBin)]);\n        // ids[b] = [];\n    }\n\n    // ids[numBin] = [];\n\n    for (var i = 0; i < l; i++) {\n        binID = Math.floor((array[i] - min) / range * (numBin));\n        hg[binID]++;\n        // ids[binID].push(i);\n    };\n\n    hg[numBin - 1] += hg[numBin];\n    // ids[numBin-1] = ids[numBin-1].concat(ids.pop());\n    return {\n        bins: bins,\n        counts: hg.slice(0, numBin),\n        // ids: ids\n    };\n}\n\nexport function variance(rowArray) {\n    var m = _reduce(rowArray, \"+\") / rowArray.length,\n        va = rowArray.map(function(a) {\n            return Math.pow(a - m, 2)\n        });\n\n    return _reduce(va, \"+\") / (rowArray.length - 1);\n}\n\nexport function std(rowArray) {\n    return Math.sqrt(array.var(rowArray));\n}\n\nexport function vectorAdd(a, b) {\n    var c = [];\n    a.forEach(function(v, i) {\n        c[i] = v + b[i];\n    });\n\n    return c;\n}\n\nexport function vectorSum(vectors) {\n    var result = vectors[0],\n        numberOfVectors = vectors.length;\n\n    for (var i = 1; i < numberOfVectors; i++) {\n        result = array.vectorAdd(result, vectors[i]);\n    }\n\n    return result;\n}\n\nfunction _vectorAvg(a, b) {\n    var c = [];\n    a.forEach(function(v, i) {\n        c[i] = (v + b[i]) * 0.5;\n    });\n\n    return c;\n}\n\nexport function vectorAvg(vectors) {\n    var result = vectors[0],\n        numberOfVectors = vectors.length;\n\n    for (var i = 1; i < numberOfVectors; i++) {\n        result = _vectorAvg(result, vectors[i]);\n    }\n\n    return result;\n}\n","export default function cache(fxgl) {\n    var cache = {},\n        dataDimension = fxgl.uniform.uDataDim.data,\n        fieldCount =  fxgl.uniform.uFieldCount.data,\n        cacheTag;\n\n    var vs = fxgl.shader.vertex(function () {\n         gl_Position = vec4(this._square, 0, 1);\n    });\n\n    var fs = fxgl.shader.fragment(function () {\n        var x, y;\n        $vec4(value);\n        x = (gl_FragCoord.x) / this.uDataDim.x;\n        y = (gl_FragCoord.y) / (this.uDataDim.y * float(this.uFieldCount));\n        value = texture2D(this.uDataInput, vec2(x, y));\n        gl_FragColor = value;\n    });\n\n    fxgl.program(\"cache\", vs, fs);\n\n    cache.execute = function(tag, dataDim, fieldTotal) {\n        cacheTag = tag;\n        dataDimension = dataDim || fxgl.uniform.uDataDim.data;\n        fieldCount = fieldTotal || fxgl.uniform.uFieldCount.data;\n\n        console.log(fieldCount);\n\n        fxgl.framebuffer(tag, \"float\", [dataDimension[0], dataDimension[1]*fieldCount]);\n        fxgl.bindFramebuffer(tag);\n        var gl = fxgl.program(\"cache\");\n\n        // console.log(dataDimension, fieldCount);\n        gl.viewport(0, 0, dataDimension[0], dataDimension[1]*fieldCount);\n        gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.disable(gl.BLEND);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n        var result = new Float32Array(dataDimension[0]*dataDimension[1]*4*fieldCount);\n        gl.readPixels(0, 0, dataDimension[0], dataDimension[1]*fieldCount, gl.RGBA, gl.FLOAT, result);\n        console.log(result.filter(function(d, i){ return i%4===3 } ));\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        fxgl.framebuffer.enableRead(tag);\n        fxgl.uniform.uDataInput = fxgl.framebuffer[tag].texture;\n    }\n\n    cache.result =  function() {\n        fxgl.bindFramebuffer(cacheTag);\n        var gl = fxgl.program(\"cache\"),\n            result = new Float32Array(dataDimension[0]*dataDimension[1]*4*fieldCount);\n\n        gl.readPixels(0, 0, dataDimension[0], dataDimension[1]*fieldCount, gl.RGBA, gl.FLOAT, result);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return result.filter(function(d, i){ return i%4===0;} );\n    }\n\n    return cache;\n}\n","import {gradients as colorSchemes} from './gradients';\nimport {colorhex} from './colorhex';\n\nconst colorResolution = 256;\nconst colorSetMax = 32;\nconst defaultColorScheme = colorSchemes['viridis'];\nconst defaultColorSet = [\n    [255,187,120], [255,127, 14], [174,199,232], [ 44,160, 44],\n    [ 31,119,180], [255,152,150], [214, 39, 40], [197,176,213],\n    [152,223,138], [148,103,189], [247,182,210], [227,119,194],\n    [196,156,148], [140, 86, 75], [127,127,127], [219,219,141],\n    [199,199,199], [188,189, 34], [158,218,229], [ 23,190,207]\n];\n\nvar gradient = defaultColorScheme,\n    colorset = defaultColorSet;\n\nexport default function color($p) {\n    var colorManager = {};\n\n    $p.uniform('uColorMode',       'int',   0) // 0=categorical, 1=numeric\n        .uniform('uColorCount',    'int',   colorSetMax)\n        .uniform('uColorSet',      'vec3',  setColorTable(colorset))\n        .texture('tColorGraident', 'float', setColorScheme(gradient),  [colorResolution, 1], 'rgba')\n        .subroutine('mapColorRGB', 'vec3',  mapColorRGB);\n\n    colorManager.updateScheme = function(newColors) {\n        if(typeof newColors == 'string' && colorSchemes.hasOwnProperty(newColors)) {\n            gradient = colorSchemes[newColors];\n        } else if(Array.isArray(newColors)) {\n            gradient = newColors;\n        }\n        $p.texture.tColorGraident = setColorScheme(gradient);\n    }\n\n    colorManager.updateTable = function(colors) {\n        colorset = colors;\n        $p.uniform.uColorSet = setColorTable(colors);\n    }\n\n    colorManager.colorTable = defaultColorSet.map(function(t){\n        return rgba2hex(t);\n    });\n\n    colorManager.getColors = function() {\n        if($p.uniform.uColorMode == 0) {\n            return colorset;\n        } else {\n            return gradient;\n        }\n    }\n\n    colorManager.rgb = rgb;\n    colorManager.rgba = rgba;\n\n    return colorManager;\n}\n\nfunction colorStrToHex(colorStr) {\n    if (typeof colorhex[colorStr.toLowerCase()] != 'undefined')\n        return colorhex[colorStr.toLowerCase()];\n    else\n        return false;\n}\n\nfunction rgb(hexStr) {\n    var hex, r, g, b;\n\n    if(hexStr.slice(0,1) == '#')\n        hex = hexStr.slice(1);\n    else\n        hex = colorStrToHex(hexStr).slice(1);\n\n    r = parseInt(hex.substring(0,2), 16) / 255;\n    g = parseInt(hex.substring(2,4), 16) / 255;\n    b = parseInt(hex.substring(4,6), 16) / 255;\n    return [r, g, b];\n}\n\nfunction rgba(hexStr, alpha) {\n    var a = alpha || 1.0,\n        c = rgb(hexStr);\n\n    return [c[0], c[1], c[2], a];\n}\n\nfunction rgba2hex(c) {\n    var r = c[0],\n        g = c[1],\n        b = c[2],\n        a = 1;\n    if (r > 255 || g > 255 || b > 255 || a > 255)\n        throw 'Invalid color component';\n    return (256 + r).toString(16).substr(1) +((1 << 24) + (g << 16) | (b << 8) | a).toString(16).substr(1);\n}\n\nfunction setColorScheme(colors) {\n    var cc = colors.length - 1,\n        step = (cc >= 0) ? colorResolution / (cc+1) : 1,\n        colorGradient = new Float32Array(colorResolution * 4);\n\n    colors.push(colors[cc]);\n    for(var i = 0; i < cc+1; i++) {\n        var c0 = rgba(colors[i]),\n            c1 = rgba(colors[i+1]),\n            offset = Math.floor(i * step)*4;\n\n        for(var x = 0; x < step; x++) {\n            var xi = x / (step);\n            colorGradient[offset+x*4]   = c0[0] + (c1[0] - c0[0]) * xi;\n            colorGradient[offset+x*4+1] = c0[1] + (c1[1] - c0[1]) * xi;\n            colorGradient[offset+x*4+2] = c0[2] + (c1[2] - c0[2]) * xi;\n            colorGradient[offset+x*4+3] = c0[3] + (c1[3] - c0[3]) * xi;\n        }\n    }\n    colors.pop();\n    return colorGradient;\n}\n\nfunction setColorTable(colors) {\n    var colorTable = new Float32Array(colorSetMax * 3),\n        isRgb = false;\n\n    if(colors[0].length == 3) isRgb = true;\n    colors.forEach(function(c, i){\n        var colorValue = c;\n        if(!isRgb) colorValue = rgb(c) * 255;\n        colorTable[i*3] = colorValue[0] / 255;\n        colorTable[i*3+1] = colorValue[1] / 255;\n        colorTable[i*3+2] = colorValue[2] / 255;\n    });\n\n    return colorTable;\n}\n\nfunction mapColorRGB($int_fieldId, $float_value) {\n    var d = new Vec2();\n    var colorRGB = new Vec3();\n    var intValue = new Int();\n    if(fieldId == -1) {\n        colorRGB = this.uDefaultColor;\n    } else {\n        if(this.uColorMode == 1) {\n            colorRGB = texture2D(this.tColorGraident, vec2(value, 1.0)).rgb;\n        } else {\n            d = this.uVisDomains[fieldId];\n            intValue = int(value * (d.y - d.x) + d.x);\n            if(intValue >= this.uColorCount) {\n                colorRGB = vec3(0.0, 0.0, 0.0);\n            } else {\n                colorRGB = this.uColorSet[intValue];\n            }\n        }\n    }\n    return colorRGB;\n}\n","export const colorhex = {\n    \"aliceblue\": \"#f0f8ff\",\n    \"antiquewhite\": \"#faebd7\",\n    \"aqua\": \"#00ffff\",\n    \"aquamarine\": \"#7fffd4\",\n    \"azure\": \"#f0ffff\",\n    \"beige\": \"#f5f5dc\",\n    \"bisque\": \"#ffe4c4\",\n    \"black\": \"#000000\",\n    \"blanchedalmond\": \"#ffebcd\",\n    \"blue\": \"#0000ff\",\n    \"blueviolet\": \"#8a2be2\",\n    \"brown\": \"#a52a2a\",\n    \"burlywood\": \"#deb887\",\n    \"cadetblue\": \"#5f9ea0\",\n    \"chartreuse\": \"#7fff00\",\n    \"chocolate\": \"#d2691e\",\n    \"coral\": \"#ff7f50\",\n    \"cornflowerblue\": \"#6495ed\",\n    \"cornsilk\": \"#fff8dc\",\n    \"crimson\": \"#dc143c\",\n    \"cyan\": \"#00ffff\",\n    \"darkblue\": \"#00008b\",\n    \"darkcyan\": \"#008b8b\",\n    \"darkgoldenrod\": \"#b8860b\",\n    \"darkgray\": \"#a9a9a9\",\n    \"darkgreen\": \"#006400\",\n    \"darkkhaki\": \"#bdb76b\",\n    \"darkmagenta\": \"#8b008b\",\n    \"darkolivegreen\": \"#556b2f\",\n    \"darkorange\": \"#ff8c00\",\n    \"darkorchid\": \"#9932cc\",\n    \"darkred\": \"#8b0000\",\n    \"darksalmon\": \"#e9967a\",\n    \"darkseagreen\": \"#8fbc8f\",\n    \"darkslateblue\": \"#483d8b\",\n    \"darkslategray\": \"#2f4f4f\",\n    \"darkturquoise\": \"#00ced1\",\n    \"darkviolet\": \"#9400d3\",\n    \"deeppink\": \"#ff1493\",\n    \"deepskyblue\": \"#00bfff\",\n    \"dimgray\": \"#696969\",\n    \"dodgerblue\": \"#1e90ff\",\n    \"firebrick\": \"#b22222\",\n    \"floralwhite\": \"#fffaf0\",\n    \"forestgreen\": \"#228b22\",\n    \"fuchsia\": \"#ff00ff\",\n    \"gainsboro\": \"#dcdcdc\",\n    \"ghostwhite\": \"#f8f8ff\",\n    \"gold\": \"#ffd700\",\n    \"goldenrod\": \"#daa520\",\n    \"gray\": \"#808080\",\n    \"green\": \"#008000\",\n    \"greenyellow\": \"#adff2f\",\n    \"honeydew\": \"#f0fff0\",\n    \"hotpink\": \"#ff69b4\",\n    \"indianred \": \"#cd5c5c\",\n    \"indigo\": \"#4b0082\",\n    \"ivory\": \"#fffff0\",\n    \"khaki\": \"#f0e68c\",\n    \"lavender\": \"#e6e6fa\",\n    \"lavenderblush\": \"#fff0f5\",\n    \"lawngreen\": \"#7cfc00\",\n    \"lemonchiffon\": \"#fffacd\",\n    \"lightblue\": \"#add8e6\",\n    \"lightcoral\": \"#f08080\",\n    \"lightcyan\": \"#e0ffff\",\n    \"lightgoldenrodyellow\": \"#fafad2\",\n    \"lightgrey\": \"#d3d3d3\",\n    \"lightgreen\": \"#90ee90\",\n    \"lightpink\": \"#ffb6c1\",\n    \"lightsalmon\": \"#ffa07a\",\n    \"lightseagreen\": \"#20b2aa\",\n    \"lightskyblue\": \"#87cefa\",\n    \"lightslategray\": \"#778899\",\n    \"lightsteelblue\": \"#b0c4de\",\n    \"lightyellow\": \"#ffffe0\",\n    \"lime\": \"#00ff00\",\n    \"limegreen\": \"#32cd32\",\n    \"linen\": \"#faf0e6\",\n    \"magenta\": \"#ff00ff\",\n    \"maroon\": \"#800000\",\n    \"mediumaquamarine\": \"#66cdaa\",\n    \"mediumblue\": \"#0000cd\",\n    \"mediumorchid\": \"#ba55d3\",\n    \"mediumpurple\": \"#9370d8\",\n    \"mediumseagreen\": \"#3cb371\",\n    \"mediumslateblue\": \"#7b68ee\",\n    \"mediumspringgreen\": \"#00fa9a\",\n    \"mediumturquoise\": \"#48d1cc\",\n    \"mediumvioletred\": \"#c71585\",\n    \"midnightblue\": \"#191970\",\n    \"mintcream\": \"#f5fffa\",\n    \"mistyrose\": \"#ffe4e1\",\n    \"moccasin\": \"#ffe4b5\",\n    \"navajowhite\": \"#ffdead\",\n    \"navy\": \"#000080\",\n    \"oldlace\": \"#fdf5e6\",\n    \"olive\": \"#808000\",\n    \"olivedrab\": \"#6b8e23\",\n    \"orange\": \"#ffa500\",\n    \"orangered\": \"#ff4500\",\n    \"orchid\": \"#da70d6\",\n    \"palegoldenrod\": \"#eee8aa\",\n    \"palegreen\": \"#98fb98\",\n    \"paleturquoise\": \"#afeeee\",\n    \"palevioletred\": \"#d87093\",\n    \"papayawhip\": \"#ffefd5\",\n    \"peachpuff\": \"#ffdab9\",\n    \"peru\": \"#cd853f\",\n    \"pink\": \"#ffc0cb\",\n    \"plum\": \"#dda0dd\",\n    \"powderblue\": \"#b0e0e6\",\n    \"purple\": \"#800080\",\n    \"red\": \"#ff0000\",\n    \"rosybrown\": \"#bc8f8f\",\n    \"royalblue\": \"#4169e1\",\n    \"saddlebrown\": \"#8b4513\",\n    \"salmon\": \"#fa8072\",\n    \"sandybrown\": \"#f4a460\",\n    \"seagreen\": \"#2e8b57\",\n    \"seashell\": \"#fff5ee\",\n    \"sienna\": \"#a0522d\",\n    \"silver\": \"#c0c0c0\",\n    \"skyblue\": \"#87ceeb\",\n    \"slateblue\": \"#6a5acd\",\n    \"slategray\": \"#708090\",\n    \"snow\": \"#fffafa\",\n    \"springgreen\": \"#00ff7f\",\n    \"steelblue\": \"#4682b4\",\n    \"tan\": \"#d2b48c\",\n    \"teal\": \"#008080\",\n    \"thistle\": \"#d8bfd8\",\n    \"tomato\": \"#ff6347\",\n    \"turquoise\": \"#40e0d0\",\n    \"violet\": \"#ee82ee\",\n    \"wheat\": \"#f5deb3\",\n    \"white\": \"#ffffff\",\n    \"whitesmoke\": \"#f5f5f5\",\n    \"yellow\": \"#ffff00\",\n    \"yellowgreen\": \"#9acd32\"\n};\n","import derive from './derive';\nimport reveal from './reveal';\nimport aggregate from './aggregate';\nimport cache  from './cache';\nimport match from './match';\nimport extent from './extent';\nimport visualize from './visualize';\n\nexport default function compile(fxgl, fields, spec) {\n\n    // if(spec.hasOwnProperty('perceptual'))\n    //     operations.perceptual = kernels.perceptual(fxgl);\n    //\n    // if(spec.hasOwnProperty('derive'))\n    //     operations.derive = kernels.derive(fxgl, spec.derive);\n\n    return {\n        aggregate : aggregate(fxgl),\n        cache     : cache(fxgl),\n        match     : match(fxgl, fields),\n        extent    : extent(fxgl),\n        visualize : visualize(fxgl)\n        // perceive  : kernels.reveal(fxgl)\n    }\n}\n","import * as ctypes from './ctypes';\r\nexport default function ColumnStore(arg){\r\n    var cstore   = (this instanceof ColumnStore) ? this : {},\r\n        options = arg || {},\r\n        columns  = [],                  // column-based binary data\r\n        size     = options.size  || 0,   // max size\r\n        count    = options.count || 0,   // number of entries stored\r\n        types    = options.types || [],  // types of the columns\r\n        attributes = options.attributes || options.keys || options.names || [],  // column attributes\r\n        struct   = options.struct|| options.schema || {},\r\n        strHashes     = options.strHashes  || {},  // content access memory\r\n        strLists     = options.strLists  || {},  // table lookaside buffer\r\n        colStats = {},\r\n        colAlloc = {},\r\n        colRead  = {},                  // functions for reading values\r\n        skip     = options.skip  || 0;\r\n\r\n    if(options.struct) initStruct(options.struct);\r\n\r\n    function initCStore() {\r\n        if(size && types.length === attributes.length && types.length > 0) {\r\n            attributes.forEach(function(c, i){\r\n                configureColumn(i);\r\n                columns[i] = new colAlloc[c](size);\r\n                if(!columns.hasOwnProperty(c))\r\n                    Object.defineProperty(columns, c, {\r\n                        get: function() { return columns[i]; }\r\n                    });\r\n            });\r\n            columns.attributes = attributes;\r\n            columns.keys = attributes;\r\n            columns.types = types;\r\n            columns.struct = struct;\r\n            columns.strLists = strLists;\r\n            columns.strHashes = strHashes;\r\n            columns.size = size;\r\n            columns.get = function(c) {\r\n                var index = attributes.indexOf(c);\r\n                if(index < 0 ) throw new Error(\"Error: No column named \" + c);\r\n                return columns[index];\r\n            }\r\n        } \r\n        return cstore;\r\n    }\r\n\r\n    function initStruct(s) {\r\n        struct = s;\r\n        if(Array.isArray(struct)) {\r\n            struct.forEach(function(s){\r\n                attributes.push(s.name);\r\n                types.push(s.type);\r\n            })\r\n        } else {\r\n            for(var k in struct){\r\n                attributes.push(k);\r\n                types.push(struct[k]);\r\n            }\r\n        }\r\n        return struct;\r\n    }\r\n\r\n    function configureColumn(cid) {\r\n        if(typeof(cid) == \"string\") cid = attributes.indexOf(cid);\r\n        var f = attributes[cid];\r\n        colAlloc[f] = ctypes[types[cid]];\r\n\r\n        if(colAlloc[f] === ctypes.string){\r\n            strLists[f] = [];\r\n            strHashes[f] = {};\r\n            colRead[f] = function(value) {\r\n                if(!strHashes[f].hasOwnProperty(value)){\r\n                    strHashes[f][value] = strLists[f].length;\r\n                    strLists[f].push(value);\r\n                }\r\n                return strHashes[f][value];\r\n            };\r\n        } else if(\r\n            colAlloc[f] === ctypes.int ||\r\n            colAlloc[f] === ctypes.short ||\r\n            colAlloc[f] === ctypes.integer\r\n        ) {\r\n            colRead[f] = function(value) {  return parseInt(value) || 0; };\r\n        } else if(\r\n            colAlloc[f] === ctypes.float ||\r\n            colAlloc[f] === ctypes.double ||\r\n            colAlloc[f] === ctypes.numeric\r\n        ){\r\n            colRead[f] = function(value) {  return parseFloat(value) || 0.0; };\r\n        } else if(\r\n                colAlloc[f] === ctypes.time ||\r\n                colAlloc[f] === ctypes.temporal\r\n        ) {\r\n            colRead[f] = function(value) {  return parseFloat(value) || 0.0; };\r\n        } else {\r\n            throw new Error(\"Invalid data type for TypedArray data!\")\r\n        }\r\n    }\r\n\r\n    cstore.addRows = function(rowArray) {\r\n        if(count === 0 && skip > 0) {\r\n            for(var j = 0; j<skip; j++)\r\n                rowArray.shift();\r\n        }\r\n        rowArray.forEach(function(row, i){\r\n            row.forEach(function(v,j){\r\n                columns[j][count] = colRead[attributes[j]](v);\r\n            });\r\n            count++;\r\n        });\r\n        return count;\r\n    }\r\n\r\n    cstore.addObjects = function(objArray) {\r\n        if(count === 0 && skip > 0) {\r\n            for(var j = 0; j<skip; j++)\r\n                objArray.shift();\r\n        }\r\n        objArray.forEach(function(obj, i){\r\n            Object.keys(obj).forEach(function(v,j){\r\n                columns[j][count] = colRead[attributes[j]](obj[v]);\r\n            });\r\n            count++;\r\n        });\r\n        return count;\r\n    }\r\n\r\n\r\n    cstore.addColumn = function(arg) {\r\n        var props = arg || {},\r\n            columnData = props.data || props.array,\r\n            columnName = props.name,\r\n            columnType = props.dtype,\r\n            values = props.values || [];\r\n\r\n        var cid = attributes.indexOf(columnName);\r\n        if( cid < 0) {\r\n            attributes.push(columnName);\r\n            types.push(columnType);\r\n            configureColumn(columnName);\r\n            cid = types.length - 1;\r\n            Object.defineProperty(columns, columnName, {\r\n                get: function() { return columns[cid]; }\r\n            });\r\n        }\r\n\r\n        if(columnData instanceof ctypes[types[cid]]) {\r\n            columns[cid] = columnData;\r\n            if(values.length) {\r\n                strLists[columnName] = values;\r\n                strHashes[columnName] = {};\r\n                values.forEach(function(value, vi){\r\n                    strHashes[columnName][value] = vi;\r\n                })\r\n            }\r\n        } else if(ArrayBuffer.isView(columnData)){\r\n            columns[cid] = new colAlloc[columnName](size);\r\n            for(var di = 0; di < size; di++) {\r\n                columns[cid][di] = colRead[columnName](columnData[di]);\r\n            }\r\n        } else {\r\n            throw new Error(\"Error: Invalid data type for columnArray!\");\r\n        }\r\n        size = count = columnData.length;\r\n    }\r\n\r\n    cstore.metadata = cstore.info = function() {\r\n        return {\r\n            size: size,\r\n            count: count,\r\n            attributes: attributes,\r\n            types: types,\r\n            strLists: strLists,\r\n            strHashes: strHashes,\r\n            stats: cstore.stats()\r\n        }\r\n    }\r\n\r\n    cstore.columns = function() {\r\n        return columns;\r\n    }\r\n\r\n    cstore.data = function() {\r\n        var data = columns;\r\n        data.stats = cstore.stats();\r\n        data.keys = attributes;\r\n        data.size = size;\r\n        data.strHashes = strHashes;\r\n        data.strLists = strLists;\r\n        data.dtypes = types;\r\n        return data;\r\n    }\r\n\r\n    cstore.stats = function(col){\r\n        var col = col || attributes;\r\n        col.forEach(function(name, c){\r\n            if(!colStats[c]){\r\n                var min, max, avg;\r\n                min = max = avg = columns[c][0];\r\n\r\n                for(var i = 1; i < columns[c].length; i++){\r\n                    var d = columns[c][i];\r\n                    if(d > max) max = d;\r\n                    else if(d < min) min = d;\r\n                    avg = avg - (avg-d) / i;\r\n                }\r\n                if(max == min) max += 0.000001;\r\n                colStats[name] = {min: min, max: max, avg: avg};\r\n            }\r\n        })\r\n        return colStats;\r\n    }\r\n\r\n    cstore.domains = function(col){\r\n        var col = col || attributes,\r\n            domains = [];\r\n\r\n        col.forEach(function(name, c){\r\n            domains[name] = [colStats[name].min, colStats[name].max];\r\n        })\r\n        return domains;\r\n    }\r\n\r\n    cstore.ctypes = function() {\r\n        return ctypes;\r\n    }\r\n\r\n    cstore.size = size;\r\n\r\n    cstore.exportAsJSON = function() {\r\n        var rows = new Array(size);\r\n        for(var ri = 0; ri < size; ri++) {\r\n            var dataFrame = {};\r\n            attributes.forEach(function(attr, ai) {\r\n                if(types[ai] == 'string') {\r\n                    dataFrame[attr] = strLists[attr][columns[ai][ri]];\r\n                } else {\r\n                    dataFrame[attr] = columns[ai][ri];\r\n                }\r\n            })\r\n            rows[ri] = dataFrame;\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    cstore.exportAsRowArray = function() {\r\n        var rows = new Array(size);\r\n        for(var ri = 0; ri < size; ri++) {\r\n            var row = new Array(attributes.length);\r\n            attributes.forEach(function(attr, ai) {\r\n                if(types[ai] == 'string') {\r\n                    row[ai] = strLists[attr][columns[ai][ri]];\r\n                } else {\r\n                    row[ai] = columns[ai][ri];\r\n                }\r\n            })\r\n            rows[ri] = row;\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    cstore.export = function(arg) {\r\n        var format = arg || 'json';\r\n        if(format == 'rowArray') {\r\n            return cstore.exportAsRowArray();\r\n        } else {\r\n            return cstore.exportAsJSON();\r\n        }\r\n    }\r\n\r\n    cstore.import = function(arg) {\r\n        var data = arg.data || [],\r\n            schema = arg.schema || {};\r\n        size = data.length;\r\n        initStruct(schema);\r\n        initCStore();\r\n        cstore.addObjects(data);\r\n    }\r\n\r\n    return initCStore();\r\n}\r\n","const int      = Int32Array;\nconst short    = Int16Array;\nconst float    = Float32Array;\nconst double   = Float64Array;\nconst string   = Uint16Array;\nconst time     = Float64Array;\nconst temporal = Float64Array;\nconst integer  = Int32Array;\nconst numeric  = Float32Array;\nconst nominal  = Uint16Array;\n\nexport {\n    int,\n    short,\n    float,\n    double,\n    string,\n    time,\n    temporal,\n    integer,\n    numeric,\n    nominal\n};\n","\nexport default function derive($p, spec) {\n\n    var derive = {},\n        dataDimension = $p.uniform.uDataDim.data,\n        deriveMax = $p.uniform.uDeriveCount.data,\n        derivedFields = Object.keys(spec);\n\n    var fields = $p.fields;\n\n    var marco = \"\\t\";\n\n    derivedFields.forEach(function(d, i){\n        var re = new RegExp(\"(\"+fields.join(\"|\")+\")\",\"g\");\n        // var formula = spec[d].replace(/@([\\w|\\d|_]+)/g, function(matched){\n        var formula = spec[d].replace(re, function(matched){\n            // console.log(matched);\n            var index = fields.indexOf(matched);\n            return 'this.getData('  + index + ', pos.x, pos.y)';\n        });\n        marco += 'if (index == ' + i + ') return ' + formula + \"; \\n \\telse \";\n    });\n\n    marco += \" return 0.0;\"\n\n    $p.uniform(\"uOptMode\", \"float\", 0)\n        .uniform(\"uDeriveId\", \"int\", 0)\n        .subroutine(\"getDerivedValue\", \"float\", new Function(\"$int_index\", \"$vec2_pos\", marco));\n\n\n    function vertexShader() {\n        gl_PointSize = 1.0;\n\n        var i, j;\n\n        i = (this.aDataIdx+0.5) / this.uDataDim.x;\n        j = (this.aDataIdy+0.5) / this.uDataDim.y;\n\n        this.vResult = this.getDerivedValue(this.uDeriveId, vec2(i, j));\n        if(this.uFilterFlag == 1) {\n            if(texture2D(this.fFilterResults, vec2(i, j)).a == 0.0)\n                this.vResult = 0.0;\n        }\n        var x, y;\n        if(this.uOptMode == 0.0){\n            x = 0.5;\n            y = 0.5;\n        } else {\n            x = i * 2.0 - 1.0;\n            y = j * 2.0 - 1.0;\n        }\n\n        gl_Position = vec4(x, y, 0.0, 1.0);\n    }\n\n    function fragmentShader() {\n        if(this.vResult == 0.0) discard;\n        if(this.uOptMode > 0.0 || this.vResult >= 0.0)\n            gl_FragColor = vec4(0.0, 0.0, 1.0, this.vResult);\n        else\n            gl_FragColor = vec4(-1.0, this.vResult, 0.0, 0.0);\n    }\n\n    var vs = $p.shader.vertex(vertexShader),\n        fs = $p.shader.fragment(fragmentShader),\n        gl = $p.createProgram(\"derive\", vs, fs);\n\n    // gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n    // gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n    // gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n    // gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n\n    function _execute() {\n\n        var gl = $p.program(\"derive\");\n        $p.framebuffer.enableRead(\"fFilterResults\");\n        $p.bindFramebuffer(\"fDerivedValues\");\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable( gl.BLEND );\n        gl.blendFunc( gl.ONE, gl.ONE );\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n\n        // $p.uniform.uDeriveCount = deriveFieldCount;\n        var deriveDomains = [];\n        derivedFields.forEach(function(d, i){\n            $p.uniform.uDeriveId = i;\n            gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n            gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.viewport(0, 0, 1,  1);\n\n            var result = new Float32Array(8);\n\n            gl.blendEquation(gl.MAX_EXT);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n            // gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, max);\n\n            gl.viewport(1, 0, 1,  1);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n\n            gl.blendEquation(gl.MIN_EXT);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n            gl.readPixels(0, 0, 2, 1, gl.RGBA, gl.FLOAT, result);\n\n            var minValue = (result[4] < 0) ? result[5] : result[7],\n                maxValue = (result[2] > 0) ? result[3] : result[1];\n            deriveDomains[i] = [minValue, maxValue];\n\n            // deriveDomains[i] = [Math.min(min[0], min[3]), Math.max(max[0], max[3])];\n        });\n        gl.viewport(0, 0, dataDimension[0], dataDimension[1]*deriveMax);\n        gl.disable( gl.BLEND );\n        gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n\n        $p.uniform.uOptMode = 1.0;\n\n        derivedFields.forEach(function(d, i){\n            $p.uniform.uDeriveId = i;\n            gl.viewport(0, dataDimension[1]*i, dataDimension[0], dataDimension[1]);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n        });\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return deriveDomains;\n    }\n\n    derive.execute = function(spec) {\n        var derivedFields = Object.keys(spec);\n        var newDerivedDomains = _execute();\n        if(!$p._update) {\n            newDerivedDomains.forEach(function(d, i) {\n                var fieldId = $p.fields.indexOf(derivedFields[i]);\n                if(fieldId === -1) {\n                    $p.fields.push(derivedFields[i]);\n                    fieldId = $p.fields.indexOf(derivedFields[i]);\n                    $p.deriveCount += 1;\n                }\n\n                $p.fieldDomains[fieldId] = d;\n                $p.fieldWidths[fieldId] = d[1] - d[0] + 1;\n            });\n\n            $p.uniform.uFieldDomains.data = $p.fieldDomains;\n            $p.uniform.uFieldWidths.data = $p.fieldWidths;\n        }\n    }\n\n    derive.result = function(arg) {\n        var options = arg || {},\n            offset = options.offset || [0, 0],\n            resultSize = options.size || $p.dataDimension[0]* $p.dataDimension[1],\n            fid = options.fieldId || options.deriveFieldId || 0,\n            rowSize = Math.min(resultSize, $p.dataDimension[0]),\n            colSize = Math.ceil(resultSize/$p.dataDimension[0]);\n\n        var result = new Float32Array(rowSize * colSize * 4);\n        gl.readPixels(0, dataDimension[1]*fid, rowSize, colSize, gl.RGBA, gl.FLOAT, result);\n        return result.filter(function(d, i){ return i%4===3;} ); //return channel alpha in rgba\n    }\n\n    return derive;\n}\n","const visualEncodings = ['x', 'y', 'color', 'opacity', 'width', 'height', 'size'];\n\nexport default function encode($p, vmap, colorManager) {\n    var opacity = vmap.opacity || vmap.alpha;\n    var vmapIndex = new Int32Array(visualEncodings.length);\n    visualEncodings.forEach(function(code, codeIndex){\n        vmapIndex[codeIndex] = $p.fields.indexOf(vmap[code]);\n    })\n    $p.uniform.uVisualEncodings.data = vmapIndex;\n    $p.uniform.uDefaultAlpha.data = 1.0;\n    if(vmapIndex[2] === -1) {\n        if (typeof(vmap.color) === 'string'){\n            if(vmap.color === 'auto') {\n                $p.revealDensity = true;\n                $p.uniform.uRevealMode.data = 1;\n            } else {\n                $p.uniform.uDefaultColor.data = colorManager.rgb(vmap.color);\n            }\n        } else {\n            if(typeof(vmap.size) == 'number') {\n                $p.uniform.uMarkSize = vmap.size;\n            }\n        }\n    } else {\n        if($p.categoryLookup.hasOwnProperty(vmap.color)) {\n            $p.uniform.uColorMode = 0;\n        } else {\n            $p.uniform.uColorMode = 1;\n        }\n    }\n\n    if(typeof(opacity) === 'number') {\n        $p.uniform.uDefaultAlpha.data = opacity;\n    } else if(vmapIndex[3] === -1 &&\n        typeof(opacity) == 'string' &&\n        opacity == 'auto'\n    ) {\n        $p.revealDensity = true;\n        $p.uniform.uRevealMode.data = 0;\n    }\n\n    //Check if need interleaving data attributes(e.g.,parallel coordinates)\n    if(Array.isArray(vmap.x) || Array.isArray(vmap.y)) {\n        $p.renderMode = 'interleave';\n        if(Array.isArray(vmap.x)){\n            // vmap.x = vmap.x.reverse();\n            $p.uniform.uInterleaveX = 0;\n        }\n        if(Array.isArray(vmap.y)) $p.uniform.uInterleaveX = 1;\n    } else if(vmap.mark && ['rect', 'bar'].indexOf(vmap.mark) !== -1) {\n        $p.renderMode = 'polygon';\n    }\n\n    if(vmapIndex[6] === -1 && typeof(vmap.size) == 'number') {\n        $p.uniform.uMarkSize = vmap.size;\n    }\n\n    var viewSetting = {};\n    var isRect = (['rect', 'bar'].indexOf(vmap.mark) !== -1);\n    var markSpace = [0, 0];\n    if(vmapIndex[0] > -1) {\n        var len = $p.fieldWidths[vmapIndex[0]],\n            ext = $p.fieldDomains[vmapIndex[0]];\n        if($p.categoryLookup.hasOwnProperty(vmap.x)){\n            viewSetting.scaleX = 'categorical';\n             viewSetting.domainX = new Array(len).fill(0).map(\n                 (d,i)=>$p.categoryLookup[vmap.x][i]\n             );\n         } else if (isRect) {\n             viewSetting.scaleX = 'ordinal';\n             viewSetting.domainX = new Array(len).fill(0).map((d,i)=>ext[0] + i);\n         }\n         markSpace[0] = 0.02;\n    }\n    if(vmapIndex[1] > -1) {\n        var len = $p.fieldWidths[vmapIndex[1]],\n            ext = $p.fieldDomains[vmapIndex[1]];\n\n        if($p.categoryLookup.hasOwnProperty(vmap.y)){\n             viewSetting.scaleY = 'categorical';\n             viewSetting.domainY = new Array(len).fill(0).map(\n                 (d,i)=>$p.categoryLookup[vmap.y][i]\n             ).reverse();\n        } else if (isRect) {\n            viewSetting.scaleY = 'ordinal';\n            viewSetting.domainY = new Array(len).fill(0).map((d,i)=>ext[0] + i).reverse();\n        }\n        markSpace[1] = 0.02;\n    }\n\n    if(vmapIndex[0] > -1 && vmapIndex[1] > -1) {\n        markSpace = [0, 0];\n    }\n\n    $p.uniform.uMarkSpace.data = markSpace;\n\n    if($p.intervals.hasOwnProperty(vmap.x) || $p.intervals.hasOwnProperty(vmap.y)) {\n        var histDim = vmap.x || vmap.y,\n            histMin = $p.intervals[histDim].min,\n            histMax = $p.intervals[histDim].max,\n            histIntv = $p.intervals[histDim].interval,\n            histBin = (histMax - histMin) / histIntv;\n\n        // viewSetting.fields = $p.fields;\n        viewSetting.isHistogram = true;\n        // viewSetting.domain = {};\n        viewSetting.domainX = new Array(histBin).fill(histMin).map(function(h, i) {return h + i*histIntv});\n    }\n\n    if(!$p._update) {\n        if(!vmap.width && vmap.x) {\n            $p.uniform.uDefaultWidth.data = 1.0 / ($p.fieldWidths[$p.fields.indexOf(vmap.x)] );\n        } else if(vmapIndex[4] === -1 && typeof(vmap.width) == 'number') {\n            $p.uniform.uDefaultWidth.data = vmap.width / width;\n        }\n\n        if(!vmap.height && vmap.y) {\n            $p.uniform.uDefaultHeight.data = 1.0 / ($p.fieldWidths[$p.fields.indexOf(vmap.y)] );\n        } else if(vmapIndex[5] === -1 && typeof(vmap.width) == 'number') {\n            $p.uniform.uDefaultHeight.data = vmap.height / height;\n        }\n    }\n    return viewSetting;\n}\n","\nconst smallest = -Math.pow(2, 128);\nexport default function extent(fxgl) {\n\n    var fieldCount = fxgl.uniform.uFieldCount.data;\n    fxgl.framebuffer(\"fStats\", \"float\", [2, fieldCount]);\n\n    var vs = fxgl.shader.vertex(function() {\n        gl_PointSize = 1.0;\n        var i, j;\n        if (this.aDataIdy * this.uDataDim.x + this.aDataIdx >= this.uDataSize) {\n            this.vDiscardData = 1.0;\n        } else {\n            this.vDiscardData = 0.0;\n            i = (this.aDataIdx + 0.5) / this.uDataDim.x;\n            j = (this.aDataIdy + 0.5) / this.uDataDim.y;\n            this.vResult = this.getData(this.uFieldId, i, j);\n        }\n        gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    });\n\n    var fs = fxgl.shader.fragment(function() {\n        if (this.vDiscardData == 1.0) discard;\n        if (this.vResult >= 0.0) {\n            gl_FragColor = vec4(0.0, 0.0, 1.0, this.vResult);\n        } else {\n            gl_FragColor = vec4(-1.0, this.vResult, 0.0, 0.0);\n        }\n    });\n\n    var gl = fxgl.program(\"stats\", vs, fs);\n\n    return function(fieldIds, dataDimension) {\n        if (!fxgl._update) {\n            fxgl.framebuffer(\"fStats\", \"float\", [2, fieldIds.length]);\n        }\n        var gl = fxgl.program(\"stats\");\n        fxgl.framebuffer.enableRead(\"fGroupResults\");\n\n        gl.ext.vertexAttribDivisorANGLE(fxgl.attribute.aDataIdx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE(fxgl.attribute.aDataValx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE(fxgl.attribute.aDataIdy.location, 1);\n        gl.ext.vertexAttribDivisorANGLE(fxgl.attribute.aDataValy.location, 1);\n\n        fxgl.bindFramebuffer(\"fStats\");\n        gl.clearColor(smallest, smallest, smallest, smallest);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE);\n        // gl.finish();\n        // fxgl.uniform.uDeriveCount = deriveFieldCount;\n        var extents = new Array(fieldIds.length);\n        var start = new Date();\n        var idCount = fxgl.uniform.uIndexCount.data;\n        fieldIds.forEach(function(d, i) {\n            fxgl.uniform.uFieldId = i + idCount;\n            gl.viewport(0, i, 1, 1);\n            gl.blendEquation(gl.MAX_EXT);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n            // gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, max);\n\n            gl.viewport(1, i, 1, 1);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n\n            gl.blendEquation(gl.MIN_EXT);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n\n            // var extent = new Float32Array(8);\n            // gl.readPixels(0, i, 2, 1, gl.RGBA, gl.FLOAT, extent);\n            // console.log(extent);\n            // var ext = extent;\n            // var minValue = (ext[0] > 0) ? ext[1] : ext[7],\n            //     maxValue = (ext[2] > 0) ? ext[3] : ext[5];\n            //  extents[i] = [minValue, maxValue];\n        });\n        var extent = new Float32Array(8 * fieldIds.length);\n        gl.readPixels(0, 0, 2, fieldIds.length, gl.RGBA, gl.FLOAT, extent);\n        fieldIds.forEach(function(d, i) {\n            var ext = extent.slice(i * 8, i * 8 + 8);\n            var minValue = (ext[4] < 0) ? ext[5] : ext[7],\n                maxValue = (ext[2] > 0) ? ext[3] : ext[1];\n            extents[i] = [minValue, maxValue];\n        });\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        return extents;\n    }\n}\n","export const gradients = {\n    \"inferno\": [\"#000004\", \"#010005\", \"#010106\", \"#010108\", \"#02010a\", \"#02020c\", \"#02020e\", \"#030210\", \"#040312\", \"#040314\", \"#050417\", \"#060419\", \"#07051b\", \"#08051d\", \"#09061f\", \"#0a0722\", \"#0b0724\", \"#0c0826\", \"#0d0829\", \"#0e092b\", \"#10092d\", \"#110a30\", \"#120a32\", \"#140b34\", \"#150b37\", \"#160b39\", \"#180c3c\", \"#190c3e\", \"#1b0c41\", \"#1c0c43\", \"#1e0c45\", \"#1f0c48\", \"#210c4a\", \"#230c4c\", \"#240c4f\", \"#260c51\", \"#280b53\", \"#290b55\", \"#2b0b57\", \"#2d0b59\", \"#2f0a5b\", \"#310a5c\", \"#320a5e\", \"#340a5f\", \"#360961\", \"#380962\", \"#390963\", \"#3b0964\", \"#3d0965\", \"#3e0966\", \"#400a67\", \"#420a68\", \"#440a68\", \"#450a69\", \"#470b6a\", \"#490b6a\", \"#4a0c6b\", \"#4c0c6b\", \"#4d0d6c\", \"#4f0d6c\", \"#510e6c\", \"#520e6d\", \"#540f6d\", \"#550f6d\", \"#57106e\", \"#59106e\", \"#5a116e\", \"#5c126e\", \"#5d126e\", \"#5f136e\", \"#61136e\", \"#62146e\", \"#64156e\", \"#65156e\", \"#67166e\", \"#69166e\", \"#6a176e\", \"#6c186e\", \"#6d186e\", \"#6f196e\", \"#71196e\", \"#721a6e\", \"#741a6e\", \"#751b6e\", \"#771c6d\", \"#781c6d\", \"#7a1d6d\", \"#7c1d6d\", \"#7d1e6d\", \"#7f1e6c\", \"#801f6c\", \"#82206c\", \"#84206b\", \"#85216b\", \"#87216b\", \"#88226a\", \"#8a226a\", \"#8c2369\", \"#8d2369\", \"#8f2469\", \"#902568\", \"#922568\", \"#932667\", \"#952667\", \"#972766\", \"#982766\", \"#9a2865\", \"#9b2964\", \"#9d2964\", \"#9f2a63\", \"#a02a63\", \"#a22b62\", \"#a32c61\", \"#a52c60\", \"#a62d60\", \"#a82e5f\", \"#a92e5e\", \"#ab2f5e\", \"#ad305d\", \"#ae305c\", \"#b0315b\", \"#b1325a\", \"#b3325a\", \"#b43359\", \"#b63458\", \"#b73557\", \"#b93556\", \"#ba3655\", \"#bc3754\", \"#bd3853\", \"#bf3952\", \"#c03a51\", \"#c13a50\", \"#c33b4f\", \"#c43c4e\", \"#c63d4d\", \"#c73e4c\", \"#c83f4b\", \"#ca404a\", \"#cb4149\", \"#cc4248\", \"#ce4347\", \"#cf4446\", \"#d04545\", \"#d24644\", \"#d34743\", \"#d44842\", \"#d54a41\", \"#d74b3f\", \"#d84c3e\", \"#d94d3d\", \"#da4e3c\", \"#db503b\", \"#dd513a\", \"#de5238\", \"#df5337\", \"#e05536\", \"#e15635\", \"#e25734\", \"#e35933\", \"#e45a31\", \"#e55c30\", \"#e65d2f\", \"#e75e2e\", \"#e8602d\", \"#e9612b\", \"#ea632a\", \"#eb6429\", \"#eb6628\", \"#ec6726\", \"#ed6925\", \"#ee6a24\", \"#ef6c23\", \"#ef6e21\", \"#f06f20\", \"#f1711f\", \"#f1731d\", \"#f2741c\", \"#f3761b\", \"#f37819\", \"#f47918\", \"#f57b17\", \"#f57d15\", \"#f67e14\", \"#f68013\", \"#f78212\", \"#f78410\", \"#f8850f\", \"#f8870e\", \"#f8890c\", \"#f98b0b\", \"#f98c0a\", \"#f98e09\", \"#fa9008\", \"#fa9207\", \"#fa9407\", \"#fb9606\", \"#fb9706\", \"#fb9906\", \"#fb9b06\", \"#fb9d07\", \"#fc9f07\", \"#fca108\", \"#fca309\", \"#fca50a\", \"#fca60c\", \"#fca80d\", \"#fcaa0f\", \"#fcac11\", \"#fcae12\", \"#fcb014\", \"#fcb216\", \"#fcb418\", \"#fbb61a\", \"#fbb81d\", \"#fbba1f\", \"#fbbc21\", \"#fbbe23\", \"#fac026\", \"#fac228\", \"#fac42a\", \"#fac62d\", \"#f9c72f\", \"#f9c932\", \"#f9cb35\", \"#f8cd37\", \"#f8cf3a\", \"#f7d13d\", \"#f7d340\", \"#f6d543\", \"#f6d746\", \"#f5d949\", \"#f5db4c\", \"#f4dd4f\", \"#f4df53\", \"#f4e156\", \"#f3e35a\", \"#f3e55d\", \"#f2e661\", \"#f2e865\", \"#f2ea69\", \"#f1ec6d\", \"#f1ed71\", \"#f1ef75\", \"#f1f179\", \"#f2f27d\", \"#f2f482\", \"#f3f586\", \"#f3f68a\", \"#f4f88e\", \"#f5f992\", \"#f6fa96\", \"#f8fb9a\", \"#f9fc9d\", \"#fafda1\", \"#fcffa4\"],\n    \"magma\": [\"#000004\", \"#010005\", \"#010106\", \"#010108\", \"#020109\", \"#02020b\", \"#02020d\", \"#03030f\", \"#030312\", \"#040414\", \"#050416\", \"#060518\", \"#06051a\", \"#07061c\", \"#08071e\", \"#090720\", \"#0a0822\", \"#0b0924\", \"#0c0926\", \"#0d0a29\", \"#0e0b2b\", \"#100b2d\", \"#110c2f\", \"#120d31\", \"#130d34\", \"#140e36\", \"#150e38\", \"#160f3b\", \"#180f3d\", \"#19103f\", \"#1a1042\", \"#1c1044\", \"#1d1147\", \"#1e1149\", \"#20114b\", \"#21114e\", \"#221150\", \"#241253\", \"#251255\", \"#271258\", \"#29115a\", \"#2a115c\", \"#2c115f\", \"#2d1161\", \"#2f1163\", \"#311165\", \"#331067\", \"#341069\", \"#36106b\", \"#38106c\", \"#390f6e\", \"#3b0f70\", \"#3d0f71\", \"#3f0f72\", \"#400f74\", \"#420f75\", \"#440f76\", \"#451077\", \"#471078\", \"#491078\", \"#4a1079\", \"#4c117a\", \"#4e117b\", \"#4f127b\", \"#51127c\", \"#52137c\", \"#54137d\", \"#56147d\", \"#57157e\", \"#59157e\", \"#5a167e\", \"#5c167f\", \"#5d177f\", \"#5f187f\", \"#601880\", \"#621980\", \"#641a80\", \"#651a80\", \"#671b80\", \"#681c81\", \"#6a1c81\", \"#6b1d81\", \"#6d1d81\", \"#6e1e81\", \"#701f81\", \"#721f81\", \"#732081\", \"#752181\", \"#762181\", \"#782281\", \"#792282\", \"#7b2382\", \"#7c2382\", \"#7e2482\", \"#802582\", \"#812581\", \"#832681\", \"#842681\", \"#862781\", \"#882781\", \"#892881\", \"#8b2981\", \"#8c2981\", \"#8e2a81\", \"#902a81\", \"#912b81\", \"#932b80\", \"#942c80\", \"#962c80\", \"#982d80\", \"#992d80\", \"#9b2e7f\", \"#9c2e7f\", \"#9e2f7f\", \"#a02f7f\", \"#a1307e\", \"#a3307e\", \"#a5317e\", \"#a6317d\", \"#a8327d\", \"#aa337d\", \"#ab337c\", \"#ad347c\", \"#ae347b\", \"#b0357b\", \"#b2357b\", \"#b3367a\", \"#b5367a\", \"#b73779\", \"#b83779\", \"#ba3878\", \"#bc3978\", \"#bd3977\", \"#bf3a77\", \"#c03a76\", \"#c23b75\", \"#c43c75\", \"#c53c74\", \"#c73d73\", \"#c83e73\", \"#ca3e72\", \"#cc3f71\", \"#cd4071\", \"#cf4070\", \"#d0416f\", \"#d2426f\", \"#d3436e\", \"#d5446d\", \"#d6456c\", \"#d8456c\", \"#d9466b\", \"#db476a\", \"#dc4869\", \"#de4968\", \"#df4a68\", \"#e04c67\", \"#e24d66\", \"#e34e65\", \"#e44f64\", \"#e55064\", \"#e75263\", \"#e85362\", \"#e95462\", \"#ea5661\", \"#eb5760\", \"#ec5860\", \"#ed5a5f\", \"#ee5b5e\", \"#ef5d5e\", \"#f05f5e\", \"#f1605d\", \"#f2625d\", \"#f2645c\", \"#f3655c\", \"#f4675c\", \"#f4695c\", \"#f56b5c\", \"#f66c5c\", \"#f66e5c\", \"#f7705c\", \"#f7725c\", \"#f8745c\", \"#f8765c\", \"#f9785d\", \"#f9795d\", \"#f97b5d\", \"#fa7d5e\", \"#fa7f5e\", \"#fa815f\", \"#fb835f\", \"#fb8560\", \"#fb8761\", \"#fc8961\", \"#fc8a62\", \"#fc8c63\", \"#fc8e64\", \"#fc9065\", \"#fd9266\", \"#fd9467\", \"#fd9668\", \"#fd9869\", \"#fd9a6a\", \"#fd9b6b\", \"#fe9d6c\", \"#fe9f6d\", \"#fea16e\", \"#fea36f\", \"#fea571\", \"#fea772\", \"#fea973\", \"#feaa74\", \"#feac76\", \"#feae77\", \"#feb078\", \"#feb27a\", \"#feb47b\", \"#feb67c\", \"#feb77e\", \"#feb97f\", \"#febb81\", \"#febd82\", \"#febf84\", \"#fec185\", \"#fec287\", \"#fec488\", \"#fec68a\", \"#fec88c\", \"#feca8d\", \"#fecc8f\", \"#fecd90\", \"#fecf92\", \"#fed194\", \"#fed395\", \"#fed597\", \"#fed799\", \"#fed89a\", \"#fdda9c\", \"#fddc9e\", \"#fddea0\", \"#fde0a1\", \"#fde2a3\", \"#fde3a5\", \"#fde5a7\", \"#fde7a9\", \"#fde9aa\", \"#fdebac\", \"#fcecae\", \"#fceeb0\", \"#fcf0b2\", \"#fcf2b4\", \"#fcf4b6\", \"#fcf6b8\", \"#fcf7b9\", \"#fcf9bb\", \"#fcfbbd\", \"#fcfdbf\"],\n    \"plasma\": [\"#0d0887\", \"#100788\", \"#130789\", \"#16078a\", \"#19068c\", \"#1b068d\", \"#1d068e\", \"#20068f\", \"#220690\", \"#240691\", \"#260591\", \"#280592\", \"#2a0593\", \"#2c0594\", \"#2e0595\", \"#2f0596\", \"#310597\", \"#330597\", \"#350498\", \"#370499\", \"#38049a\", \"#3a049a\", \"#3c049b\", \"#3e049c\", \"#3f049c\", \"#41049d\", \"#43039e\", \"#44039e\", \"#46039f\", \"#48039f\", \"#4903a0\", \"#4b03a1\", \"#4c02a1\", \"#4e02a2\", \"#5002a2\", \"#5102a3\", \"#5302a3\", \"#5502a4\", \"#5601a4\", \"#5801a4\", \"#5901a5\", \"#5b01a5\", \"#5c01a6\", \"#5e01a6\", \"#6001a6\", \"#6100a7\", \"#6300a7\", \"#6400a7\", \"#6600a7\", \"#6700a8\", \"#6900a8\", \"#6a00a8\", \"#6c00a8\", \"#6e00a8\", \"#6f00a8\", \"#7100a8\", \"#7201a8\", \"#7401a8\", \"#7501a8\", \"#7701a8\", \"#7801a8\", \"#7a02a8\", \"#7b02a8\", \"#7d03a8\", \"#7e03a8\", \"#8004a8\", \"#8104a7\", \"#8305a7\", \"#8405a7\", \"#8606a6\", \"#8707a6\", \"#8808a6\", \"#8a09a5\", \"#8b0aa5\", \"#8d0ba5\", \"#8e0ca4\", \"#8f0da4\", \"#910ea3\", \"#920fa3\", \"#9410a2\", \"#9511a1\", \"#9613a1\", \"#9814a0\", \"#99159f\", \"#9a169f\", \"#9c179e\", \"#9d189d\", \"#9e199d\", \"#a01a9c\", \"#a11b9b\", \"#a21d9a\", \"#a31e9a\", \"#a51f99\", \"#a62098\", \"#a72197\", \"#a82296\", \"#aa2395\", \"#ab2494\", \"#ac2694\", \"#ad2793\", \"#ae2892\", \"#b02991\", \"#b12a90\", \"#b22b8f\", \"#b32c8e\", \"#b42e8d\", \"#b52f8c\", \"#b6308b\", \"#b7318a\", \"#b83289\", \"#ba3388\", \"#bb3488\", \"#bc3587\", \"#bd3786\", \"#be3885\", \"#bf3984\", \"#c03a83\", \"#c13b82\", \"#c23c81\", \"#c33d80\", \"#c43e7f\", \"#c5407e\", \"#c6417d\", \"#c7427c\", \"#c8437b\", \"#c9447a\", \"#ca457a\", \"#cb4679\", \"#cc4778\", \"#cc4977\", \"#cd4a76\", \"#ce4b75\", \"#cf4c74\", \"#d04d73\", \"#d14e72\", \"#d24f71\", \"#d35171\", \"#d45270\", \"#d5536f\", \"#d5546e\", \"#d6556d\", \"#d7566c\", \"#d8576b\", \"#d9586a\", \"#da5a6a\", \"#da5b69\", \"#db5c68\", \"#dc5d67\", \"#dd5e66\", \"#de5f65\", \"#de6164\", \"#df6263\", \"#e06363\", \"#e16462\", \"#e26561\", \"#e26660\", \"#e3685f\", \"#e4695e\", \"#e56a5d\", \"#e56b5d\", \"#e66c5c\", \"#e76e5b\", \"#e76f5a\", \"#e87059\", \"#e97158\", \"#e97257\", \"#ea7457\", \"#eb7556\", \"#eb7655\", \"#ec7754\", \"#ed7953\", \"#ed7a52\", \"#ee7b51\", \"#ef7c51\", \"#ef7e50\", \"#f07f4f\", \"#f0804e\", \"#f1814d\", \"#f1834c\", \"#f2844b\", \"#f3854b\", \"#f3874a\", \"#f48849\", \"#f48948\", \"#f58b47\", \"#f58c46\", \"#f68d45\", \"#f68f44\", \"#f79044\", \"#f79143\", \"#f79342\", \"#f89441\", \"#f89540\", \"#f9973f\", \"#f9983e\", \"#f99a3e\", \"#fa9b3d\", \"#fa9c3c\", \"#fa9e3b\", \"#fb9f3a\", \"#fba139\", \"#fba238\", \"#fca338\", \"#fca537\", \"#fca636\", \"#fca835\", \"#fca934\", \"#fdab33\", \"#fdac33\", \"#fdae32\", \"#fdaf31\", \"#fdb130\", \"#fdb22f\", \"#fdb42f\", \"#fdb52e\", \"#feb72d\", \"#feb82c\", \"#feba2c\", \"#febb2b\", \"#febd2a\", \"#febe2a\", \"#fec029\", \"#fdc229\", \"#fdc328\", \"#fdc527\", \"#fdc627\", \"#fdc827\", \"#fdca26\", \"#fdcb26\", \"#fccd25\", \"#fcce25\", \"#fcd025\", \"#fcd225\", \"#fbd324\", \"#fbd524\", \"#fbd724\", \"#fad824\", \"#fada24\", \"#f9dc24\", \"#f9dd25\", \"#f8df25\", \"#f8e125\", \"#f7e225\", \"#f7e425\", \"#f6e626\", \"#f6e826\", \"#f5e926\", \"#f5eb27\", \"#f4ed27\", \"#f3ee27\", \"#f3f027\", \"#f2f227\", \"#f1f426\", \"#f1f525\", \"#f0f724\", \"#f0f921\"],\n    \"viridis\": [\"#440154\", \"#440256\", \"#450457\", \"#450559\", \"#46075a\", \"#46085c\", \"#460a5d\", \"#460b5e\", \"#470d60\", \"#470e61\", \"#471063\", \"#471164\", \"#471365\", \"#481467\", \"#481668\", \"#481769\", \"#48186a\", \"#481a6c\", \"#481b6d\", \"#481c6e\", \"#481d6f\", \"#481f70\", \"#482071\", \"#482173\", \"#482374\", \"#482475\", \"#482576\", \"#482677\", \"#482878\", \"#482979\", \"#472a7a\", \"#472c7a\", \"#472d7b\", \"#472e7c\", \"#472f7d\", \"#46307e\", \"#46327e\", \"#46337f\", \"#463480\", \"#453581\", \"#453781\", \"#453882\", \"#443983\", \"#443a83\", \"#443b84\", \"#433d84\", \"#433e85\", \"#423f85\", \"#424086\", \"#424186\", \"#414287\", \"#414487\", \"#404588\", \"#404688\", \"#3f4788\", \"#3f4889\", \"#3e4989\", \"#3e4a89\", \"#3e4c8a\", \"#3d4d8a\", \"#3d4e8a\", \"#3c4f8a\", \"#3c508b\", \"#3b518b\", \"#3b528b\", \"#3a538b\", \"#3a548c\", \"#39558c\", \"#39568c\", \"#38588c\", \"#38598c\", \"#375a8c\", \"#375b8d\", \"#365c8d\", \"#365d8d\", \"#355e8d\", \"#355f8d\", \"#34608d\", \"#34618d\", \"#33628d\", \"#33638d\", \"#32648e\", \"#32658e\", \"#31668e\", \"#31678e\", \"#31688e\", \"#30698e\", \"#306a8e\", \"#2f6b8e\", \"#2f6c8e\", \"#2e6d8e\", \"#2e6e8e\", \"#2e6f8e\", \"#2d708e\", \"#2d718e\", \"#2c718e\", \"#2c728e\", \"#2c738e\", \"#2b748e\", \"#2b758e\", \"#2a768e\", \"#2a778e\", \"#2a788e\", \"#29798e\", \"#297a8e\", \"#297b8e\", \"#287c8e\", \"#287d8e\", \"#277e8e\", \"#277f8e\", \"#27808e\", \"#26818e\", \"#26828e\", \"#26828e\", \"#25838e\", \"#25848e\", \"#25858e\", \"#24868e\", \"#24878e\", \"#23888e\", \"#23898e\", \"#238a8d\", \"#228b8d\", \"#228c8d\", \"#228d8d\", \"#218e8d\", \"#218f8d\", \"#21908d\", \"#21918c\", \"#20928c\", \"#20928c\", \"#20938c\", \"#1f948c\", \"#1f958b\", \"#1f968b\", \"#1f978b\", \"#1f988b\", \"#1f998a\", \"#1f9a8a\", \"#1e9b8a\", \"#1e9c89\", \"#1e9d89\", \"#1f9e89\", \"#1f9f88\", \"#1fa088\", \"#1fa188\", \"#1fa187\", \"#1fa287\", \"#20a386\", \"#20a486\", \"#21a585\", \"#21a685\", \"#22a785\", \"#22a884\", \"#23a983\", \"#24aa83\", \"#25ab82\", \"#25ac82\", \"#26ad81\", \"#27ad81\", \"#28ae80\", \"#29af7f\", \"#2ab07f\", \"#2cb17e\", \"#2db27d\", \"#2eb37c\", \"#2fb47c\", \"#31b57b\", \"#32b67a\", \"#34b679\", \"#35b779\", \"#37b878\", \"#38b977\", \"#3aba76\", \"#3bbb75\", \"#3dbc74\", \"#3fbc73\", \"#40bd72\", \"#42be71\", \"#44bf70\", \"#46c06f\", \"#48c16e\", \"#4ac16d\", \"#4cc26c\", \"#4ec36b\", \"#50c46a\", \"#52c569\", \"#54c568\", \"#56c667\", \"#58c765\", \"#5ac864\", \"#5cc863\", \"#5ec962\", \"#60ca60\", \"#63cb5f\", \"#65cb5e\", \"#67cc5c\", \"#69cd5b\", \"#6ccd5a\", \"#6ece58\", \"#70cf57\", \"#73d056\", \"#75d054\", \"#77d153\", \"#7ad151\", \"#7cd250\", \"#7fd34e\", \"#81d34d\", \"#84d44b\", \"#86d549\", \"#89d548\", \"#8bd646\", \"#8ed645\", \"#90d743\", \"#93d741\", \"#95d840\", \"#98d83e\", \"#9bd93c\", \"#9dd93b\", \"#a0da39\", \"#a2da37\", \"#a5db36\", \"#a8db34\", \"#aadc32\", \"#addc30\", \"#b0dd2f\", \"#b2dd2d\", \"#b5de2b\", \"#b8de29\", \"#bade28\", \"#bddf26\", \"#c0df25\", \"#c2df23\", \"#c5e021\", \"#c8e020\", \"#cae11f\", \"#cde11d\", \"#d0e11c\", \"#d2e21b\", \"#d5e21a\", \"#d8e219\", \"#dae319\", \"#dde318\", \"#dfe318\", \"#e2e418\", \"#e5e419\", \"#e7e419\", \"#eae51a\", \"#ece51b\", \"#efe51c\", \"#f1e51d\", \"#f4e61e\", \"#f6e620\", \"#f8e621\", \"#fbe723\", \"#fde725\"]\n};\n","import FlexGL from '../flexgl/src/flexgl';\n\nexport default function init(options) {\n    var $p = options.context || null,\n        container = options.container || document.body,\n        viewport = options.viewport || [800, 450],\n        padding = {left:0, right: 0,top: 0, bottom: 0};\n\n    var defaultLayout = [\n        {\n            width: viewport[0],\n            height: viewport[1],\n            padding: {left: 30, right: 30, top: 30, bottom: 30},\n            offset: [0, 0]\n        }\n    ];\n    if ($p === null) {\n        $p = new FlexGL({\n            container: container,\n            width: viewport[0],\n            height: viewport[1],\n            padding: padding\n        });\n        $p.padding = padding;\n        $p.viewport = viewport;\n    }\n    $p.container = container;\n    $p.views = options.views || defaultLayout;\n    return $p;\n}\n","\nimport Brush from './metavis/brush';\nexport default function interact($p, options) {\n    var viewTags = options.view || [$p.views[0].id];\n\n    if(!Array.isArray(viewTags)) viewTags = [viewTags];\n\n    var actions = options.actions || options.events || [],\n        condition = options.condition || {},\n        callback = options.callback || function() {};\n\n    if($p._update) return;\n\n    viewTags.forEach(function(viewTag){\n        var vis = $p.views.filter(v=>v.id == viewTag)[0];\n\n        if(!Array.isArray(actions)) {\n            actions = [actions];\n        }\n        var vmap = vis.vmap,\n            p = vis.padding || $p.padding,\n            w = vis.width - p.left - p.right,\n            h = vis.height - p.top - p.bottom;\n\n        var interactor = vis.chart.svg.append(\"g\")\n                .attr(\"class\", \"selector\")\n\n        var rect = interactor.append(\"rect\")\n          .attr(\"x\", 0)\n          .attr(\"y\", 0)\n          .attr(\"width\", w)\n          .attr(\"height\", h)\n          .attr(\"fill-opacity\", 0)\n          .attr(\"stroke\", \"none\");\n\n        var svg = interactor.svg,\n            box = rect.svg.getBoundingClientRect();\n\n        var sx, sy,\n            tx = 0, ty = 0,\n            dy = 1;\n\n        function updatePos(e) {\n            tx += (e.clientX - sx) / dy;\n            ty += (e.clientY - sy) / dy;\n            sx = e.clientX;\n            sy = e.clientY;\n            $p.uniform.uPosOffset.data = [tx / w, ty / h];\n        }\n\n        function getSelection(e) {\n            var dx = e.clientX - box.left;\n            var dy = e.clientY - box.top;\n            var selection = {};\n            if(vmap.x) {\n                selection[vmap.x] = [vis.chart.x.invert(dx)];\n            }\n            if(vmap.y) {\n                selection[vmap.y] = [vis.chart.y.invert(dy)];\n            }\n            return selection;\n        }\n\n        actions.forEach(function(action){\n            if(action == 'brush') {\n                svg.style.cursor = \"crosshair\";\n                var brushOptions = {\n                    container: interactor,\n                    width: w,\n                    height: h\n                };\n\n                if(!Array.isArray(vmap.x) && !Array.isArray(vmap.y)) {\n                    if(!condition.x && !condition.y) {\n                        condition.x = condition.y = true;\n                    }\n                    brushOptions.brush = function(d) {\n                        var selection = {};\n                        if(vmap.x && d.x) selection[vmap.x] = d.x;\n                        if(vmap.y && d.y) selection[vmap.y] = d.y.reverse();\n                        callback(selection);\n                    }\n                    if(condition.x && typeof(vis.chart.x.invert) == 'function')\n                        brushOptions.x = vis.chart.x.invert;\n\n                    if(condition.y && typeof(vis.chart.y.invert) == 'function')\n                        brushOptions.y = vis.chart.y.invert\n\n                    new Brush(brushOptions);\n                }\n\n                var dims = ['x', 'y'],\n                    selections = {};\n\n                dims.forEach(function(dim){\n                    if(Array.isArray(vmap[dim]) && Array.isArray(vis.chart[dim])){\n                        var axisDist = (dim == 'x') ? h : w,\n                            selectors = vis.chart.svg.append('g');\n\n                        axisDist =  axisDist / (vmap[dim].length-1);\n\n                        vmap[dim].forEach(function(d, i) {\n\n                            var axisSelect = selectors.append(\"g\");\n                            if(dim == 'x') {\n                                brushOptions.height = axisDist * 0.2;\n                                axisSelect.translate(0, axisDist * (i - 0.1));\n                                brushOptions.brush = function(range) {\n                                    selections[d] = range[dim];\n                                    callback(selections);\n                                }\n                            } else {\n                                brushOptions.width = axisDist * 0.2;\n                                axisSelect.translate(axisDist * (i - 0.1), 0);\n                                brushOptions.brush = function(range) {\n                                    selections[d] = range[dim].reverse();\n                                    callback(selections);\n                                }\n                            }\n                            brushOptions.container = axisSelect;\n                            brushOptions[dim] = vis.chart[dim][i].invert;\n\n                            new Brush(brushOptions);\n                        });\n                    }\n                })\n            } else if(action == 'zoom') {\n                svg.onmousewheel = function(e) {\n                    sx = e.clientX - box.left;\n                    sy = e.clientY - box.top;\n                    var ny =  dy * Math.exp(e.deltaY / 1000);\n                    var delta = ny - dy;\n                    dy = ny;\n                    $p.uniform.uPosOffset.data = [-sx * delta / w, -sy * delta / h];\n                    $p.uniform.uVisScale.data = [dy, dy];\n\n                    callback();\n                }\n\n            } else if(action == 'pan') {\n                svg.style.cursor = 'move';\n                svg.onmousedown = function(e) {\n                    sx = e.clientX;\n                    sy = e.clientY;\n                    svg.style.cursor = 'move';\n\n                    svg.onmousemove = function(e) {\n                        tx += (e.clientX - sx) / dy;\n                        ty += (e.clientY - sy);\n\n                        callback();\n                    }\n\n                    svg.onmouseup = function(e) {\n                        updatePos(e);\n                        svg.style.cursor = 'default';\n                        svg.onmousemove = null;\n                        svg.onmouseup = null;\n                    }\n                }\n\n            } else if(action == 'click') {\n                svg.onclick = function(e) {\n                    callback(getSelection(e));\n                }\n            } else if(action == 'hover') {\n                svg.onmouseover = function(e) {\n                    callback(getSelection(e));\n                    svg.onmousemove = function(e) {\n                        callback(getSelection(e));\n                    }\n\n                    // svg.onmouseout = function(e) {\n                    //     updatePos(e);\n                    //     svg.style.cursor = 'default';\n                    //     svg.onmousemove = null;\n                    //     svg.onmouseover = null;\n                    // }\n                }\n            }\n        })\n    })\n}\n","function vertexShaderFilter(){\n    var i, j, k, value;\n    var filter = new Int(0);\n    var sel = new Int(0);\n    var visSelect = new Bool(false);\n    i = (this.aDataIdx+0.5) / this.uDataDim.x;\n    j = (this.aDataIdy+0.5) / this.uDataDim.y;\n\n    for(var f = 0; f < $(fieldCount)+$(indexCount); f++) {\n        if(this.uFilterControls[f] == 1 || this.uVisControls[f] == 1) {\n            value = this.getData(f, i, j);\n\n            if(this.uFilterControls[f] == 1) {\n                if(value < this.uFilterRanges[f].x || value >= this.uFilterRanges[f].y) {\n                    filter -= 1;\n                }\n            }\n            if(this.uVisControls[f] == 1) {\n                if(value < this.uVisRanges[f].x || value >= this.uVisRanges[f].y) {\n                    sel -= 1;\n                }\n                visSelect = true;\n            }\n\n        }\n    }\n    this.vResult = 0.1;\n    if(filter < 0) {\n        this.vResult = 0.0;\n    } else {\n        if(visSelect)\n            this.vResult = (sel < 0) ? 0.1 : 0.2;\n    }\n    var x = i * 2.0 - 1.0;\n    var y = j * 2.0 - 1.0;\n    gl_PointSize = 1.0;\n    gl_Position = vec4(x, y, 0.0, 1.0);\n}\n\nfunction vertexShaderSelect(){\n    var i, j, k, value;\n    i = (this.aDataIdx+0.5) / this.uDataDim.x;\n    j = (this.aDataIdy+0.5) / this.uDataDim.y;\n    this.vResult = this.uFilterLevel - 0.1;\n    value = this.getData(this.uFieldId, i, j);\n    for(var l = 0; l < 100; l++){\n        if(l < this.uSelectCount) {\n            if(value == this.uInSelections[l]) {\n                this.vResult = this.uFilterLevel;\n            }\n        }\n    }\n    var x = i * 2.0 - 1.0;\n    var y = j * 2.0 - 1.0;\n    gl_PointSize = 1.0;\n    gl_Position = vec4(x, y, 0.0, 1.0);\n}\n\nfunction fragmentShader() {\n    gl_FragColor = vec4(0., 0., 0., this.vResult);\n}\n\nexport default function match($p) {\n    const SELECT_MAX = 100;\n    var match = {},\n        dataDimension = $p.uniform.uDataDim.data,\n        fieldCount = $p.fields.length,\n        filterControls = new Array(fieldCount).fill(0),\n        filterRanges = $p.fieldDomains,\n        visControls = new Array(fieldCount).fill(0),\n        visRanges = $p.fieldDomains,\n        inSelections = new Array(SELECT_MAX);\n\n    $p.uniform(\"uFilterControls\",\"int\", filterControls)\n        .uniform(\"uVisControls\",\"int\", filterControls)\n        .uniform(\"uFilterRanges\",\"vec2\", filterRanges)\n        .uniform(\"uVisRanges\",\"vec2\", filterRanges)\n        .uniform(\"uInSelections\", \"float\", Float32Array.from(inSelections))\n        .uniform(\"uSelectMax\", \"int\", SELECT_MAX)\n        .uniform(\"uSelectCount\", \"int\", 0);\n\n    var filter = {\n        vs: $p.shader.vertex(vertexShaderFilter),\n        fs: $p.shader.fragment(fragmentShader)\n    };\n\n    var sel = {\n        vs: $p.shader.vertex(vertexShaderSelect),\n        fs: $p.shader.fragment(fragmentShader)\n    };\n\n    $p.program(\"filter\", filter.vs, filter.fs);\n    $p.program(\"match\", sel.vs, sel.fs);\n\n    match.control = function(ctrl) {\n        // filterControls = ctrl;\n    }\n\n    function _execute(spec){\n        var fields = $p.fields\n        var gl;\n        var matchFields = Object.keys(spec).filter(function(s){\n            return spec[s].hasOwnProperty('$in');\n        })\n        .concat(Object.keys($p.crossfilters).filter(function(s){\n            return $p.crossfilters[s].hasOwnProperty('$in');\n        }))\n\n\n        $p.bindFramebuffer(\"fFilterResults\");\n        $p.framebuffer.enableRead(\"fDerivedValues\");\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n        if(matchFields.length) {\n            gl = $p.program(\"match\");\n            gl.viewport(0, 0, dataDimension[0], dataDimension[1]);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n            gl.clearColor( 1.0, 1.0, 1.0, 1.0 );\n            gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.enable( gl.BLEND );\n            gl.blendFunc( gl.ONE, gl.ONE );\n            gl.blendEquation(gl.MIN_EXT);\n\n            matchFields.forEach(function(k){\n                var fieldId = fields.indexOf(k);\n                var inSelections = (spec.hasOwnProperty(k)) ? spec[k].$in :  $p.crossfilters[k].$in;\n                if($p.categoryIndex.hasOwnProperty(k)) {\n                    inSelections = inSelections\n                        .slice(0, SELECT_MAX)\n                        .map(function(v) { return $p.categoryIndex[k][v]; });\n                } else {\n                    inSelections = inSelections.slice(0, SELECT_MAX);\n                }\n                $p.uniform.uSelectCount = inSelections.length;\n                $p.uniform.uInSelections = Float32Array.from(inSelections);\n                $p.uniform.uFieldId = fieldId;\n\n                gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n                // filterRanges[fieldId*2] = Math.min.apply(null, spec[k].$in);\n                // filterRanges[fieldId*2+1] = Math.max.apply(null, spec[k].$in);\n                filterRanges[fieldId] = [Math.min.apply(null, inSelections), Math.max.apply(null, inSelections)];\n            })\n        }\n        // console.log($p._responseType, spec);\n        var filterSelections = Object.keys(spec).filter(function(s){\n            return !spec[s].hasOwnProperty('$in');\n        });\n\n        var viewSelections = Object.keys($p.crossfilters).filter(function(s){\n            return !$p.crossfilters[s].hasOwnProperty('$in');\n        });;\n\n        if(filterSelections.length || viewSelections.length){\n            filterControls = new Array(fieldCount).fill(0);\n\n            filterSelections.forEach(function(k){\n                var fieldId = fields.indexOf(k);\n\n                if(fieldId === -1) {\n                    console.log('Skipped: Matching on invalid data field ' + k);\n                    return;\n                }\n                if(spec[k].length < 2) spec[k][1] = spec[k][0];\n                filterControls[fieldId] = 1;\n                filterRanges[fieldId] = spec[k];\n                // filterRanges[fieldId*2] = spec[k][0];\n                // filterRanges[fieldId*2+1] = spec[k][1];\n            });\n\n            viewSelections.forEach(function(k){\n                var fieldId = fields.indexOf(k);\n                if(fieldId === -1) {\n                    console.log('Skipped: Matching on invalid data field ' + k);\n                    return;\n                }\n                if($p.crossfilters[k].length < 2) $p.crossfilters[k][1] = $p.crossfilters[k][0];\n                visControls[fieldId] = 1;\n                visRanges[fieldId] = $p.crossfilters[k];\n            });\n\n            $p.uniform.uFilterControls.data = filterControls;\n            $p.uniform.uFilterRanges.data = filterRanges;\n            $p.uniform.uVisControls.data = visControls;\n            $p.uniform.uVisRanges.data = visRanges;\n\n            gl = $p.program(\"filter\");\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n            gl.disable(gl.BLEND);\n            // gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n            // gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n\n            gl.viewport(0, 0, dataDimension[0], dataDimension[1]);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n        }\n        $p.ctx.bindFramebuffer($p.ctx.FRAMEBUFFER, null);\n        return filterRanges;\n    }\n\n    match.execute = function(spec) {\n        filterControls = new Array(fieldCount).fill(0);\n        visControls = new Array(fieldCount).fill(0);\n        var filterSpec = spec;\n\n\n        Object.keys($p.crossfilters).forEach(function(k, i) {\n            if($p.categoryIndex.hasOwnProperty(k) && !$p.crossfilters[k].$in) {\n                $p.crossfilters[k] = {$in: $p.crossfilters[k]};\n            }\n        });\n\n\n        Object.keys(filterSpec).forEach(function(k, i) {\n            if($p.categoryIndex.hasOwnProperty(k) && !spec[k].$in) {\n                spec[k] = {$in: spec[k]};\n            }\n        });\n\n        $p.uniform.uFilterFlag = 1;\n        if(!$p._update) {\n            filterRanges = $p.fieldDomains.slice();\n            visRanges = $p.fieldDomains.slice();\n        }\n        var newDomains = _execute(spec);\n\n        if(!$p._update){\n            // console.log('checking filter domains', newDomains);\n            newDomains.forEach(function(domain, fid) {\n                var d = domain;\n                if($p.dtypes[fid] == 'int') d[1] -= 1;\n                $p.fieldDomains[fid] = d;\n                $p.fieldWidths[fid] = $p.getDataWidth(fid, d);\n            });\n\n            $p.uniform.uFieldDomains.data = $p.fieldDomains;\n            $p.uniform.uFieldWidths.data = $p.fieldWidths;\n        }\n    }\n\n    match.result = function(arg) {\n        var options = arg || {},\n            offset = options.offset || [0, 0],\n            resultSize = options.size || $p.dataDimension[0]* $p.dataDimension[1],\n            rowSize = Math.min(resultSize, $p.dataDimension[0]),\n            colSize = Math.ceil(resultSize/$p.dataDimension[0]);\n\n        $p.bindFramebuffer(\"fFilterResults\");\n\n        var gl = $p.ctx;\n        var bitmap = new Uint8Array(rowSize*colSize*4);\n        gl.readPixels(offset[0], offset[1], rowSize, colSize, gl.RGBA, gl.UNSIGNED_BYTE, bitmap);\n        // console.log(result.filter(function(d, i){ return i%4===0;} ));\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        // var result = [];\n        // bitmap.forEach(function(d, i){ if(i%3===0 && d!==0) result.push(d);});\n        // console.log(result);\n        // return result;\n        return  bitmap;\n    }\n\n    return match;\n}\n","import Scale from './scale';\n\nexport default function axis(arg) {\n\n    var option      = arg || {},\n        svg         = option.container || option.parent,\n        dim         = option.dim || \"x\",\n        color       = option.color || \"#000\",\n        position    = option.position || 0,\n        align       = option.align || \"\",\n        scale       = option.scale || \"linear\",\n        exponent    = option.exponent || 1,\n        metric      = option.metric || null,\n        domain      = option.domain || [0,1],\n        width       = option.width || svg.innerWidth(),\n        height      = option.height || svg.innerHeight(),\n        padding     = option.padding || svg.padding() || {left: 0, right: 0, top: 0, bottom: 0},\n        range       = option.range || (dim == \"x\") ? [0, width] : [height, 0],\n        styles      = {stroke: color, 'stroke-width': 1},\n        ticks       = option.ticks,\n        tickLength  = option.tickLength || 6,\n        tickPosition = option.tickPosition || false,\n        tickInterval= option.tickInterval || \"auto\",\n        tickAlign = option.tickAlign || \"center\",\n        skipLast = option.skipLast || false,\n        tickFormat  = option.tickFormat || null,\n        grid        = option.grid,\n        format      = option.format || function(_){return _;},\n        visable    = option.visable || true,\n        domainIntervals,\n        labelPos    = null,\n        labelAngle  = option.labelAngle || 0,\n        X = [],\n        Y = [];\n\n    if(typeof(ticks) != \"number\") {\n        ticks = (dim == \"x\") ? Math.ceil(width/50) : Math.ceil(height/50);\n    }\n    var tickLabelAlign = option.tickLabelAlign || \"end\";\n    switch (align) {\n        case \"left\" || \"center\":\n            labelPos = option.labelPos || {x: -tickLength/2, y: -5};\n            tickLabelAlign =  option.tickLabelAlign ||\"end\";\n            break;\n        case \"right\":\n            labelPos = {x: tickLength, y: -5};\n            tickLabelAlign = option.tickLabelAlign || \"start\";\n            if(!tickPosition) tickPosition = [ tickLength/2, 0];\n            break;\n        case \"top\":\n            labelPos = {x: 0, y: 0};\n            tickLabelAlign = \"middle\";\n            if(!tickPosition) tickPosition = [0, -tickLength];\n            break;\n        case \"bottom\" || \"middle\":\n            labelPos = option.labelPos || {x: 0, y: -tickLength*3};\n            tickLabelAlign =  option.tickLabelAlign || \"middle\";\n            break;\n        default:\n            labelPos = option.labelPos || option.labelPosition || {x: 0, y: 0};\n            break;\n    }\n    if(!tickPosition) tickPosition = [0,0];\n\n    function getTickInterval(){\n        var vDomain = Math.abs(domain[1] - domain[0]),\n            intv = vDomain / ticks,\n            pow = Math.ceil(Math.log10(intv)),\n            intv = intv / Math.pow(10, pow);\n\n        if(intv > 0.2 && intv <= 0.25){\n            intv = 0.25;\n        } else if(intv > 0.7 && intv <= 0.75) {\n            intv = 0.75;\n        } else {\n            intv = Math.ceil(intv * 10) / 10;\n        }\n        return intv * Math.pow(10, pow);\n    }\n\n\n    if (scale == \"categorical\" || scale == \"ordinal\") {\n        domainIntervals = function() {\n            var len = domain.length,\n                step = Math.ceil(len / ticks),\n                intervals = [],\n                i;\n            for(i = 0; i < len; i += step) {\n                intervals.push(domain[i])\n            }\n            // if(intervals[i] != domain[len-1]) intervals.push(domain[len-1]);\n\n            return intervals;\n        };\n    } else {\n        var intv;\n\n        if(tickInterval == \"auto\"){\n            intv = getTickInterval();\n\n        } else {\n            if(typeof(tickInterval) == \"number\") {\n                intv = tickInterval;\n            } else {\n                // intv = Math.abs(domain[1] - domain[0]) / ticks;\n                intv = getTickInterval();\n                domain[0] = intv * Math.floor(domain[0]/intv);\n                domain[1] = intv * Math.ceil(domain[1]/intv);\n            }\n        }\n\n        domainIntervals = function() {\n            var di = [];\n\n            if(domain[0] > domain[1]) {\n                domain[0] += intv;\n                for(var i = domain[0]; i > domain[1]; i=i-intv)\n                    di.push(i);\n            } else {\n                for(var i = domain[0]; i < domain[1]; i=i+intv)\n                    di.push(i);\n            }\n\n            if(di[di.length-1]!=domain[1] && !isNaN(domain[1]) && !skipLast){\n\n                if((domain[1] - di[di.length-1]) < 0.4 * intv)\n                    di[di.length-1] = domain[1];\n                else\n                    di.push(domain[1]);\n            }\n            return di;\n        }\n    }\n\n    if (metric === null) {\n\n        var scaleOptions = {\n            align: tickAlign,\n            type: scale,\n            domain: domain,\n            range: range\n        };\n\n        if(scale == \"power\") {\n            scaleOptions.exponent = exponent;\n        }\n\n        metric = Scale(scaleOptions)\n    } else {\n        domain = metric.domain();\n    }\n\n    var axis = svg.append(\"g\");\n\n    if(dim == 'x') {\n        if(!position && align) {\n            position = [0,height/2,height];\n            position = position[[\"top\", \"middle\", \"bottom\"].indexOf(align)];\n        }\n        Y[0] = Y[1] = position;\n        X[0] = 0;\n        X[1] = Math.abs(range[1] - range[0]);\n    } else {\n        if(!position && align) {\n            position = [0, width/2, width];\n            position = position[[\"left\", \"center\", \"right\"].indexOf(align)];\n        }\n        X[0] = X[1] = position;\n        Y[0] = 0;\n        Y[1] = Math.abs(range[1] - range[0]);\n    }\n\n    metric.show = metric.axis = function() {\n        axis.append(\"g\")\n            .append(\"line\")\n            .Attr({x1: X[0], x2: X[1], y1: Y[0], y2: Y[1]})\n            .Style(styles);\n\n        var di = domainIntervals();\n\n        for(var i = 0; i < di.length; i++) {\n            var x1,x2,y1,y2;\n            if(dim == 'x'){\n                x1 = x2 = metric(di[i]) + tickPosition[0];\n                y1 = position + tickPosition[1] + tickLength;\n                y2 = y1 - tickLength;\n            } else {\n                if(scale == \"categorical\" || scale == \"ordinal\")\n                    y1 = y2 = height - metric(di[i]);\n                else\n                    y1 = y2 = metric(di[i]) + tickPosition[1];\n                x1 = position + tickPosition[0] ;\n                x2 = x1 - tickLength;\n            }\n\n            var svgTicks = axis.append(\"g\");\n            svgTicks.append(\"line\", {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2,\n            }, styles);\n\n\n            // if (dim == 'x') tickLabelAlign = \"middle\";\n            // if (dim == 'x' && labelAngle) tickLabelAlign = \"end\";\n\n            var tickLabel = svgTicks.append(\"text\")\n                .Attr({\n                    x: x2 + labelPos.x,\n                    y: y2 - labelPos.y,\n                    // class: \"labels\",\n                    class: \"i2v-axis-label\",\n                    \"font-size\": \"0.9em\",\n                    textAnchor: tickLabelAlign\n                });\n            if(labelAngle) tickLabel.attr(\"transform\", \"rotate(\" + [labelAngle, (x2 + labelPos.x), (y2 - labelPos.y)].join(\",\")+\")\");\n\n            var labelText = (typeof(tickFormat) == \"function\") ? format(tickFormat(di[i])) : format(di[i]) ;\n            // tickLabel.appendChild( document.createTextNode(labelText) );\n            tickLabel.text(labelText);\n\n            if(grid) {\n                var gx1, gx2, gy1, gy2;\n                if(dim == 'x'){\n                    gx1 = gx2 = metric(di[i]);\n                    gy1 = 0;\n                    gy2 =height;\n                } else {\n                    gy1 = gy2 = metric(di[i]);\n                    gx1 = 0;\n                    gx2 = width;\n                }\n                axis.append(\"line\",\n                    {\n                        x1: gx1,\n                        x2: gx2,\n                        y1: gy1,\n                        y2: gy2,\n                        class: \"grid-lines\"\n                    },\n                    {\n                        \"stroke\": color,\n                        // \"stroke-width\": 0.5,\n                        \"stroke-opacity\": 0.33\n                    });\n            }\n        }\n        axis.translate(padding.left, padding.top);\n        return axis;\n    };\n\n    metric.remove = function() {\n        axis.remove();\n    }\n\n    if(visable) {\n        metric.svg = metric.show();\n    }\n\n    return metric;\n};\n","export default function brush(arg){\n\n    var option = arg || {},\n        container = option.container || this.svg[0],\n        width = option.width || this.width,\n        height = option.height || this.height,\n        x = function(s) {return s},\n        y = function(s) {return s},\n        base = option.base || null,\n        selectX = option.x || false,\n        selectY = option.y || false,\n        border = option.border || \"#FFF\",\n        color = option.color || \"#111\",\n        brush = option.brush || function() {},\n        brushstart = option.brushstart || function() {},\n        brushend = option.brushend || function() {};\n\n    if(typeof(selectX) === \"function\") {\n        x = selectX;\n        selectX = true;\n    }\n    if(typeof(selectY) === \"function\") {\n        y = selectY;\n        selectY = true;\n    }\n    if(base === null){\n        base = container.append(\"g\").attr(\"class\", \"selector\");\n    } else {\n        base = container;\n    };\n\n    base.append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"fill-opacity\", 0)\n        .attr(\"stroke\", \"none\")\n        .css(\"cursor\", \"crosshair\");\n\n    var selector = base.append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"width\", 0)\n        .attr(\"height\", 0)\n        .attr(\"fill-opacity\", 0.1)\n        .css(\"fill\", color)\n        .css(\"stroke\", border)\n        .css(\"cursor\", \"move\");\n\n    var sx, sy,\n        dx, dy,\n        bx, by,\n        selection = {},\n        intStart = false,\n        drag = false;\n\n    base.svg.addEventListener(\"mousedown\", function(evt){\n        evt.preventDefault();\n        brushstart.call(this);\n        intStart = true;\n        sx = evt.clientX;\n        sy = evt.clientY;\n\n        var sp = selector.svg.getBoundingClientRect();\n        var box = base.svg.getBoundingClientRect();\n        var x0, y0, nw, nh;\n\n        if(sx>sp.left && sy>sp.top && sx<sp.left+sp.width && sy<sp.top+sp.height) {\n            drag = true;\n            bx = sp.left;\n            by = sp.top;\n        }\n\n        if(!drag){\n            x0 = selectX ? sx - box.left : 0;\n            y0 = selectY ? sy - box.top : 0;\n            selector.attr(\"x\", x0)\n                .attr(\"y\", y0)\n                .attr(\"width\", 0);\n        }\n\n        ondrag = function(evt){\n            if(intStart){\n                dx = evt.clientX - sx;\n                dy = evt.clientY - sy;\n                var selectorBox = selector.svg.getBoundingClientRect();\n                if(drag){\n\n                    var nx = bx + dx-box.left,\n                        ny = by + dy-box.top;\n\n                    if(bx+dx < box.left) nx = 0;\n                    if(bx+dx+selectorBox.width > box.right) nx = width - selectorBox.width ;\n                    if(by+dy < box.top) ny = 0;\n                    if(by+dy+selectorBox.height > box.bottom) ny = height - selectorBox.height;\n                    selector.attr(\"x\", nx).attr(\"y\", ny);\n                } else {\n                    if(evt.clientX < box.left) dx = box.left - sx;\n                    if(evt.clientX > box.right) dx = box.right - sx;\n                    if(evt.clientY > box.bottom) dy = box.bottom - sy;\n                    if(evt.clientY < box.top) dy = box.top - sy;\n\n                    x0 = selectX ? sx + dx - box.left: 0;\n                    y0 = selectY ? sy + dy - box.top : 0;\n                    nw = selectX ? Math.abs(dx) : width;\n                    nh = selectY ? Math.abs(dy) : height;\n\n                    if(dx<0 && dy>=0) selector.attr(\"x\", x0);\n                    if(dy<0 && dx>=0) selector.attr(\"y\", y0);\n                    if(dx<0 && dy<0) selector.attr(\"x\", x0).attr(\"y\", y0);\n                    selector.attr(\"width\", nw).attr(\"height\", nh);\n                }\n                if(selectX) {\n                    selection.x = [ x(selectorBox.left - box.left ), x(selectorBox.right - box.left )];\n                }\n                if(selectY) {\n                    selection.y = [y(selectorBox.top - box.top), y(selectorBox.bottom - box.top)];\n                }\n                brush.call(this, selection);\n            }\n        };\n\n        window.addEventListener(\"mousemove\", ondrag, false);\n        window.addEventListener(\"mouseup\", function(evt){\n            if(intStart){\n                ondrag(evt);\n                intStart = false;\n                if(drag){\n                    drag = false;\n                }\n            }\n            brushend.call(this, selection);\n            window.removeEventListener(\"mousemove\", ondrag, false);\n        }, false);\n    });\n};\n","import axis from './axis';\nimport format from './format';\nimport scale from './scale';\nimport legend from './legend';\n\nexport default function chart(svg, arg) {\n    var options = arg || {},\n        plot = svg.append('g'),\n        width = options.width,\n        height = options.height,\n        top = options.top || 0,\n        left = options.left || 0,\n        vmap = options.vmap || {},\n        isHistogram = options.isHistogram || options.hist || false,\n        features = options.fields || [],\n        domain = options.domain,\n        categories = options.categories,\n        labels = plot.append('g'),\n        onclick = options.onclick || null,\n        onhover = options.onhover || null,\n        showLegend = options.legend || true,\n        tickOffset = options.axisOffset || [0, 0],\n        padding = options.padding || {left: 0, right: 0, top: 0, bottom: 0},\n        marks = [],\n        colors = options.colors;\n\n    var scaleX = options.scaleX || 'linear',\n        domainX = options.domainX || domain[vmap.x] || domain[vmap.width],\n        scaleY = options.scaleY || 'linear',\n        domainY = options.domainY || domain[vmap.y] || domain[vmap.height];\n\n    width -= padding.left + padding.right;\n    height -= padding.top + padding.bottom;\n\n    var xAxisOption = {\n        container: plot,\n        dim: \"x\",\n        width: width,\n        height: height,\n        domain: domainX,\n        scale:  scaleX,\n        align: \"bottom\",\n        // ticks: 5,\n        // grid: 1,\n        format: format(\".3s\"),\n    };\n\n    var yAxisOption = {\n        container: plot,\n        dim: \"y\",\n        domain: domainY,\n        scale: scaleY,\n        width: width,\n        height: height,\n        align: \"left\",\n        // labelPos: {x: -5, y: -5},\n        // grid: 1,\n        format: format(\".3s\"),\n    };\n\n    if(showLegend && features.indexOf(vmap.color) !== -1){\n        legend({\n            container: plot,\n            width: 20,\n            height: 180,\n            dim: \"y\",\n            domain: domain[vmap.color],\n            pos: [width + padding.right/2, 0],\n            colors: colors\n        });\n    }\n\n    if(scaleX == 'ordinal' || scaleX == 'categorical') {\n        xAxisOption.ticks = domainX.length;\n        while(width / xAxisOption.ticks < 20) {\n            xAxisOption.ticks *= 0.5;\n        }\n        var maxStrLength = Math.max.apply(null, domainX.map(\n            function(d){ return (typeof(d) == 'string') ? d.toString().length : 1; })\n        );\n        if(maxStrLength > 10) {\n            xAxisOption.labelAngle = -30;\n            xAxisOption.tickLabelAlign = 'end';\n            xAxisOption.labelPos = {x: 0, y: -10};\n        }\n    }\n\n    if(scaleY == 'ordinal' || scaleY == 'categorical') {\n        yAxisOption.ticks = domainY.length;\n        while(width / yAxisOption.ticks < 20) {\n            yAxisOption.ticks *= 0.5;\n        }\n    }\n\n    var x, y, xAxes = [], yAxes = [];\n\n    // For parallel coordinates\n    if(Array.isArray(vmap.x)) {\n        var axisDist = height / (vmap.x.length-1);\n\n        vmap.x.forEach(function(d, i) {\n            xAxisOption.position = i * axisDist + 1;\n            xAxisOption.domain = domain[d];\n            if(categories.hasOwnProperty(d)){\n                xAxisOption.scale = 'ordinal';\n                xAxisOption.tickAlign = 'outer';\n                xAxisOption.domain = categories[d].reverse();\n            }\n            var labelOffset = 20;\n            if(i === 0) {\n                xAxisOption.tickPosition = [0, -5];\n                xAxisOption.labelPos = {x: 0, y: 2};\n                labelOffset = 35;\n            } else {\n                xAxisOption.tickPosition = null;\n                xAxisOption.labelPos = null;\n            }\n            x = axis(xAxisOption);\n            xAxes[i] = x;\n\n            labels\n            .append(\"text\")\n              .attr(\"x\", 5 )\n              .attr(\"y\", i * axisDist - labelOffset)\n              .attr(\"dy\", \"1em\")\n              .css(\"text-anchor\", \"middle\")\n              .css(\"font-size\", \"1em\")\n              .text(d);\n        });\n    }\n\n    if(Array.isArray(vmap.y)) {\n        var axisDist = width / (vmap.y.length-1);\n\n        vmap.y.forEach(function(d, i) {\n            yAxisOption.position = i * axisDist;\n            yAxisOption.domain = domain[d];\n            if(categories.hasOwnProperty(d)){\n                yAxisOption.scale = 'ordinal';\n                yAxisOption.tickAlign = 'outer';\n                yAxisOption.domain = categories[d].reverse();\n            }\n            if(i == vmap.y.length-1) {\n                yAxisOption.tickPosition = [5, 0];\n                yAxisOption.tickLabelAlign = \"start\";\n                yAxisOption.labelPos = {x: 8, y: -5};\n\n            }\n            y = axis(yAxisOption);\n            yAxes[i] = y;\n\n            labels.append(\"text\")\n              .attr(\"y\", -padding.top + 10)\n              .attr(\"x\", i * axisDist)\n              .attr(\"dy\", \"1em\")\n              .css(\"text-anchor\", \"middle\")\n              .css(\"font-size\", \"1em\")\n              .text(d);\n        });\n    }\n\n    if(isHistogram) {\n        xAxisOption.tickPosition = [width / domainX.length /2, 0];\n        xAxisOption.scale = \"ordinal\";\n        xAxisOption.domain = domainX;\n        xAxisOption.ticks = domainX.length;\n    }\n\n    if((vmap.x || vmap.width) && !Array.isArray(vmap.x)) x = axis(xAxisOption);\n    if((vmap.y || vmap.height) && !Array.isArray(vmap.y)) y = axis(yAxisOption);\n\n    if((vmap.hasOwnProperty('x') || vmap.hasOwnProperty('width')) && !Array.isArray(vmap.x)) {\n        var xAxisTitle = vmap.x || vmap.width;\n        // xAxisTitle = xAxisTitle.replace(/_/g, ' ');\n        // xAxisOption.grid = 1;\n        labels.append(\"g\")\n          .append(\"text\")\n            .attr(\"x\", width/2)\n            .attr(\"y\", height + padding.bottom/2 )\n            .attr(\"dy\", \"1em\")\n            .css(\"text-anchor\", \"middle\")\n            .css(\"font-size\", \"1.0em\")\n            .css(\"font-weight\", \"bold\")\n            .css(\" text-transform\", \"capitalize\")\n            .text(xAxisTitle);\n\n    }\n    if((vmap.hasOwnProperty('y') || vmap.hasOwnProperty('height')) && !Array.isArray(vmap.y)) {\n        var yAxisTitle = vmap.y || vmap.height;\n        // yAxisTitle = yAxisTitle.replace(/_/g, ' ');\n        // yAxisOption.grid = 1;\n        if(!Array.isArray(vmap.y)) {\n            labels.append(\"g\")\n              .append(\"text\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .attr(\"y\", -padding.left/1.25 )\n                .attr(\"x\", -height/2 )\n                .attr(\"dy\", \"1em\")\n                .css(\"text-anchor\", \"middle\")\n                .css(\"font-size\", \"1.0em\")\n                .css(\"font-weight\", \"bold\")\n                .css(\" text-transform\", \"capitalize\")\n                .text(yAxisTitle);\n        }\n    }\n    // plot.append(\"line\")\n    //     .attr('x1', 0)\n    //     .attr('x2', width)\n    //     .attr('y1', 0)\n    //     .attr('y2', 0)\n    //     .css('stroke', '#000')\n    // plot.append(\"line\")\n    //     .attr('x1', width)\n    //     .attr('x2', width)\n    //     .attr('y1', 0)\n    //     .attr('y2', height)\n    //     .css('stroke', '#000')\n        // .css('stroke-opacity', 0.5)\n\n    plot.translate(padding.left+left, padding.top+top);\n\n    var chartLayer = {};\n\n    chartLayer.update =  function(spec) {\n        var data = spec.data || [];\n\n        if(data.length) {\n            data.forEach(function(d, i){\n                var barHeight = isFinite(y(d[vmap.y])) ? y(d[vmap.y]) : height;\n                if(hMarks[i]) {\n                    hMarks[i].Attr({\n                        y: barHeight,\n                        height: height - barHeight,\n                        fill: \"orange\"\n                    });\n                }\n            })\n        } else {\n            hMarks.forEach(function(h, i){\n                h.Attr({ y: 0, height: 0 });\n            })\n        }\n    }\n\n    chartLayer.removeAxis = function() {\n        x.remove();\n        y.remove();\n        if(yAxes.length) {\n            yAxes.forEach(function(yp) {\n                yp.remove();\n            })\n        }\n    }\n\n    chartLayer.svg = plot;\n    chartLayer.x = Array.isArray(vmap.x) ? xAxes : x;\n    chartLayer.y = Array.isArray(vmap.y) ? yAxes : y;\n\n    return chartLayer;\n};\n","import {seq} from '../arrays';\n\nexport default function printformat(spec) {\n    return function(value){\n        if(typeof value !== \"number\") return value;\n        var ret,\n            convert,\n            numericSymbols = ['y', 'z', 'a', 'f', 'p', 'n', 'µ', 'm', '', 'k', 'M','G', 'T', 'P', 'E', 'Z', 'Y'],\n            n = seq(-24,24,3),\n            i = numericSymbols.length-1,\n            parts,\n            precision = spec.match(/\\d+/)[0] || 3,\n            number = Number(value),\n            exp,\n            suffix;\n\n        if(spec[spec.length-1] == 's')\n            precision--;\n\n        parts = number.toExponential(precision).toString().match(/^(-{0,1})(\\d+)\\.?(\\d*)[eE]([+-]?\\d+)$/);\n        exp = parseInt(parts[4]) || 0;\n\n        while (i--) {\n            if (exp >= n[i]) {\n                if(i==7 && (exp-n[i]) > 1) {\n                    // console.log(exp-n[i]);\n                    suffix = numericSymbols[i+1];\n                    exp -= n[i+1];\n                    break\n                } else {\n                    suffix = numericSymbols[i];\n                    exp -= n[i];\n                    break;\n                }\n            }\n        }\n        ret = parseFloat(parts[1] + parts[2] + '.' + (parts[3]||0) + 'e' + exp.toString());\n        return ret.toString() + suffix;\n    }\n}\n","import Svg from './svg';\nimport chart from './chart';\n\nfunction assign(object, source) {\n    Object.keys(source).forEach(function(key) {\n        object[key] = source[key];\n    });\n}\nvar defaultProperties = {\n    width: 400,\n    height: 300,\n    padding: {left: 0, right: 0, top: 0, bottom: 0},\n}\n\nexport default function layout(arg){\n    \"use strict\";\n\n    /* Private */\n    var viz = this,\n        option = arg || {},\n        container = option.container || document.body,\n        style = option.style || null,\n        layers = [];\n\n    this.width = container.clientWidth || 400;\n    this.height = container.clientHeight || 300;\n\n    if(typeof container == 'string') container = document.getElementById(container);\n    assign(viz, defaultProperties);\n    assign(viz, option);\n\n    this.vmap = option.vmap;\n\n    this.width -= (this.padding.left + this.padding.right);\n    this.height -= (this.padding.top + this.padding.bottom);\n\n\n    /* Public */\n    this.data = option.data || [];\n    this.div = document.createElement(\"div\");\n    if(style !== null) {\n        Object.keys(style).forEach(function(prop){\n            viz.div.style[prop] = style[prop];\n        })\n    }\n\n    this.init = function(){\n        // container = (containerId == \"body\") ? document.body : document.getElementById(containerId);\n\n        this.div.className = option.className || \"p6-viz\";\n        this.div.style.position = 'relative';\n        this.resize(\n            this.width + this.padding.left + this.padding.right,\n            this.height + this.padding.top + this.padding.bottom\n        );\n\n        if(option.style) this.css(option.style);\n\n        container.appendChild(this.div);\n        this.viz();\n        return viz;\n    };\n\n    this.createSVG = function(arg) {\n        var arg = arg || {},\n            width = arg.width || this.width,\n            height = arg.height || this.height,\n            padding = arg.padding || this.padding;\n\n        return new Svg({\n            width: width,\n            height: height,\n            padding: padding,\n            style: {position: 'absolute'}\n        });\n    }\n\n    var canvas = option.canvas,\n        svg = this.createSVG(),\n        vmap = option.vmap,\n        chartPadding = this.padding || {left: 0, right: 0, top: 0, bottom: 0},\n        domain = option.domain || {x: [0, 1000], y: [0, 1]},\n        scales = option.scales || {x: 'linear', y: 'linear'};\n\n    var backSVG = this.createSVG(),\n        frontSVG = this.createSVG();\n\n    this.set = function(props) {\n        assign(viz, props);\n    };\n\n    this.addProperty = function(obj, prop) {\n        assign(obj, prop);\n        return obj;\n    }\n\n    this.viz = function() {\n        viz.div.appendChild(backSVG.svg);\n        viz.div.appendChild(canvas);\n        viz.div.appendChild(frontSVG.svg);\n        return viz;\n    };\n\n    this.render = this.viz;\n\n    this.css = function(style){\n        for(var key in style){\n            this.div.style[key] = style[key];\n        }\n        return this;\n    };\n\n    this.resize = function(w,h){\n        this.div.style.width = w + \"px\";\n        this.div.style.height = h + \"px\";\n    };\n\n    this.destroy = function() {\n        this._super.destroy();\n        container.removeChild(this.div);\n        div = null;\n    };\n\n    this.hide = function() {\n        this.div.style.display = 'none';\n    }\n\n    this.show = function() {\n        this.div.style.display = 'block';\n    }\n\n    this.innerWidth = function() {\n        return this.width;\n    }\n\n    this.innerHeight = function() {\n        return this.height;\n    }\n\n    this.addChart = function(options) {\n        return chart(frontSVG, options)\n    };\n\n    this.exportImage = function(beforeExport) {\n        var imageCanvas = document.createElement(\"canvas\");\n        imageCanvas.width = this.width;\n        imageCanvas.height = this.height;\n        return new Promise(function(resolve, reject) {\n\n            var ctx = imageCanvas.getContext(\"2d\");\n            var svgString = new XMLSerializer().serializeToString(frontSVG.svg);\n\n            var DOMURL = self.URL || self.webkitURL || self;\n            var svgBlob = new Blob([svgString], {type: \"image/svg+xml;charset=utf-8\"});\n            var svgURL = DOMURL.createObjectURL(svgBlob);\n\n            var canvasLayer = new Image();\n            var svgLayer = new Image();\n            canvasLayer.onload = function() {\n                ctx.drawImage(canvasLayer, 0, 0);\n                svgLayer.src = svgURL;\n                svgLayer.onload = function() {\n                    ctx.drawImage(svgLayer, 0, 0);\n                    var png = imageCanvas.toDataURL(\"image/png\");\n                    DOMURL.revokeObjectURL(png);\n                    resolve(png);\n                };\n            };\n\n            canvasLayer.onerror = function() {\n                reject(Error(\"Canvas Output Error!\"));\n            }\n\n            svgLayer.onerror = function() {\n                reject(Error(\"SVG Output Error!\"));\n            }\n            beforeExport();\n            canvasLayer.src = canvas.toDataURL(\"image/png\");\n        });\n\n    }\n\n    return viz.init();\n};\n","import Svg from './svg';\nimport Axis from './axis';\nimport printformat from './format';\n\nconst defaultColors = ['white', 'steelblue'];\nconst defaultSize = 20;\nvar gradID = 0;\n\nexport default function color(arg){\n    var gradientID = gradID++;\n\n    var option = arg || {},\n        container = option.container || null,\n        width = option.width || null,\n        height = option.height || null,\n        pos = option.pos ||[0, 0],\n        dim = option.dim || 'x',\n        padding = option.padding || {left: 0, right: 0, top: 0, bottom: 0},\n        vmap = option.vmap || {},\n        label = option.label || false,\n        colors = option.colors || defaultColors,\n        domain = option.domain || ['min', 'max'],\n        format = option.format || printformat('.3s');\n\n\n    if(colors.length < 2) colors = defaultColors;\n    width -= padding.left + padding.right;\n    height -= padding.top + padding.bottom;\n\n    var legend = (container === null)\n        ? new Svg({width: width, height: height, padding: padding})\n        : container.append('g');\n\n    var gradDirection;\n    if(dim == 'x') {\n        gradDirection = {x1: 0, x2: 1, y1: 0, y2: 0};\n        if(height === null) height = defaultSize;\n    } else {\n        gradDirection = {x1: 0, x2: 0, y1: 0, y2: 1};\n        if(width === null) width = defaultSize;\n    }\n\n    function linearGradient(colors) {\n        var gradient = legend.append('defs')\n            .append('linearGradient')\n                .attr('id', 'gradlegend'+gradientID)\n                .attr(gradDirection);\n\n        colors.forEach(function(c, i){\n            gradient.append('stop')\n                .attr('offset', i / (colors.length-1) )\n                .attr('stop-color', colors[colors.length-i-1]);\n        });\n        return gradient;\n    }\n\n    var grad = linearGradient(colors);\n\n    var rect = legend.append('g');\n\n    var colorScale = rect.append('rect')\n        .attr('width', width-padding.left)\n        .attr('height', height)\n        .style('fill','url(#gradlegend' + gradientID + ')');\n\n    var domainLabel = legend.append('text');\n    if(label) {\n        label.append('text')\n            .attr('x', pos[0] - 5)\n            .attr('y', pos[1] + height/2 + 5)\n            .style('fill', '#222')\n            .style('text-anchor', 'end')\n            .text(printformat('2s')(domain[0]));\n\n        legend.append('text')\n            .attr('x', pos[0] + width - padding.left + 5)\n            .attr('y', pos[1] + height/2 + 5)\n            .style('fill', '#222')\n            .style('text-anchor', 'begin')\n            // .style('font-size', '.9em')\n            .text(printformat('2s')(domain[1]));\n    }\n\n    if(option.title) {\n        legend.append('g')\n          .append('text')\n            .attr('y', pos[1] - padding.top)\n            .attr('x', pos[0] + width/2)\n            .attr('dy', '1em')\n            .style('text-anchor', 'middle')\n            .text(option.title);\n    }\n\n    if(dim == 'x') {\n        new Axis({\n            dim: 'x',\n            domain: domain,\n            container: legend,\n            align: 'bottom',\n            ticks: Math.floor(width / 30),\n            height: height,\n            width: width,\n            labelPos: {x: 0, y: -20},\n            format: format,\n        });\n    } else {\n        new Axis({\n            dim: 'y',\n            domain: domain,\n            container: legend,\n            align: 'right',\n            ticks: Math.floor(height / 30),\n            height: height,\n            width: width,\n            labelPos: {x: 0, y: -20},\n            format: format,\n        });\n    }\n\n\n    // legend.appendChild(xAxis);\n\n    legend.translate(pos[0]+padding.left, pos[1]+padding.top);\n\n    // legend.update = function(newDomain, newColors) {\n    //\n    //     legend.removeChild(xAxis);\n    //     xAxis = new Axis({\n    //         dim: 'x',\n    //         domain: newDomain,\n    //         container: legend,\n    //         align: 'bottom',\n    //         ticks: 4,\n    //         // tickInterval: 10000000,\n    //         labelPos: {x: -5, y: -20},\n    //          padding: padding,\n    //         width: width-padding.left,\n    //         format: format,\n    //     }).show();\n    //\n    //     if(typeof(newColors) != 'undefined') {\n    //         grad.remove();\n    //         grad = linearGradient(newColors);\n    //         colorScale.css('fill','url(#gradlegend' + gradientID + ')');\n    //\n    //     }\n    //     // legend.appendChild(xAxis);\n    //\n    //     return legend;\n    // }\n\n    return legend;\n}\n","export default function Scale(arg) {\n    var option = arg || {},\n        align = option.align || 'center',\n        type = option.type || 'linear',\n        domain = option.domain || [0,1],\n        margin = option.margin || 0,\n        exponent = option.exponent || 1,\n        range = option.range || [0,1];\n\n    function getInterpolateFunction() {\n        //intercepts and slopes for domain and range\n        var d0 = -domain[0] / (domain[1] - domain[0]),\n            d1 = 1 / (domain[1] - domain[0]),\n            r0 = range[0],\n            r1 = range[1] - range[0];\n\n        if(type == \"linear\") {\n            return function(v) { return r0 + (d0 + v * d1) * r1 };\n        } else if(type == \"power\") {\n            d0 = -Math.pow(-d0, exponent);\n            d1 = Math.pow(d1, exponent);\n            return function(v) { return r0 + (d0 + Math.pow(v, exponent) * d1) * r1 };\n        } else if (type == \"log\") {\n            exponent = option.exponent || 10;\n            d0 = -(Math.log(-d0) / Math.log(exponent));\n            d1 = (Math.log(d1) / Math.log(exponent));\n\n            return function(v) { return r0 + (d0 + Math.log(v) / Math.log(exponent) * d1) * r1 };\n\n        } else if(type == \"ordinal\" || type == \"categorical\") {\n            return function(v) {\n                if(align == 'outer')\n                    return r0 + (domain.indexOf(v)) / (domain.length-1) * r1;\n                else\n                    return r0 + (domain.indexOf(v)+0.5) / domain.length * r1;\n            };\n        } else {\n            return function(v) { return v };\n        }\n    }\n\n    var scale = getInterpolateFunction();\n\n    scale.interval = function(ticks) {\n        if (type == \"ordinal\" || type == \"categorical\") {\n            return (1 / domain.length * Math.abs(range[1] - range[0]));\n        } else {\n            var s = Math.pow(10, Math.floor(Math.log10(Math.abs(range[1] - range[0])))-1);\n            return Math.floor( Math.abs(range[1] - range[0]) / (ticks * s) )  * s;\n        }\n    };\n\n    scale.domainLength = function() {\n        if(type == \"linear\")\n            return Math.abs(domain[1] - domain[0]);\n        else if(type == \"ordinal\" || type == \"categorical\")\n            return domain.length;\n    };\n\n    scale.rangeLength = function() {\n        return Math.abs(range[1] - range[0]);\n    };\n\n    scale.invert = function(r) {\n        if(type == \"linear\") {\n            return domain[0] + (r - range[0]) / (range[1] - range[0]) * (domain[1] - domain[0]);\n        } else if(type == \"ordinal\" || type == \"categorical\") {\n            var intv = intv = r / scale.rangeLength();\n            return domain[Math.floor(intv * (domain.length))];\n        }\n    }\n\n    scale.domain = function() {\n        return domain;\n    }\n\n    return scale;\n};\n","function setAttr(elem, attr) {\n    for( var key in attr ){\n        var value = attr[key],\n            c = key.match(/[A-Z]/);\n        if(c !== null) key = key.replace(c[0], \"-\"+c[0].toLowerCase())\n        elem.setAttribute(key, value);\n    }\n}\n\nfunction setStyle(elem, style) {\n    for( var key in style ){\n        var value = style[key],\n            c = key.match(/[A-Z]/);\n        if(c !== null) key = key.replace(c[0], \"-\"+c[0].toLowerCase())\n        elem.style[key] = value;\n    }\n}\n\nexport default function Svg(arg){\n    'use strict';\n    var self = (this instanceof Svg) ? this: {},\n        option = arg || {},\n        type = option.type || 'svg',\n        svgNS = 'http://www.w3.org/2000/svg',\n        svg = document.createElementNS(svgNS, type),\n        width = option.width || 400,\n        height = option.height || 300,\n        parent = option.parent || option.container || this.parent,\n        attr = option.attr || {},\n        style = option.style || {},\n        padding = option.padding || {left: 0, right: 0, top: 0, bottom: 0};\n\n    if(type === 'svg') {\n        var defaultAttr = {\n            width   : width + padding.left + padding.right,\n            height  : height + padding.top + padding.bottom,\n            viewBox : [0, 0, width + padding.left + padding.right , height + padding.top + padding.bottom].join(' '),\n            preserveAspectRatio: 'none'\n        };\n        setAttr(svg, defaultAttr);\n    }\n\n    self.innerWidth = function() {\n        return width;\n    }\n\n    self.innerHeight = function() {\n        return height;\n    }\n\n    self.padding = function() {\n        return padding;\n    }\n\n    if(style) setStyle(svg, style);\n    if(attr) setAttr(svg, attr);\n\n    if(parent) {\n        parent = (typeof parent == \"string\") ? document.getElementById(parent) : parent;\n        parent.appendChild(svg);\n    }\n\n    self.svg = svg;\n    self.parent = parent;\n\n    if(self instanceof Svg)\n        publicMethods(Svg.prototype);\n    else\n        publicMethods(self);\n\n    return self;\n};\n\nfunction publicMethods(context) {\n    context.append = function(type, attr, style) {\n        var options = {};\n        options.parent = this.svg;\n        options.type = type;\n        options.attr = attr;\n        options.style = style;\n        return new Svg(options);\n    };\n\n    context.remove = function() {\n        this.parent.removeChild(this.svg);\n    };\n\n    context.attr = function(a, v) {\n        if(typeof(a) == \"object\")\n            setAttr(this.svg, a);\n        else\n            this.svg.setAttribute(a, v);\n\n        return this;\n    }\n\n    context.Attr =  function(a, v) {\n        setAttr(this.svg, a);\n        return this;\n    }\n\n    context.Style =  function(a, v) {\n        setStyle(this.svg, a);\n        return this;\n    }\n\n    context.style = function(a, v) {\n        if(typeof(a) == \"object\")\n            setStyle(this.svg, a);\n        else\n            this.svg.style[a] = v;\n\n        return this;\n    }\n\n    context.css = context.style;\n\n    context.text = function(str){\n        this.svg.appendChild(document.createTextNode(str));\n        return this;\n    };\n\n    context.translate = function(x, y) {\n        var p = this.svg.getAttribute(\"transform\") || \"\";\n        this.svg.setAttribute(\"transform\", p + \"translate(\" + [x,y].join(\",\") + \") \");\n        return this;\n    };\n\n    context.on = function(event, callback) {\n        this.svg.addEventListner(event, callback);\n        return this;\n    }\n\n    return context;\n}\n","export default function output($p) {\n    return function(format) {\n        var buf = $p.getResult(),\n            res = {},\n            offset = 0;\n\n        var rs = 0;\n\n        if ($p.resultDimension[0] > 1) {\n            res[$p.fields[rs]] = $p.attribute.aDataValx.data;\n            rs++;\n        }\n\n        if ($p.resultDimension[1] > 1) {\n            var bx = $p.attribute.aDataValx.data;\n            var by = $p.attribute.aDataValy.data;\n            var ax = new Array($p.resultDimension[0] * $p.resultDimension[1]),\n                ay = new Array($p.resultDimension[0] * $p.resultDimension[1]);\n\n            for (var y = 0; y < $p.resultDimension[1]; y++) {\n                for (var x = 0; x < $p.resultDimension[0]; x++) {\n\n                    ax[y * $p.resultDimension[0] + x] = bx[x];\n                    ay[y * $p.resultDimension[0] + x] = by[y]\n                }\n            }\n            res[$p.fields[0]] = ax;\n            res[$p.fields[rs]] = ay;\n            rs++;\n        }\n\n        var arraySize = $p.resultDimension[0] * $p.resultDimension[1];\n\n        for (var i = rs; i < $p.fields.length; i++) {\n            res[$p.fields[i]] = buf.subarray(offset, offset + arraySize);\n            offset += arraySize;\n        };\n\n        if (format == 'row') {\n            var objectArray = new Array(arraySize);\n\n            for (var i = 0; i < arraySize; i++) {\n                var obj = {};\n                Object.keys(res).forEach(function(f) {\n                    var kid = $p.dkeys.indexOf(f),\n                        dtype = $p.dtypes[kid];\n\n                    if (dtype == 'string' && $p.categoryLookup.hasOwnProperty(f)) {\n                        obj[f] = $p.categoryLookup[f][res[f][i]];\n                    } else if ($p.intervals.hasOwnProperty(f) && $p.intervals[f].dtype == 'historgram') {\n                        obj[f] = $p.intervals[f].min + res[f][i] * $p.intervals[f].interval;\n                    } else {\n                        obj[f] = res[f][i];\n                    }\n                });\n                objectArray[i] = obj;\n            }\n\n            return objectArray;\n\n        } else {\n            return res;\n        }\n    }\n}\n","export default function parse(text, delimiter) {\n    \"use strict\";\n    var size = text.length,\n        accum = 0,\n        i, //index for starting of a line\n        row,\n        rows = [],\n        fields = [],\n        lens = [],\n        EOL = false;\n\n    while(accum < size) {\n        i = accum, EOL = false;\n        row = loadLine(text, delimiter.charCodeAt(0), i);\n        rows.push(row.fields);\n        accum += row.size;\n    }\n    return rows;\n}\n\nfunction loadLine(text, delimiterCode, initPos) {\n    // if(typeof(initPos) === 'undefined') initPos = 0;\n    var EOL = false,\n        QUOTE = false,\n        c = initPos, //current pos\n        code, //code at c\n        f = initPos, // start pos of current field\n        q, //start pos of quote\n        fields = [],\n        L = text.length;\n\n    while(!EOL){\n        code = text.charCodeAt(c);\n        if(code === 10 || c>=L){\n            EOL = true;\n            // if(text.charCodeAt(c+1) === 13) ++c;\n            fields.push( text.slice(f, c) );\n        } else {\n            if(code === delimiterCode && !QUOTE) {\n                // console.log(f,c, text.slice(f, c));\n                var field = text.slice(f, c);\n                fields.push( field );\n                f = c+1;\n            } else if(code === 34){\n                if(QUOTE){\n                    if(text.charCodeAt(c+1) === delimiterCode){\n                        QUOTE = false;\n                        fields.push(text.slice(q, c));\n                        f = c+2;\n                        c++;\n                    }\n                } else {\n                    q = c+1;\n                    QUOTE = true;\n                }\n            }\n        }\n        c++;\n    }\n    return { fields: fields, size: c-initPos };\n}\n","import allocate  from './allocate';\nimport output    from './output';\nimport initialize    from './initialize';\nimport compile   from './compile';\nimport optDerive from './derive';\nimport interact  from './interact';\n\nexport default function pipeline(options) {\n    var $p = initialize(options);\n    $p.views = [];\n    $p.interactions = [];\n    \n    $p.visualization = null;\n    $p.deriveMax = options.deriveMax || 4;\n    $p._responseType = 'unselected';\n    $p._update = false;\n\n    $p.getResult = function() {};\n\n    var pipeline = {},\n        registers = {},\n        profiles  = [],\n        operation = {},\n        response = {},\n        optID = 0;\n\n    function addToPipeline(opt, arg) {\n        if( !$p._update) {\n            var spec = {};\n            spec[opt] = arg;\n            $p.pipeline.push(spec);\n            return optID++;\n        } else {\n            return -1;\n        }\n    }\n\n    pipeline.ctx = $p.ctx;\n\n    pipeline.data = function(dataOptions) {\n        allocate($p, dataOptions);\n        operation = compile($p);\n        if(!$p.hasOwnProperty('fieldDomains')) {\n            var dd = operation.extent($p.fields.map((f, i) => i), $p.dataDimension);\n            $p.uniform.uFieldDomains.data = $p.fieldDomains;\n        }\n        $p.opt = operation;\n        pipeline.register('__init__');\n        return pipeline;\n    }\n\n    pipeline.view = function(views) {\n        $p.views.forEach(function(v){\n            if(v.hasOwnProperty('chart')) {\n                v.chart.svg.remove();\n                delete v.chart;\n            }\n            if(!v.hasOwnProperty('padding')) {\n                v.padding = {left: 30, right: 30, top: 30, bottom: 30};\n            }\n        })\n        $p.views = views;\n    }\n\n    pipeline.register = function(tag) {\n        registers[tag] = {\n            indexes: $p.indexes,\n            dataSize: $p.dataSize,\n            fields: $p.fields,\n            dataDim: $p.uniform.uDataDim.data.slice(),\n            fieldWidths: $p.fieldWidths.slice(),\n            fieldDomains: $p.fieldDomains.slice(),\n            deriveCount: $p.deriveCount,\n            filterFlag: $p.uniform.uFilterFlag.data,\n            filterControls: $p.uniform.uFilterControls.data.slice(),\n            dataInput: $p.uniform.uDataInput.data,\n            attribute: {\n                aDataIdx: {\n                    ids: $p.attribute.aDataIdx.data,\n                    value: $p.attribute.aDataValx.data\n                },\n                aDataIdy: {\n                    ids: $p.attribute.aDataIdy.data,\n                    value: $p.attribute.aDataValy.data\n                },\n                aDataFieldId: $p.attribute.aDataFieldId.data,\n                aDataItemId: $p.attribute.aDataItemId.data\n            }\n        }\n        return pipeline;\n    }\n\n    pipeline.resume = function(tag) {\n        addToPipeline('resume', tag);\n        if (!registers.hasOwnProperty(tag))\n            throw new Error('\"' + tag + '\" is not found in regesters.');\n\n        var reg = registers[tag];\n        //resume CPU registers\n        $p.indexes = reg.indexes;\n        $p.dataSize = reg.dataSize;\n        $p.deriveCount = reg.deriveCount;\n        $p.fieldCount = reg.fields.length - reg.indexes.length - reg.deriveCount;\n        $p.fields = reg.fields.slice();\n        $p.fieldWidths = reg.fieldWidths.slice();\n        $p.fieldDomains = reg.fieldDomains.slice();\n        $p.dataDimension = reg.dataDim.slice();\n\n        //resume GPU Uniforms\n        $p.uniform.uFieldCount.data = $p.fieldCount;\n        $p.uniform.uDataSize.data = $p.dataSize;\n        $p.uniform.uDataDim.data = reg.dataDim;\n        $p.uniform.uIndexCount.data = reg.indexes.length;\n        $p.uniform.uFieldDomains.data = reg.fieldDomains;\n        $p.uniform.uFieldWidths.data = reg.fieldWidths;\n        $p.uniform.uFilterFlag.data = reg.filterFlag;\n        // $p.uniform.uFilterControls.data = reg.filterControls;\n        $p.uniform.uDataInput.data = reg.dataInput;\n\n        //resume GPU Attribute Buffers\n        $p.attribute['aDataIdx'] = reg.attribute['aDataIdx'].ids;\n        $p.attribute['aDataIdy'] = reg.attribute['aDataIdy'].ids;\n        $p.attribute['aDataValx'] = reg.attribute['aDataIdx'].value;\n        $p.attribute['aDataValy'] = reg.attribute['aDataIdy'].value;\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataIdx'].location, 0);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataIdy'].location, 1);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataValx'].location, 0);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataValy'].location, 1);\n\n        $p.attribute['aDataFieldId'] = reg.attribute['aDataFieldId'];\n        $p.attribute['aDataItemId'] = reg.attribute['aDataItemId'];\n\n        return pipeline;\n    }\n\n    pipeline.bin = function (spec) {\n        var deriveSpec = {},\n            binAttr,\n            binCount;\n\n        if (typeof spec == 'object') {\n            binAttr = Object.keys(spec)[0];\n            binCount = spec[binAttr];\n        } else {\n            binAttr = spec;\n            //Apply Sturges' formula for determining the number of bins\n            binCount = Math.ceil(Math.log2($p.dataSize)) + 1;\n        }\n\n        var binDomain = $p.fieldDomains[$p.fields.indexOf(binAttr)];\n        var binInterval = (binDomain[1] - binDomain[0]) / binCount;\n\n        var histFunction = (function() {max(ceil((binAttr - binMin) / float(binInterval)), 1.0) })\n            .toString()\n            .slice(13, -1) // remove \"function () {\" from function.toString\n            .replace('binAttr', binAttr)\n            .replace('binMin', binDomain[0] + '.0')\n            .replace('binInterval', binInterval)\n\n        deriveSpec['bin@'+binAttr] = histFunction;\n        $p.intervals[binAttr] = {};\n        $p.intervals[binAttr].dtype = 'historgram';\n        $p.intervals[binAttr].interval = binInterval;\n        $p.intervals[binAttr].min = binDomain[0];\n        $p.intervals[binAttr].max = binDomain[1];\n        $p.intervals[binAttr].align = 'right';\n        pipeline.derive(deriveSpec);\n        // var deriveFields = $p.fields.slice(-$p.deriveCount),\n        //     dfid = deriveFields.indexOf('bin@'+binAttr);\n        // $p.deriveDomains[dfid] = [stats[binAttr].min, stats[binAttr].max];\n        return 'bin@'+binAttr;\n    }\n\n    pipeline.aggregate = function(spec) {\n        if(spec.$bin) {\n            spec.$group = pipeline.bin(spec.$bin);\n            delete spec.$bin;\n        }\n\n        addToPipeline('aggregate', spec);\n        if(Object.keys($p.crossfilters).length)\n            $p.uniform.uFilterFlag = 1;\n\n        operation.aggregate.execute(spec);\n        // console.log(JSON.stringify(pipeline.result('row')));\n        return pipeline;\n    }\n\n    pipeline.filter = function(spec) {\n        addToPipeline('filter', spec);\n        operation.match.execute(spec);\n        $p.getResult = operation.match.result;\n        return pipeline;\n    }\n\n    pipeline.match = pipeline.filter;\n\n    pipeline.derive = function(spec) {\n        addToPipeline('derive', spec);\n\n        //TODO: support JS function as expression for deriving new variable\n        //.replace(/function\\s*[\\w|\\d]+\\s*\\((.+)\\)/g, \"$1\")\n        // if (!opt.hasOwnProperty('derive')) {\n            operation.derive = optDerive($p, spec);\n        // }\n        operation.derive.execute(spec);\n        $p.getResult = operation.derive.result;\n        return pipeline;\n    }\n\n    pipeline.cache = function(tag) {\n        operation.cache.execute(tag);\n        return pipeline;\n    }\n\n    pipeline.clear = function() {\n        console.log($p.visLayers);\n    }\n\n    pipeline.read = function() {\n        console.log(\"Read>>\", $p.getResult());\n        return pipeline;\n    }\n\n    pipeline.result = output($p);\n\n    pipeline.output = function(callback) {\n        addToPipeline('output', callback);\n        callback(pipeline.result('row'));\n        return pipeline;\n    }\n\n    var branchID = 0;\n    pipeline.branch = function(branches) {\n        pipeline.register('_branch'+branchID);\n        branches.forEach(function(b){\n            var operations = Object.keys(b).map(function(o) {\n                var obj = {};\n                obj[o] = b[o];\n                return obj;\n            });\n            pipeline.run(operations);\n            pipeline.resume('_branch' + branchID);\n        })\n        branchID++;\n    }\n\n    $p.readResult = pipeline.result;\n\n    pipeline.getResult = function (d) {\n        return $p.getResult(d);\n    }\n\n    pipeline.readPixels = function(arg) {\n        var options = arg || {},\n            offset = options.offset || [0, 0],\n            resultSize = options.size || $p.dataDimension[0]* $p.dataDimension[1],\n            rowSize = Math.min(resultSize, $p.dataDimension[0]),\n            colSize = Math.ceil(resultSize/$p.dataDimension[0]);\n\n        $p.bindFramebuffer(null);\n        var gl = $p.ctx,\n            result = new Uint8Array(rowSize * colSize * 4);\n\n        gl.readPixels(offset[0], offset[1], rowSize, colSize, gl.RGBA, gl.UNSIGNED_BYTE, result);\n        return result.filter(function(d, i){ return i%4===3;} );\n    }\n\n    pipeline.clearViews = function() {\n        $p.bindFramebuffer(\"offScreenFBO\");\n        $p.ctx.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        $p.ctx.clear( $p.ctx.COLOR_BUFFER_BIT | $p.ctx.DEPTH_BUFFER_BIT );\n        $p.bindFramebuffer(\"visStats\");\n        $p.ctx.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        $p.ctx.clear( $p.ctx.COLOR_BUFFER_BIT | $p.ctx.DEPTH_BUFFER_BIT );\n        $p.bindFramebuffer(null);\n        $p.ctx.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        $p.ctx.clear( $p.ctx.COLOR_BUFFER_BIT | $p.ctx.DEPTH_BUFFER_BIT );\n    }\n\n    pipeline.runSpec = function(specs) {\n        pipeline.head();\n        pipeline.clearViews();\n        $p.interactions = [];\n        response = {};\n        $p.pipeline = [];\n        $p.crossfilters = [];\n        $p.uniform.uFilterFlag.data = 0;\n        // $p.uniform.uFilterRanges = $p.fieldDomains.concat($p.deriveDomains);\n        specs.forEach(function(spec){\n            var opt = Object.keys(spec)[0],\n                arg = spec[opt];\n\n            opt = opt.slice(1);\n            if(typeof pipeline[opt] == 'function') {\n                pipeline[opt](arg);\n            }\n        })\n    }\n\n    pipeline.head = function() {\n        pipeline.resume('__init__');\n        return pipeline;\n    }\n\n    pipeline.run = function(opts) {\n        var operations = opts || $p.pipeline;\n        operations.forEach(function(p, i){\n            var opt = Object.keys(p)[0];\n            pipeline[opt](p[opt]);\n        })\n\n        return pipeline;\n    }\n\n    pipeline.visualize = function(vmap) {\n        var optID = addToPipeline('visualize', vmap);\n        var viewIndex = 0,\n            filters = {};\n        if(typeof vmap.id == 'string') {\n            viewIndex = $p.views.map(d=>d.id).indexOf(vmap.id);\n            if(viewIndex == -1) {\n                //find the next available view slot in all views\n                for(var vi = 0; vi < $p.views.length; vi++){\n                    if(!$p.views[vi].id) {\n                        viewIndex = vi;\n                        $p.views[viewIndex].id = vmap.id;\n                        break;\n                    }\n                }\n            }\n        }\n        if(vmap.mark == 'bar') vmap.zero = true;\n        $p.views[viewIndex].vmap = vmap;\n        var encoding = vmap,\n            viewTag = $p.views[viewIndex].id;\n\n        if($p._update && response.hasOwnProperty(viewTag)) {\n            if(response[viewTag].hasOwnProperty($p._responseType)) {\n                encoding = Object.assign({}, vmap, response[viewTag][$p._responseType]);\n            }\n        }\n        if(encoding.opacity != 0){\n            operation.visualize({\n                vmap: encoding,\n                viewIndex: viewIndex\n            });\n            pipeline.interact();\n\n        }\n        return pipeline;\n    }\n\n    pipeline.interact = function(spec) {\n        if(typeof(spec) != 'undefined') $p.interactions.push(spec);\n        $p.interactions.forEach(function(interaction){\n            interact($p, {\n                actions: interaction.event,\n                view: interaction.from,\n                condition: interaction.condition,\n                callback: function(selection) {\n                    response = interaction.response;\n                    if(!$p._update) {\n                        $p._update = true;\n                        $p.crossfilters = {};\n                        if(typeof selection == 'object') {\n                            Object.keys(selection).forEach(function(k) {\n                                if(selection[k].length < 2) {\n                                    if($p.intervals.hasOwnProperty(k)) {\n                                        var value = (Array.isArray(selection[k]))\n                                            ? selection[k][0]\n                                            : selection[k];\n                                        selection[k] = [value-$p.intervals[k].interval, value];\n                                    } else if(!$p.categoryLookup.hasOwnProperty(k)) {\n                                        selection[k] = [selection[k][0] + selection[k][0] + 1];\n                                    }\n                                }\n                                $p.crossfilters[k] = selection[k];\n                            });\n                        }\n                        $p._responseType = 'unselected';\n                        $p.uniform.uFilterLevel.data = 0.2;\n                        $p.uniform.uVisLevel.data = 0.1;\n                        pipeline.head().run();\n                        $p._responseType = 'selected';\n                        $p.uniform.uVisLevel.data = 0.2;\n                        pipeline.head().filter({}).run();\n                        $p._responseType = 'unselected';\n                        $p._update = false;\n                        $p.uniform.uFilterLevel.data = 0.1;\n                        $p.uniform.uVisLevel.data = 0.1;\n                    }\n                }\n            })\n        })\n    }\n\n    pipeline.exportImage = function(beforeExport) {\n        var beforeExport = beforeExport || function() { pipeline.head().run() };\n        if(typeof operation.visualize.chart.exportImage === 'function') {\n            return operation.visualize.chart.exportImage(beforeExport);\n        } else {\n            return pipeline;\n        }\n    }\n\n    if(options.hasOwnProperty('data')) {\n        pipeline.data(options.data);\n    }\n\n    return pipeline;\n}\n","function visMap(\n    $int_fieldId,\n    $float_addrX,\n    $float_addrY,\n    $float_indexedValue0,\n    $float_indexedValue1,\n    $float_defaultValue,\n    $float_exp\n){\n    var value;\n    var d = new Vec2();\n    if(fieldId > -1) {\n        if(fieldId >= this.uIndexCount) {\n            value = this.getNonIndexedData(fieldId, addrX, addrY);\n        } else if(fieldId < this.uIndexCount) {\n            value = (fieldId == 0) ? indexedValue0 : indexedValue1;\n        }\n        if(exp != 0.0) {\n            value = pow(value, exp);\n        }\n        d = this.uVisDomains[fieldId];\n        value = (value - d.x) / (d.y - d.x);\n    } else {\n        value = defaultValue;\n    }\n    return value;\n};\n\nvar instancedXY = {};\ninstancedXY.vs  = function() {\n    var i, j, posX, posY, color, alpha, width, height, size;\n    var rgb = new Vec3();\n\n    i = (this.aDataIdx+0.5) / this.uDataDim.x;\n    j = (this.aDataIdy+0.5) / this.uDataDim.y;\n\n    if(this.uFilterFlag == 1) {\n        this.vResult = texture2D(this.fFilterResults, vec2(i, j)).a;\n    } else {\n        this.vResult = this.uVisLevel;\n    }\n\n    posX = this.visMap(this.uVisualEncodings[0], i, j, this.aDataValx, this.aDataValy, 0.0, 0.0);\n    posY = this.visMap(this.uVisualEncodings[1], i, j, this.aDataValx, this.aDataValy, 0.0,  0.0);\n    color = this.visMap(this.uVisualEncodings[2], i, j, this.aDataValx, this.aDataValy, -1.0,  0.0);\n    alpha = this.visMap(this.uVisualEncodings[3], i, j, this.aDataValx, this.aDataValy, this.uDefaultAlpha, 0.0);\n    size = this.visMap(this.uVisualEncodings[6], i, j, this.aDataValx, this.aDataValy, 1.0,  0.0);\n\n    posX = posX * 2.0 - 1.0;\n    posY = posY * 2.0 - 1.0;\n\n    rgb = this.mapColorRGB(this.uVisualEncodings[2], color);\n    gl_PointSize = size * this.uMarkSize;\n    this.vColorRGBA = vec4(rgb, alpha);\n    gl_Position = vec4(posX, posY , 0.0, 1.0);\n};\n\ninstancedXY.fs = function() {\n    var valid = new Bool();\n    valid = this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01;\n    if(this.uVisShape == 1) {\n        var dist = length(gl_PointCoord.xy - vec2(0.5, 0.5));\n        if (dist > 0.5) discard;\n        var delta = 0.15;\n        var alpha = this.vColorRGBA.a - smoothstep(0.5-delta, 0.5, dist);\n        if( this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01) {\n            gl_FragColor = vec4(this.vColorRGBA.rgb*alpha, alpha);\n        } else {\n            discard;\n        }\n    } else {\n        if( this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01) {\n            gl_FragColor = vec4(this.vColorRGBA.rgb * this.vColorRGBA.a,  this.vColorRGBA.a);\n        } else {\n            discard;\n        }\n    }\n\n}\n\nvar interleave = {};\ninterleave.vs = function(){\n    var i, j;\n    var rgb = new Vec3();\n    var posX, posY, size, color, alpha;\n    gl_PointSize = this.uMarkSize;\n    i = (mod(this.aDataItemId, this.uDataDim.x) + 0.5) / this.uDataDim.x;\n    j = (floor(this.aDataItemId / this.uDataDim.x) + 0.5) / this.uDataDim.y;\n\n    this.vResult = this.uVisLevel;\n    if(this.uFilterFlag == 1) {\n        this.vResult = texture2D(this.fFilterResults, vec2(i, j)).a;\n    }\n    if(this.uInterleaveX == 1) {\n        posX = this.aDataFieldId.y / float(this.uFeatureCount-1);\n        posY = this.visMap(int(this.aDataFieldId.x), i, j, i, j, 1.0,  0.0);\n    } else {\n        posY = 1.0 - this.aDataFieldId.y / float(this.uFeatureCount-1);\n        posX = this.visMap(int(this.aDataFieldId.x), i, j, i, j, 1.0,  0.0);\n    }\n    color = this.visMap(this.uVisualEncodings[2], i, j, i, j, -1.0,  0.0);\n    alpha = this.visMap(this.uVisualEncodings[3], i, j, i, j, this.uDefaultAlpha, 0.0);\n\n    posX = posX * 2.0 - 1.0;\n    posY = posY * 2.0 - 1.0;\n\n    rgb = this.mapColorRGB(this.uVisualEncodings[2], color);\n    this.vColorRGBA = vec4(rgb*alpha, alpha);\n\n    gl_Position = vec4(posX, posY, 0.0, 1.0);\n}\n\ninterleave.fs = function() {\n    if(this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01)\n        gl_FragColor = this.vColorRGBA;\n    else\n        discard;\n}\n\nvar polygon = {};\npolygon.vs = function(){\n    var i, j;\n    var rgb = new Vec3();\n    var posX, posY, color, alpha, width, height, size;\n    i = (mod(this.aDataItemId, this.uDataDim.x) + 0.5) / this.uDataDim.x;\n    j = (floor(this.aDataItemId / this.uDataDim.x) + 0.5) / this.uDataDim.y;\n\n    this.vResult = this.uVisLevel;\n\n    if(this.uFilterFlag == 1) {\n        this.vResult = texture2D(this.fFilterResults, vec2(i, j)).a;\n    }\n    var val0, val1;\n    val0 = this.aDataItemVal0;\n    val1 = this.aDataItemVal1;\n    posX = this.visMap(this.uVisualEncodings[0], i, j, val0, val1, 0.0, 0.0);\n    posY = this.visMap(this.uVisualEncodings[1], i, j, val0, val1, 0.0,  0.0);\n    color = this.visMap(this.uVisualEncodings[2], i, j, val0, val1, -1.0,  0.0);\n    alpha = this.visMap(this.uVisualEncodings[3], i, j,  val0, val1, this.uDefaultAlpha, 0.0);\n    width = this.visMap(this.uVisualEncodings[4], i, j,  val0, val1, this.uDefaultWidth, 0.0);\n    height = this.visMap(this.uVisualEncodings[5], i, j,  val0, val1, this.uDefaultHeight, 0.0);\n    size = this.visMap(this.uVisualEncodings[6], i, j, val0, val1, this.uMarkSize,  0.0);\n    posX = posX * (this.uFieldWidths[this.uVisualEncodings[0]] - 1.0) / this.uFieldWidths[this.uVisualEncodings[0]];\n    posY = posY * (this.uFieldWidths[this.uVisualEncodings[1]] - 1.0) / this.uFieldWidths[this.uVisualEncodings[1]];\n\n    width *= 1.0 - this.uMarkSpace.x * 2.0;\n    height *= 1.0 - this.uMarkSpace.y * 2.0;\n    posX -= this.uMarkSpace.x * width;\n    posY += this.uMarkSpace.y * height;\n\n    if(this.aVertexId == 0.0 || this.aVertexId == 3.0) {\n        posX = posX * 2.0 - 1.0;\n        posY = posY * 2.0 - 1.0;\n    } else if(this.aVertexId == 1.0) {\n        posX = posX * 2.0 - 1.0;\n        posY = (posY + height) * 2.0 - 1.0;\n    } else if(this.aVertexId == 2.0 || this.aVertexId == 5.0) {\n        posX = (posX + width) * 2.0 - 1.0;\n        posY = (posY + height) * 2.0 - 1.0;\n    } else if(this.aVertexId == 4.0) {\n        posX = (posX + width) * 2.0 - 1.0;\n        posY = posY * 2.0 - 1.0;\n    } else {\n        posX = posX * 2.0 - 1.0;\n        posY = posY * 2.0 - 1.0;\n    }\n\n    rgb = this.mapColorRGB(this.uVisualEncodings[2], color);\n    this.vColorRGBA = vec4(rgb*alpha, alpha);\n    gl_Position = vec4(posX, posY, 0.0, 1.0);\n}\n\npolygon.fs = function() {\n    if(this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01)\n        gl_FragColor = this.vColorRGBA;\n    else\n        discard;\n}\n\nexport default function render(fxgl) {\n    fxgl.subroutine('visMap', 'float', visMap);\n    fxgl.program(\"instancedXY\",\n        fxgl.shader.vertex(instancedXY.vs),\n        fxgl.shader.fragment(instancedXY.fs)\n    );\n    fxgl.program(\n        \"interleave\",\n        fxgl.shader.vertex(interleave.vs),\n        fxgl.shader.fragment(interleave.fs)\n    );\n    fxgl.program(\n        \"polygon\",\n        fxgl.shader.vertex(polygon.vs),\n        fxgl.shader.fragment(polygon.fs)\n    );\n}\n","\nexport default function reveal($p) {\n    var viewport = $p.viewport,\n        padding = $p.padding;\n\n    $p.uniform('uRevealMode', 'int', 1)\n        .framebuffer(\"offScreenFBO\", \"float\", $p.viewport)\n        .framebuffer(\"visStats\", \"float\", [1, 1]);\n\n    var aViewX = new Float32Array($p.viewport[0]).map((d, i) => i);\n    var aViewY = new Float32Array($p.viewport[1]).map((d, i) => i);\n\n    $p.attribute(\"aViewX\", \"float\", aViewX)\n        .attribute(\"aViewY\", \"float\", aViewY);\n\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aViewX.location, 0);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aViewY.location, 1);\n\n    var vs = $p.shader.vertex(function(){\n        var i, j;\n        i = (this.aViewX+0.5) / this.uViewDim.x;\n        j = (this.aViewY+0.5) / this.uViewDim.y;\n        this.vColorRGBA = texture2D(this.offScreenFBO, vec2(i, j));\n        gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    });\n\n    var fs = $p.shader.fragment(function() {\n        gl_FragColor = this.vColorRGBA;\n    });\n\n    $p.program(\"post-processing\", vs, fs);\n\n    var vs2 = $p.shader.vertex(function () {\n         gl_Position = vec4(this._square, 0, 1);\n    });\n\n    var fs2 = $p.shader.fragment(function() {\n        var x, y, a;\n        var value = new Vec4();\n        x = (gl_FragCoord.x+0.5) / this.uViewDim.x;\n        y = (gl_FragCoord.y+0.5) / this.uViewDim.y;\n        value = texture2D(this.offScreenFBO, vec2(x, y));\n\n        if(value.a == 0.0) discard;\n        // a = pow(((value.a - this.uDefaultAlpha) / (this.uMaxRGBA.a -this.uDefaultAlpha)), 0.33) * 0.85 + 0.15;\n        a = pow((value.a / this.uMaxRGBA.a), 0.33) * 0.9 + 0.1;\n        // a = value.a / this.uMaxRGBA.a;\n\n        if(this.uRevealMode == 0) {\n            gl_FragColor = vec4(this.uDefaultColor*a, a);\n        } else {\n            gl_FragColor = vec4(texture2D(this.tColorGraident, vec2(1.-a, 1.0)).rgb*this.uDefaultAlpha, this.uDefaultAlpha);\n        }\n    });\n\n    $p.program(\"vis-render\", vs2, fs2);\n\n    return function(options) {\n        var gl,\n            viewIndex = options.viewIndex,\n            viewDim = options.dim,\n            offset = options.offset || [0, 0],\n            padding = options.padding || {left: 0, right: 0, left: 0, right:0};\n\n        if(!$p._update) {\n            $p.framebuffer(\"visStats\", \"float\", [1, 1]);\n            gl = $p.program(\"post-processing\");\n            $p.framebuffer.enableRead(\"offScreenFBO\");\n            $p.bindFramebuffer(\"visStats\");\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aViewX.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aViewY.location, 1);\n            gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n            gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.disable(gl.CULL_FACE);\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable( gl.BLEND );\n            gl.blendFunc( gl.ONE, gl.ONE );\n            gl.blendEquation(gl.MAX_EXT);\n            gl.viewport(0, 0, 1, 1);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0,  viewDim[0], viewDim[1]);\n\n            var max = new Float32Array(4);\n            gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, max);\n            if(max[3] == 0) {\n                max[3] = Math.sqrt($p.dataSize) * Math.log2($p.dataSize);\n            }\n            $p.views[viewIndex].maxRGBA = max;\n        }\n\n        $p.uniform.uMaxRGBA = $p.views[viewIndex].maxRGBA;\n\n        $p.bindFramebuffer(null);\n        gl = $p.program(\"vis-render\");\n        gl.ext.vertexAttribDivisorANGLE($p.attribute._square.location, 0);\n        $p.framebuffer.enableRead(\"offScreenFBO\");\n\n        gl.viewport(\n            offset[0] + padding.left,\n            offset[1] + padding.bottom,\n            viewDim[0] - padding.left - padding.right,\n            viewDim[1] - padding.top - padding.bottom\n        );\n        // gl.blendEquation(gl.FUNC_ADD);\n        gl.disable( gl.BLEND );\n        // gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        // gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n}\n","import * as ctypes from './ctypes';\n\nexport function seq(dtype, start, end, interval) {\n    var step = interval || 1,\n        size = (end - start) / step + 1,\n        buf;\n\n    buf = new ctypes[dtype](size);\n    for (var i = 0; i < size; i++) {\n        buf[i] = start + i * step;\n    }\n    return buf;\n}\n\nexport let seqInt = seq.bind(null, \"int\");\nexport let seqFloat = seq.bind(null, \"float\");\n","import colors from './color';\nimport ctypes from './ctypes';\nimport render from './render';\nimport reveal from './reveal';\nimport encode from './encode';\nimport interact from './interact';\n\nimport Layout from './metavis/layout';\n\nconst visualEncodings = ['x', 'y', 'color', 'opacity', 'width', 'height', 'size'];\nconst userActions = ['click', 'hover', 'brush', 'zoom', 'pan'];\n\nexport default function visualize($p) {\n\n    var colorManager = colors($p),\n        chartPadding = $p.padding || {left: 0, right: 0, top: 0, bottom: 0},\n        viewport = [\n            $p.viewport[0],\n            $p.viewport[1],\n        ];\n\n    var vis = new Layout({\n        container: $p.container,\n        width: viewport[0] + chartPadding.left + chartPadding.right,\n        height: viewport[1] + chartPadding.top + chartPadding.bottom,\n        canvas: $p.canvas,\n        padding: chartPadding\n    });\n\n    $p.uniform('uVisualEncodings',  'int',   new Array(visualEncodings.length).fill(-1))\n        .uniform('uViewDim',        'vec2',  $p.viewport)\n        .uniform('uVisShape',       'int',   1)\n        .uniform('uInterleaveX',    'int',   0)\n        .uniform('uVisDomains',     'vec2',  $p.fieldDomains.map(d=>d.slice()))\n        .uniform('uVisScale',       'vec2', [1.0, 1.0])\n        .uniform('uPosOffset',      'vec2', [0.0, 0.0])\n        .uniform('uFeatureCount',   'int',   0)\n        .uniform('uMarkSize',       'float', 10.0)\n        .uniform('uMarkSpace',      'vec2',  [0.02, 0.02])\n        .uniform('uDefaultAlpha',   'float', 1.0)\n        .uniform('uDefaultWidth',   'float', 1.0 / $p.viewport[0])\n        .uniform('uDefaultHeight',  'float', 1.0 / $p.viewport[1])\n        .uniform('uMaxRGBA',        'vec4',  [0, 0, 0, 0])\n        .uniform('uDefaultColor',   'vec3',  [0.8, 0, 0])\n        .uniform('uColorMode',      'int',   1)\n        .varying('vColorRGBA',      'vec4'   );\n\n    var enhance = reveal($p);\n\n    $p.framebuffer('offScreenFBO', 'float', $p.viewport);\n    $p.framebuffer('visStats', 'float', [1, 1]);\n\n    // $p.framebuffer.enableRead('offScreenFBO');\n    $p.renderMode = 'instancedXY';\n\n    var renderer = render($p);\n\n    function updateInstancedAttribute(vm) {\n        if(Array.isArray(vm)){\n            $p.uniform.uFeatureCount = vm.length;\n            var fv = new Float32Array(vm.length*2);\n            vm.forEach(function(f, i) {\n                fv[i*2] = $p.fields.indexOf(f);\n                fv[i*2+1] = i;\n            });\n            $p.attribute.aDataFieldId = fv;\n        }\n    }\n\n    var viz = function(options) {\n        $p.renderMode = 'instancedXY';\n        $p.revealDensity = false;\n        var vmap = options.vmap || {},\n            mark = options.mark || vmap.mark || 'line',\n            data = options.data || null,\n            interaction = options.interaction,\n            viewIndex = options.viewIndex,\n            viewTag = $p.views[viewIndex].id;\n\n        var visDomain = {},\n            visDimension = vmap.viewport || [$p.views[viewIndex].width, $p.views[viewIndex].height] || viewport;\n\n        var width = visDimension[0],\n            height =  visDimension[1],\n            padding = $p.views[viewIndex].padding || chartPadding,\n            offset = $p.views[viewIndex].offset || [0, 0];\n\n\n        var dimSetting = encode($p, vmap, colorManager);\n\n        if(!$p._update){\n            $p.fields.forEach(function(f, i){\n                visDomain[f] = $p.fieldDomains[i].slice();\n                if(vmap.zero && (f == vmap.height || f == vmap.width ) && visDomain[f][0]>0) visDomain[f][0] = 0;\n            });\n        }\n\n        var gl = $p.program($p.renderMode);\n        $p.framebuffer.enableRead('fFilterResults');\n        $p.framebuffer.enableRead('fDerivedValues');\n        $p.framebuffer.enableRead('fGroupResults');\n\n        if($p.renderMode == 'instancedXY') {\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n        } else if($p.renderMode == 'interleave') {\n            updateInstancedAttribute(vmap.x);\n            updateInstancedAttribute(vmap.y);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataFieldId.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemId.location, 1);\n        } else {\n            var val0 = new Float32Array($p.dataSize),\n                val1 = new Float32Array($p.dataSize);\n            for(var y = 0; y < $p.dataDimension[1]; y++) {\n                for(var x = 0; x < $p.dataDimension[0]; x++) {\n                    val0[y*$p.dataDimension[0] + x] = $p.attribute.aDataValx.data[x];\n                    val1[y*$p.dataDimension[0] + x] = $p.attribute.aDataValy.data[y];\n                }\n            }\n            $p.attribute.aDataItemVal0 = val0;\n            $p.attribute.aDataItemVal1 = val1;\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aVertexId.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemId.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemVal0.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemVal1.location, 1);\n        }\n\n        // if(typeof data == 'string')\n        //     $p.uniform.uDataInput = $p.framebuffer[data].texture;\n        var viewSetting = {\n            domain: visDomain,\n            width: width,\n            height: height,\n            fields: $p.fields,\n            vmap: vmap,\n            onclick: interaction,\n            categories: $p.categoryLookup,\n            padding: padding,\n            left: offset[0],\n            top: viewport[1] - height - offset[1],\n            colors: colorManager.getColors(),\n            showLegend: $p.views[viewIndex].legend\n        };\n\n        viewSetting = Object.assign(viewSetting, dimSetting);\n\n        if($p.revealDensity) {\n            $p.bindFramebuffer('offScreenFBO');\n            gl.clearColor( 1.0, 1.0, 1.0, 0.0 );\n            gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.blendFunc(gl.ONE, gl.ONE );\n        } else {\n            $p.bindFramebuffer(null);\n            // gl.clearColor( 1.0, 1.0, 1.0, 0.0 );\n            gl.blendFunc( gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n            // gl.blendFunc(gl.SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        gl.viewport(\n            offset[0] + padding.left,\n            offset[1] + padding.bottom,\n            width-padding.left-padding.right,\n            height-padding.top-padding.bottom\n        );\n        gl.lineWidth(1.0);\n\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable( gl.BLEND );\n        gl.blendEquation(gl.FUNC_ADD);\n\n        if(mark == 'stack') {\n            var result = $p.readResult('row');\n            viewSetting.data = result.filter(d=>d[vmap.y]>0);\n            viewSetting.fields = $p.fields;\n            if($p.intervals.hasOwnProperty(vmap.x))\n                viewSetting.isHistogram = true;\n        }\n\n        //TODO: Maybe just save the needed data domains instead of copying all\n        if(!$p._update) {\n            var pv = $p.views[viewIndex];\n            pv.domains = Object.keys(visDomain).map(f=>visDomain[f]);\n            $p.uniform.uVisDomains = pv.domains;\n            if(pv.hasOwnProperty('chart') && typeof pv.chart.svg.remove == 'function') {\n                pv.chart.svg.remove();\n            }\n            pv.chart = vis.addChart(viewSetting);\n        } else {\n            $p.uniform.uVisDomains = $p.views[viewIndex].domains;\n            if(mark == 'stack'){\n                var result = $p.readResult('row');\n                $p.views[viewIndex].chart.update({\n                    data: result\n                })\n            }\n        }\n        var primitive = gl.POINTS;\n        if(['rect', 'bar'].indexOf(mark) !== -1) primitive = gl.TRIANGLES;\n        else if(mark == 'line') primitive = gl.LINE_STRIP;\n\n        function draw() {\n            if($p.renderMode == 'interleave') {\n                var count = $p.attribute.aDataFieldId.data.length / $p.attribute.aDataFieldId.size;\n                gl.ext.drawArraysInstancedANGLE(primitive, 0, count, $p.dataSize);\n            } else if($p.renderMode == 'polygon'){\n                gl.ext.drawArraysInstancedANGLE(primitive, 0, 6, $p.dataSize);\n            } else {\n                if(primitive == gl.LINE_STRIP) {\n                    console.log($p.dataDimension);\n                    gl.ext.drawArraysInstancedANGLE(primitive, 0, $p.dataDimension[0], $p.dataDimension[1]);\n                } else {\n                    gl.ext.drawArraysInstancedANGLE(primitive, 0, $p.dataDimension[0], $p.dataDimension[1]);\n                }\n            }\n        }\n\n        if(mark!='stack') draw();\n        if($p.revealDensity) enhance({\n            viewIndex: viewIndex,\n            dim: [width, height],\n            offset: offset,\n            padding: padding\n        });\n        $p.bindFramebuffer(null);\n\n        if(!$p._update) {\n            var actions = Object.keys(vmap)\n                .filter(function(act){ return userActions.indexOf(act) !== -1});\n\n            actions.forEach(function(action) {\n                var viewId = vmap.id || $p.views[viewIndex].id,\n                    response = {};\n                response[viewId] = vmap[action];\n                $p.interactions.push({\n                    event: action,\n                    condition: vmap[action].condition,\n                    from: viewId,\n                    response: response\n                })\n            })\n        }\n    }\n    viz.chart = vis;\n    return viz;\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","export default function fileLoader(arg) {\n    var options = arg || {},\n        file = options.file,\n        ftype = options.type || options.ftype || 'csv',\n        delimiter = options.delimiter || null,\n        onLoadStart = options.onstart || function() {},\n        onLoadComplete = options.oncomplete || function() {},\n        onLoad = options.onload || function() {},\n        chunk = options.bufferSize || 32 * 1024,\n        skip = options.skip || 0,\n        struct = options.struct || {};\n\n    if(typeof(file) === 'undefined' ) return;\n\n    var reader = new FileReader(),\n        fileSize = file.size,\n        header = '',\n        offset = 0,\n        lineTotal = 0,\n        counting = true,\n        leftOver = '',\n        rawText,\n        lines;\n\n    reader.onloadend = function(evt) {\n        if (evt.target.readyState == FileReader.DONE) {\n            rawText = leftOver + evt.target.result;\n            lines = rawText.split('\\n');\n            leftOver = lines.pop();\n\n            if(offset == 0 && counting) header = lines[0];\n\n            if(offset == 0 && skip > 0) lines.shift();\n            if(counting) {\n                lineTotal += lines.length;\n            } else {\n                onLoad(lines);\n            }\n\n            if(offset < fileSize) {\n                offset += chunk;\n                var blob = file.slice(offset, offset+chunk);\n                reader.readAsBinaryString(blob);\n\n            } else {\n                if(counting) {\n                    offset = 0;\n                    leftOver = '';\n                    counting = false;\n                    onLoadStart({\n                        line: lineTotal,\n                        size: fileSize,\n                        header: header,\n                    });\n\n                    console.log(\"openned file  \", file.name, \"(lines:\", lineTotal , \")\");\n                    var blob = file.slice(offset, offset+chunk);\n                    reader.readAsBinaryString(blob);\n                } else {\n                    counting = true;\n                    onLoadComplete();\n                    console.log(\"loaded file \", file.name);\n                }\n            }\n\n        }\n    }\n\n    function readFile() {\n        if(offset < fileSize) {\n            var blob = file.slice(offset, offset+chunk);\n            reader.readAsBinaryString(blob);\n        } else {\n            if(counting) {\n                offset = 0;\n                leftOver = '';\n                counting = false;\n                onLoadStart({\n                    line: lineTotal,\n                    size: fileSize,\n                    header: header,\n                });\n\n                console.log(\"openned file  \", file.name, \"(lines:\", lineTotal , \")\");\n                readFile();\n            } else {\n                counting = true;\n                onLoadComplete();\n                console.log(\"loaded file \", file.name);\n            }\n        }\n    }\n\n    function errorHandler(evt) {\n        switch(evt.target.error.code) {\n            case evt.target.error.NOT_FOUND_ERR:\n                alert('File Not Found!');\n                break;\n            case evt.target.error.NOT_READABLE_ERR:\n                alert('File is not readable');\n                break;\n            case evt.target.error.ABORT_ERR:\n                break; // noop\n            default:\n                alert('An error occurred reading this file.');\n        };\n    }\n    reader.onerror = errorHandler;\n    var blob = file.slice(0, chunk);\n    reader.readAsBinaryString(blob);\n}\n\n","import fileLoader    from './fileloader';\r\nimport modelKP       from './models/kp';\r\nimport modelTerminal from './models/terminal';\r\nimport modelRouter   from './models/router';\r\n\r\nimport p6Solo from 'p6-solo';\r\n\r\nimport linePlot      from './vis/lineplot';\r\nimport scatterPlot   from './vis/scatterplot';\r\nimport matrixPlot    from './vis/matrixplot';\r\n\r\nimport Layout      from './ui/layout';\r\nimport Panel       from './ui/panel';\r\nimport Button      from './ui/button';\r\nimport Table       from './ui/table';\r\nimport Dropdown    from './ui/dropdown';\r\nimport ProgressBar from './ui/progress';\r\nimport  * as d3  from 'd3-format';\r\n\r\n\r\nexport default function app(arg) {\r\n    var progressBars = [];\r\n\r\n    var views = {};\r\n\r\n    var stats = {},\r\n        data = arg.data || null,\r\n        container = arg.container || document.body;\r\n\r\n    var results = {};\r\n\r\n    var fileList;\r\n    var format = d3.format('.2s');\r\n    var stats = p6Solo.stats;\r\n    var dataopt = p6Solo.pipeline;\r\n\r\n    function loadDataFromFile(file, fileId) {\r\n        console.log(file, fileId);\r\n        if(typeof file == 'undefined') return;\r\n        var entity = false, db, rowTotal, rowCount = 0;\r\n\r\n        if(file.name.match('kp')) entity = modelKP();\r\n        if(file.name.match('router')) entity = modelRouter();\r\n        if(file.name.match('terminal')) entity = modelTerminal();\r\n\r\n        if(entity) {\r\n            fileLoader({\r\n                file: file,\r\n                skip: 1,\r\n                onstart: function(meta) {\r\n                    rowTotal = meta.line;\r\n                    db = entity.allocate(meta);\r\n                    fileList.updateCell(fileId, 2, rowTotal);\r\n                },\r\n                onload:function (data) {\r\n                    rowCount += data.length;\r\n                    progressBars[fileId].percent = rowCount / rowTotal * 100;\r\n                    var rows = entity.preprocess(data);\r\n                    // console.log(rows);\r\n                    if(Array.isArray(rows)) db.addRows(rows);\r\n                },\r\n                oncomplete: function() {\r\n                    var data = db.data();\r\n                    data.stats = db.stats();\r\n                    console.log(data);\r\n                    results[entity.model] = entity.visualize(data);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    var board = new Layout({\r\n        margin: 10,\r\n        cols: [\r\n            { id: 'temporalAnalysis', width: 0.45 },\r\n            { id: 'summary', width: 0.15 },\r\n            { id: 'statsAnalysis',  width: 0.40 },\r\n        ]\r\n    });\r\n\r\n    views.timelines = new Panel({\r\n        container: board.cell('temporalAnalysis'),\r\n        id: \"panel-timeline\",\r\n        title: \"Temporal Analysis (PE)\",\r\n        padding: 10,\r\n        header: {height: 0.04, style: {backgroundColor: '#F4F4F4'}}\r\n    });\r\n\r\n    views.summary = new Panel({\r\n        container: board.cell('summary'),\r\n        id: \"panel-summary\",\r\n        title: \"Temporal Summary (PE)\",\r\n        padding: 10,\r\n        style: {overflow: 'scroll'},\r\n        header: {height: 0.04, style: {backgroundColor: '#F4F4F4'}}\r\n    });\r\n\r\n    views.timelines.append(\r\n        '<div id=\"timeline-options\" class=\"plot-options\">'+\r\n            '<span>Terminal:<select id=\"terminal-metrics\"></select></span>'+\r\n            '<span>Router:<select id=\"router-metrics\"></select></span>'+\r\n            '<span> KP:<select id=\"kp-metrics\"></select></span>'+\r\n        '</div>' +\r\n        '<div id=\"terminal-timeline\"></div>' +\r\n        '<div id=\"router-timeline\"></div>' +\r\n        '<div id=\"kp-timeline\"></div>'\r\n    );\r\n\r\n    views.stats = new Panel({\r\n        container: board.cell('statsAnalysis'),\r\n        id: \"panel-stats\",\r\n        title: \"Statistical Analysis (KP)\",\r\n        padding: 10,\r\n        header: {height: 0.04, style: {backgroundColor: '#F4F4F4'}}\r\n    });\r\n\r\n    views.stats.append(\r\n        '<div id=\"stats-options\" class=\"plot-options\">'+\r\n            '<span>X:<select id=\"stats-x\"></select></span>'+\r\n            '<span>Y:<select id=\"stats-y\"></select></span>'+\r\n        //   '<span>Size:<select id=\"stats-size\"></select></span> '+\r\n            '<span>Color:<select id=\"stats-color\"></select></span> '+\r\n        '</div>' +\r\n        '<div id=\"stats-scatterplot\"></div>'\r\n    );\r\n\r\n    fileList = new Table({\r\n        container: document.getElementById('upload-files'),\r\n        // width: dataPanel.body * 0.8,\r\n        columns: ['File Name', 'Data Size', 'Number of Records', 'Progress / Status']\r\n    });\r\n\r\n    fileList.style.display = 'none';\r\n\r\n    var fileUploadButton = new Button({\r\n        label: ' Open Files ',\r\n        container: document.getElementById('upload-files'),\r\n        types: ['primary', 'center'],\r\n        icon: 'folder open',\r\n        fileInput: {id: 'testFileUpload', onchange: function(evt) {\r\n            var files = evt.target.files;\r\n            fileList.style.display = 'table';\r\n            console.log(files);\r\n            // $('.ui.large.modal').modal('toggle');\r\n            Object.keys(files).forEach(function(f, fi){\r\n                var fileName = files[f].name;\r\n                var tr = fileList.addRow([fileName, format(files[f].size)+'B', '--', '']);\r\n\r\n                progressBars[f] = new ProgressBar({\r\n                    percentage: 0,\r\n                    container: tr.childNodes[3],\r\n                    types: ['green']\r\n                });\r\n                progressBars[f].style.margin = '0';\r\n                loadDataFromFile(files[f], fi);\r\n            });\r\n            startButton.className = startButton.className.replace('disabled', '');\r\n        }}\r\n    });\r\n\r\n    var timeLinePlots = {};\r\n    var lockBrush = false;\r\n\r\n    function obtainTemporalSummary(domain, selEntity) {\r\n        var aggrResult = [], tres, metrics = [];\r\n        var se = selEntity || false,\r\n            sem =  (se) ? $('#' +  selEntity + '-metrics').val(): 'PE';\r\n\r\n        [\"terminal\", \"router\", \"kp\"].forEach(function(entity){\r\n            var metric = $('#' + entity + '-metrics').val();\r\n            metrics.push(metric);\r\n            var dp = dataopt();\r\n\r\n            if(Array.isArray(domain)){\r\n                dp.match({\r\n                    VT:  domain\r\n                })\r\n            }\r\n            dp.aggregate({\r\n                $group: ['PE'],\r\n                $collect: {\r\n                    value: {$sum: metric}\r\n                }\r\n            })\r\n\r\n            tres = dp.execute(results[entity].VT)\r\n            .map(function(d){\r\n                return {\r\n                    PE: d.PE,\r\n                    metric: metric,\r\n                    value: d.value\r\n                };\r\n            });\r\n\r\n            aggrResult = aggrResult.concat(tres);\r\n        });\r\n\r\n\r\n        var pes = (se) ? aggrResult.filter(d => d.metric == sem).sort((a,b)=>b.value-a.value).map(d=>d.PE) : null;\r\n\r\n        views.summary.clear();\r\n        matrixPlot({\r\n            data: aggrResult,\r\n            container: '#panel-summary-body',\r\n            width: views.summary.innerWidth,\r\n            domainY: pes,\r\n            domainX: metrics,\r\n            height: Math.max(views.summary.innerHeight, aggrResult.length * 40/3),\r\n            vmap: {\r\n                color: 'PE',\r\n                y: 'PE',\r\n                x: 'metric'\r\n            }\r\n        })\r\n    }\r\n\r\n    function linkTimeLinePlots () {\r\n        timeLinePlots['terminal'].onhover = function(mouse) {\r\n            timeLinePlots['router'].showLineCursor(mouse);\r\n            timeLinePlots['kp'].showLineCursor(mouse);\r\n        }\r\n        timeLinePlots['terminal'].onbrush = function(selection) {\r\n            timeLinePlots['kp'].brushCallBack = false;\r\n            timeLinePlots['router'].brushCallBack = false;\r\n            timeLinePlots['router'].moveBrush(selection);\r\n            timeLinePlots['kp'].moveBrush(selection);\r\n        }\r\n\r\n        timeLinePlots['router'].onhover = function(mouse) {\r\n            timeLinePlots['terminal'].showLineCursor(mouse);\r\n            timeLinePlots['kp'].showLineCursor(mouse);\r\n        }\r\n        timeLinePlots['router'].onbrush = function(selection) {\r\n            timeLinePlots['kp'].brushCallBack = false;\r\n            timeLinePlots['terminal'].brushCallBack = false;\r\n            timeLinePlots['kp'].moveBrush(selection);\r\n            timeLinePlots['terminal'].moveBrush(selection);\r\n        }\r\n\r\n        timeLinePlots['kp'].onhover = function(mouse) {\r\n            timeLinePlots['router'].showLineCursor(mouse);\r\n            timeLinePlots['terminal'].showLineCursor(mouse);\r\n        }\r\n        timeLinePlots['kp'].onbrush = function(selection) {\r\n\r\n            timeLinePlots['router'].brushCallBack = false;\r\n            timeLinePlots['terminal'].brushCallBack = false;\r\n            timeLinePlots['router'].moveBrush(selection);\r\n            timeLinePlots['terminal'].moveBrush(selection);\r\n\r\n        }\r\n\r\n        timeLinePlots['terminal'].onbrushend = function(selection, domain) {\r\n            obtainTemporalSummary(domain, 'terminal');\r\n            timeLinePlots['router'].brushCallBack = true;\r\n            timeLinePlots['kp'].brushCallBack = true;\r\n        }\r\n        timeLinePlots['router'].onbrushend = function(selection, domain) {\r\n            obtainTemporalSummary(domain, 'router');\r\n            timeLinePlots['kp'].brushCallBack = true;\r\n            timeLinePlots['terminal'].brushCallBack = true;\r\n        }\r\n        timeLinePlots['kp'].onbrushend = function(selection, domain) {\r\n            obtainTemporalSummary(domain, 'kp');\r\n            timeLinePlots['router'].brushCallBack = true;\r\n            timeLinePlots['terminal'].brushCallBack = true;\r\n        }\r\n    }\r\n\r\n    var startButton = new Button({\r\n        label: 'Start Analysis',\r\n        container: document.getElementById('upload-files'),\r\n        types: ['green', 'center', 'disabled'],\r\n        onclick: function() {\r\n            [\"terminal\", \"router\", \"kp\"].forEach(function(entity){\r\n                Object.keys(results[entity].VT[0]).filter(function(k){\r\n                    return ['VT', 'KP', 'PE', 'terminal_id', 'router_id', 'LP'].indexOf(k) === -1;\r\n                })\r\n                .forEach(function(k){\r\n                    $('#' + entity + '-metrics').append($(\"<option/>\").attr('value', k).text(k))\r\n                });\r\n\r\n                $('#' + entity + '-metrics').change(function(v){\r\n                    var metric = $(this).val();\r\n\r\n                    $('#' + entity + '-timeline').html('');\r\n                    var plotOption = {\r\n                        data: results[entity].VT,\r\n                        container: '#' + entity + '-timeline',\r\n                        width: views.timelines.innerWidth,\r\n                        height: (views.timelines.innerHeight-100) /3,\r\n                        vmap: {\r\n                            color: 'PE',\r\n                            x: 'VT',\r\n                            y: metric\r\n                        },\r\n                        title: entity\r\n                    };\r\n\r\n                    // if(entity == 'terminal') plotOption.legend = true;\r\n                    timeLinePlots[entity] = linePlot(plotOption);\r\n                    linkTimeLinePlots();\r\n                    obtainTemporalSummary();\r\n                });\r\n            });\r\n\r\n\r\n            timeLinePlots['terminal'] = linePlot({\r\n                data: results.terminal.VT,\r\n                container: '#terminal-timeline',\r\n                width: views.timelines.innerWidth,\r\n                height: (views.timelines.innerHeight - 100) /3,\r\n                title: 'terminal',\r\n                // legend: true,\r\n                vmap: {\r\n                    color: 'PE',\r\n                    x: 'VT',\r\n                    y: 'total_data_size'\r\n                }\r\n            });\r\n\r\n\r\n            timeLinePlots['router'] = linePlot({\r\n                data: results.router.VT,\r\n                container: '#router-timeline',\r\n                width: views.timelines.innerWidth,\r\n                height: (views.timelines.innerHeight - 100) /3,\r\n                title: 'router',\r\n                vmap: {\r\n                    color: 'PE',\r\n                    x: 'VT',\r\n                    y: 'total_traffic'\r\n                },\r\n                colorMap: timeLinePlots.terminal.colorMap\r\n            });\r\n\r\n            timeLinePlots['kp'] = linePlot({\r\n                data: results.kp.VT,\r\n                container: '#kp-timeline',\r\n                width: views.timelines.innerWidth,\r\n                height: (views.timelines.innerHeight - 100) /3,\r\n                title: 'kp',\r\n                vmap: {\r\n                    color: 'PE',\r\n                    x: 'VT',\r\n                    y: 'total_rollback'\r\n                },\r\n                colorMap: timeLinePlots['terminal'].colorMap\r\n            })\r\n            linkTimeLinePlots();\r\n\r\n            var mergedData = results.kp.KP.map(function(d, i) {\r\n                var obj = d;\r\n                if(obj.KP == results.terminal.KP[i].KP){\r\n                    Object.keys(results.terminal.KP[i]).forEach(function(k){\r\n                        obj[k] = results.terminal.KP[i][k];\r\n                    });\r\n                }\r\n                if(obj.KP == results.router.KP[i].KP){\r\n                    Object.keys(results.router.KP[i]).forEach(function(k){\r\n                        obj[k] = results.router.KP[i][k];\r\n                    });\r\n                }\r\n\r\n                return obj;\r\n            })\r\n\r\n            var statsVmap = {\r\n                color: 'PE',\r\n                x: 'total_data_size',\r\n                y: 'total_rollback'\r\n            };\r\n\r\n            var encodings = ['x', 'y', 'color'];\r\n\r\n            encodings.forEach(function(encode){\r\n                Object.keys(mergedData[0])\r\n                .forEach(function(k){\r\n                    $('#stats-' + encode).append($(\"<option/>\").attr('value', k).text(k))\r\n                })\r\n                $('#stats-' + encode).val(statsVmap[encode]);\r\n                $('#stats-' + encode).change(function(v){\r\n                    statsVmap[encode] = $(this).val();\r\n\r\n                    $('#stats-scatterplot').html('');\r\n                    scatterPlot({\r\n                        data: mergedData,\r\n                        container: '#stats-scatterplot',\r\n                        width: views.stats.innerWidth,\r\n                        height: views.stats.innerHeight - 100,\r\n                        vmap: statsVmap\r\n                    })\r\n                })\r\n            });\r\n\r\n            scatterPlot({\r\n                data: mergedData,\r\n                container: '#stats-scatterplot',\r\n                width: views.stats.innerWidth,\r\n                height: views.stats.innerHeight - 100,\r\n                vmap: {\r\n                    color: 'PE',\r\n                    x: 'total_data_size',\r\n                    y: 'total_rollback'\r\n                }\r\n            })\r\n\r\n            obtainTemporalSummary();\r\n\r\n            $('.ui.large.modal').modal('toggle');\r\n\r\n        }\r\n    })\r\n\r\n    return stats;\r\n}\r\n","import p6 from 'p6';\n\nexport default function KP(view) {\n    return {\n        model: 'kp',\n        \n        preprocess: function(text) {\n            return text.map(function(d){\n                var row =  d.split(',');\n                return row;\n            });\n        },\n\n        allocate: function(metadata) {\n            return p6.cstore({\n                size: metadata.line,\n                struct: {\n                    KP                 : \"int\",\n                    PE                 : \"int\",\n                    VT                 : \"time\",\n                    RT                 : \"time\",\n                    time_ahead_gvt     : \"float\",\n                    total_rollback     : \"int\",\n                    primary_rollback   : \"int\",\n                    secondary_rollback : \"int\"\n                }\n            });\n        },\n\n        visualize: function(data) {\n            var kps = p6({\n                data: data,\n                // container: 'stats-scatterplot',\n                viewport: [1,1]\n            });\n\n            var stats = {};\n\n            // kps.visualize({\n            //     mark: 'dot ',\n            //     x: 'VT',\n            //     y: 'RT',\n            //     opacity: 'total_rollback',\n            //     perpcetual: 1\n            // })\n\n            stats.VT = kps.aggregate({\n                $group: ['PE', 'VT'],\n                // real_time: {$max: 'RT'},\n                total_rollback: {$sum: 'total_rollback'},\n                primary_rollback : {$sum: 'primary_rollback'},\n                secondary_rollback: {$sum: 'secondary_rollback'},\n                time_ahead_gvt : {$sum: 'time_ahead_gvt'}\n            })\n            .result('row');\n\n        stats.KP = kps\n            .head()\n            .aggregate({\n                $group: ['KP', 'PE'],\n                total_rollback: {$sum: 'total_rollback'},\n                primary_rollback: {$sum: 'primary_rollback'},\n                secondary_rollback: {$sum: 'secondary_rollback'},\n                time_ahead_gvt : {$sum: 'time_ahead_gvt'}\n            })\n            .result('row');\n\n            console.log(stats);\n            return stats;\n        }\n    };\n}\n\n","import p6 from 'p6';\n\nexport default function Router(view) {\n    return {\n        model: 'router',\n\n        preprocess: function(text) {\n            return text.map(function(d){\n                var row =  d.split(',');\n                var result = row.slice(0, 7); //get the first 7 columns which are not sat.time or traffic\n                var metrics = 7 + (row.length-7) / 2;\n                result.push( row.slice(7, metrics).reduce((a,b) => a+b) );\n                result.push( row.slice(metrics).reduce((a,b) => parseFloat(a)+parseFloat(b)) );\n                return result;\n            });\n        },\n\n        allocate: function(metadata) {\n            return p6.cstore({\n                size: metadata.line,\n                struct: {\n                    LP : 'int',\n                    KP : 'int',\n                    PE : 'int',\n                    router_id  : 'int',\n                    VT   : 'time',\n                    fwd_events : 'int',\n                    rev_events : 'int',\n                    total_sat_time : 'float',\n                    total_traffic  : 'float'\n                }\n            });\n        },\n\n        visualize: function(data) {\n            var routers = p6({\n                data: data,\n                viewport: [1, 1]\n            });\n\n            var stats = {};\n\n            stats.KP = routers\n            .aggregate({\n                $group: ['KP', 'PE'],\n                routers: {$count: '*'},\n                total_traffic_KB: {$sum: 'total_traffic'},\n                total_sat_time: {$sum: 'total_sat_time'},\n                total_forward_events: {$sum: 'fwd_events'},\n                total_reverse_events: {$sum: 'rev_events'},\n            })\n            .result('row');\n\n            stats.VT = routers\n            .head()\n            .aggregate({\n                $group: ['PE', 'VT'],\n                total_traffic: {$sum: 'total_traffic'},\n                total_sat_time: {$sum: 'total_sat_time'},\n                total_forward_events: {$sum: 'fwd_events'},\n                total_reverse_events: {$sum: 'rev_events'},\n            })\n            .result('row');\n\n            stats.LP = routers\n            .head()\n            .aggregate({\n                $group: ['LP'],\n                PE: {$max: 'PE'},\n                KP: {$max: 'KP'},\n                total_traffic: {$sum: 'total_traffic'},\n                total_sat_time: {$sum: 'total_sat_time'},\n                total_forward_events: {$sum: 'fwd_events'},\n                total_reverse_events: {$sum: 'rev_events'},\n            })\n            .result('row');\n\n            return stats;\n        }\n    }\n}\n","import p6 from 'p6';\n\nexport default function Terminal(view) {\n\n    var schema =  {\n        LP : 'int',\n        KP : 'int',\n        PE : 'int',\n        terminal_id : 'int',\n        fin_chunks  : 'int',\n        data_size   : 'int',\n        fin_hops    : 'int',\n        fin_chunks_time : 'float',\n        busy_time       : 'float',\n        VT              : 'time',\n        fwd_events      : 'int',\n        rev_events      : 'int'\n    };\n\n    return {\n        model: 'terminal',\n\n        allocate: function(metadata) {\n            return p6.cstore({\n                size: metadata.line,\n                struct: schema\n            });\n        },\n\n        preprocess: function(text) {\n            return text.map(function(d){\n                var row =  d.split(',');\n                return row;\n            });\n        },\n\n        visualize: function(data) {\n\n            var terminals = p6({\n                data: data,\n                viewport: [1, 1]\n            });\n\n            var stats = {};\n            stats.KP = terminals\n            .aggregate({\n                $group: ['KP', 'PE'],\n                terminals: {$count: '*'},\n                total_data_size: {$sum: 'data_size'},\n                total_busy_time: {$sum: 'busy_time'},\n                total_forward_events: {$sum: 'fwd_events'},\n                total_reverse_events: {$sum: 'rev_events'}\n            })\n            .result('row');\n\n            stats.VT = terminals\n            .head()\n            .aggregate({\n                $group: ['PE', 'VT'],\n                total_data_size: {$sum: 'data_size'},\n                total_busy_time: {$sum: 'busy_time'},\n                total_forward_events: {$sum: 'fwd_events'},\n                total_reverse_events: {$sum: 'rev_events'},\n            })\n            .result('row');\n\n            stats.LP = terminals\n            .head()\n            .aggregate({\n                $group: ['terminal_id'],\n                PE: {$max: 'PE'},\n                KP: {$max: 'KP'},\n                total_data_size: {$sum: 'data_size'},\n                total_busy_time: {$sum: 'busy_time'},\n                total_forward_events: {$sum: 'fwd_events'},\n                total_reverse_events: {$sum: 'rev_events'},\n            })\n            .result('row');\n\n            return stats;\n        }\n    }\n}\n","export default function Button(arg) {\n    var button = document.createElement('div'),\n        options = arg || {},\n        container = options.container || document.body,\n        callback = options.onclick || function() {},\n        text = options.text || options.label || null,\n        icon = options.icon || false,\n        title = options.title || false,\n        type = options.type,\n        fontSize = options.fontSize || options.size || null,\n        background = options.background || null,\n        fileInput = options.fileInput || false,\n        value = options.value || null,\n        types = options.types || [];\n\n    if(type) types.push(type);\n    types.push('ui button');\n    button.className = types.join(' ');\n    button.onclick = callback;\n    button.style.textAlign = 'center';\n    button.style.verticalAlign = 'top';\n\n    if(icon) {\n        var i = document.createElement('i');\n        i.className = icon + ' icon';\n        i.style.marginRight = \"10px\";\n        button.className += ' icon';\n        button.appendChild(i);\n    }\n\n    if(value !== null) {\n        button.setAttribute('value', value);\n    }\n\n    if(fileInput) {\n        var input = document.createElement('input'),\n            inputName = fileInput.name || 'files[]';\n\n        input.setAttribute('type', 'file');\n        input.setAttribute('multiple', '');\n        if(fileInput.hasOwnProperty('id')){\n            input.setAttribute('id', fileInput.id);\n        }\n        input.style.display = 'none';\n        if(typeof fileInput.onchange === 'function') {\n            input.addEventListener('change', function(evt) {\n                // fileInput.onchange(evt.target.files);\n                fileInput.onchange(evt);\n                return false;\n            }, false);\n        }\n\n        button.appendChild(input);\n        button.onclick = function(evt) {\n            input.click();\n            return false;\n        }\n\n        button.fileInput = input;\n    }\n\n    if(text !== null) button.innerHTML += text;\n    if(fontSize !== null) button.style.fontSize = fontSize;\n    if(title) button.title = title;\n    if(container) container.appendChild(button);\n\n    button.showLoading = function() {\n        if((' ' + button.className + ' ').indexOf(' loading ') === -1)\n            button.className += ' loading';\n    }\n\n    button.hideLoading = function() {\n        button.className = button.className.replace(/\\bloading\\b/, '');\n    }\n\n    button.toggleLoading = function() {\n        if((' ' + button.className + ' ').indexOf(' loading ') === -1)\n            button.className += ' loading';\n        else\n            button.hideLoading();\n    }\n\n\n    return button;\n}\n","export default function Dropdown(arg) {\n    var dropdown = document.createElement('div'),\n        wrapper = document.createElement('div');\n        options = arg || {},\n        container = options.container || null,\n        type = options.type,\n        id = options.id || false,\n        label = options.label,\n        items = options.items || options.menu || [],\n        types = options.types || [];\n\n    if(type) types.push(type);\n    if(id) dropdown.setAttribute('id', id);\n    dropdown.className = 'ui buttons ' + types.join(' ');\n\n    if(container) container.appendChild(dropdown);\n    var icon = document.createElement('div'),\n        menu = document.createElement('div');\n\n    dropdown.className = 'ui compact menu';\n    wrapper.className = 'ui simple dropdown item'\n\n    icon.className = 'dropdown icon';\n    menu.className = 'menu';\n\n    wrapper.appendChild(document.createTextNode(label));\n    wrapper.appendChild(icon);\n    wrapper.appendChild(menu);\n    dropdown.appendChild(wrapper);\n\n    dropdown.append = function(items) {\n        if(!Array.isArray) items = [items];\n        items.forEach(function(item){\n            var label = item.label || item.name || '',\n                callback = item.onclick || function(){};\n            var itemDiv = document.createElement('div'),\n                ic = document.createElement('i'),\n                text = document.createTextNode(label);\n            ic.className = item.icon + ' icon';\n            itemDiv.appendChild(ic);\n            itemDiv.appendChild(text);\n            itemDiv.onclick = callback.bind(this, arg);\n            itemDiv.className = 'item';\n            menu.appendChild(itemDiv);\n        })\n    }\n    dropdown.menu = function(items) {\n        dropdown.append(items);\n    }\n\n    dropdown.menu(items);\n\n    return dropdown;\n}\n","export default function Layout(arg) {\n    'use strict';\n    var options = arg || {},\n        layoutId = options.id || false,\n        className = options.class || \"\",\n        margin = options.margin || 0,\n        spacing = options.spacing || 5,\n        padding = options.padding || 0,\n        rows = options.rows || [],\n        cols = options.cols || [],\n        divRows = [],\n        divCols = [],\n        container = options.container || document.body;\n\n    if(typeof container == 'string')\n        container = document.getElementById(container);\n\n    if(container == document.body ) {\n        container.style.height = window.innerHeight + 'px';\n        container.style.padding = 0;\n        container.style.margin = 0;\n        container.style.overflow = 'hidden';\n    }\n\n    var setting = {\n        rowHeights: [],\n        colWidths : [],\n    };\n\n    var width = options.width ||  container.clientWidth || window.innerWidth,\n        height = options.height || container.clientHeight|| window.innerHeight;\n\n    width -= margin*2;\n    height -= margin*2;\n\n    var divs = {},\n        cells = [];\n\n\n    function createRow(w, h) {\n        var row = document.createElement('div');\n        row.style.width = w + 'px';\n        row.style.height = h + 'px';\n        row.className = 'davi-row';\n        row.style.overflow = 'hidden';\n        return row;\n    }\n\n    function createColumn(w, h) {\n        var col = document.createElement('div');\n        col.style.display = 'inline-block';\n        col.className = 'davi-col';\n        col.style.verticalAlign = \"top\";\n        col.style.width = w + 'px';\n        col.style.height = h + 'px';\n        col.style.overflow = 'hidden';\n        return col;\n    }\n\n    function createColumns(spec, container, w, h) {\n      var columns = [],\n          widthTotal = w,\n          widthRemaining = widthTotal;\n\n      spec.forEach(function(cs, i){\n          var colWidth = (cs.width > 1) ? cs.width : cs.width * widthTotal;\n          columns[i] = createColumn(colWidth, h);\n          widthRemaining -= colWidth;\n          if(cs.id !== undefined) {\n              columns[i].setAttribute('id', cs.id)\n              divs[cs.id] = columns[i];\n          }\n          container.appendChild(columns[i]);\n          if(cs.rows) columns[i] = createRows(cs.rows, columns[i], w, h);\n\n      });\n\n      return columns;\n    }\n\n    function createRows(spec, container, w, h) {\n        var rows = [],\n            rowWidth = w,\n            heightTotal = h,\n            heightRemaining = heightTotal;\n\n        spec.forEach(function(rs, i){\n            var rowHeight = (rs.height > 1) ? rs.height : rs.height * heightTotal;\n            rows[i] = createRow(rowWidth, rowHeight);\n            heightRemaining -= rowHeight;\n            if(rs.id !== undefined) {\n                rows[i].setAttribute('id', rs.id)\n                divs[rs.id] = rows[i];\n            }\n            container.appendChild(rows[i]);\n            if(rs.cols) rows[i] = createColumns(rs.cols, rows[i], rowWidth, rowHeight);\n\n        });\n\n        return rows;\n    }\n\n    function createLayout(width, height) {\n\n        var layout = document.createElement('div');\n\n        if(layoutId)\n            layout.setAttribute('id', layoutId);\n\n        if(typeof className == 'string')\n            layout.className = className;\n\n        // container.style.overflow = 'hidden';\n        layout.style.height = height + \"px\";\n        layout.style.width = width + \"px\";\n\n        layout.style.margin = margin + 'px';\n        layout.className = 'davi-layout';\n        // layout.style.overflow = 'hidden';\n        // layout.style.padding = '0';\n\n\n        return layout;\n    }\n\n    var layout = createLayout(width, height);\n\n    if(rows.length) cells = createRows(rows, layout, width, height);\n    if(cols.length) cells = createColumns(cols, layout, width, height);\n\n    Object.keys(divs).forEach(function(k){\n        divs[k].append = divs[k].appendChild;\n    })\n\n    layout.cell = function(id, cid) {\n        if(typeof id === 'number')\n            if(typeof cid === 'number' && typeof cells[id][cid] != 'undefined')\n                return cells[id][cid];\n            else\n                return cells[id];\n        else\n            return divs[id];\n    }\n\n\n    layout.get = layout.cell;\n    container.appendChild(layout);\n    // container.onresize = function() {\n    //     var newLayout = createLayout(container.clientWidth, container.clientHeight);\n    //     layout.replaceWith(newLayout);\n    // }\n    return layout;\n};\n","export default function Panel(arg) {\n    'use strict';\n    var panel,\n        option = arg || {},\n        container = option.container || document.body,\n        header = option.header || null,\n        title = option.title || \"\",\n        margin = option.margin || 5,\n        style = option.style || {},\n        padding = option.padding || 0,\n        types = option.types || [],\n        classNames = 'panel ui segment',\n        angularJS = option.AngularJS || option.angularJS || false,\n        headerHeight;\n\n    if (container) {\n        container = (typeof(container) == \"string\") ? document.getElementById(container) : container;\n    }\n\n    if (option.id) {\n        panel = document.getElementById(option.id);\n        if (panel === null) {\n            panel = document.createElement(\"div\");\n            panel.setAttribute('id', option.id);\n            container.appendChild(panel);\n        }\n    } else {\n        panel = document.createElement(\"div\");\n        container.appendChild(panel);\n    }\n\n    var fullScreen = false,\n        width = option.width || container.clientWidth,\n        height = option.height || container.clientHeight;\n\n    width -= margin * 2;\n    height -= margin * 2;\n\n    panel.className = \"ui\";\n    panel.style.margin = margin + 'px';\n\n    panel.style.width = width + \"px\";\n    panel.style.height = height + \"px\";\n    // panel.style.boxSizing = 'border-box';\n\n    if (header) {\n        headerHeight = option.header.height || 0.08 * height;\n        if (headerHeight < 1) headerHeight *= height;\n        panel.header = document.createElement('div');\n        panel.header.className = \"ui top attached block header primary\";\n        panel.header.style.backgroundColor = \"#FFFFFF\";\n        panel.header.style.height = headerHeight + \"px\";\n        panel.header.style.width = width + \"px\";\n        panel.header.style.fontSize = headerHeight * 0.36 + 'px';\n\n        if (option.header.hasOwnProperty('style')) {\n            Object.keys(option.header.style).forEach(function(s) {\n                panel.header.style[s] = option.header.style[s];\n            });\n        }\n        panel.header.style.padding = 0;\n        panel.header.style.paddingLeft = panel.header.style.fontSize;\n\n        var panelTitle = document.createElement('span');\n        panelTitle.innerHTML = title;\n        panelTitle.style.float = 'left';\n        panelTitle.style.marginTop = (headerHeight * 0.25) + 'px';\n\n        panel.header.appendChild(panelTitle);\n        panel.appendChild(panel.header);\n        Object.defineProperty(panel, \"title\", {\n            get: function() {\n                return title;\n            },\n            set: function(title) {\n                panelTitle.innerHTML = title;\n            }\n        });\n        classNames += ' bottom attached';\n\n        if (Array.isArray(option.header.controls)) {\n            option.header.controls.forEach(function(ctrl) {\n                panel.header.appendChild(ctrl);\n            })\n        }\n\n        var controls = document.createElement('div');\n        controls.style.float = 'right';\n        controls.style.marginTop = (headerHeight * 0.25) + 'px';\n        controls.style.marginRight = panel.header.style.fontSize;\n        panel.header.appendChild(controls)\n\n\n        panel.header.append = function(elem) {\n            if (typeof elem == 'string')\n                controls.innerHTML += elem;\n            else\n                controls.appendChild(elem);\n            return panel;\n        };\n\n    } else {\n        headerHeight = 0;\n    }\n\n    panel.body = document.createElement(\"div\");\n    panel.body.className = classNames + ' panel-body ' + types.join(' ');\n    panel.body.style.width = width + \"px\";\n    panel.body.style.height = height - headerHeight + \"px\";\n    panel.body.style.padding = padding + 'px';\n    if (option.hasOwnProperty('style')) {\n\n        Object.keys(option.style).forEach(function(s) {\n            panel.body.style[s] = option.style[s];\n        });\n    }\n\n    panel.appendChild(panel.body);\n\n    if(option.id)\n        panel.body.setAttribute('id', option.id+\"-body\");\n    panel.innerWidth = width - padding * 2;\n    panel.innerHeight = height - headerHeight - padding * 2;\n\n    if (angularJS && angularJS.hasOwnProperty('ng-controller')) {\n        panel.setAttribute('ng-controller', angularJS['ng-controller']);\n        panel.body.setAttribute(angularJS['view'], '');\n        panel.body.setAttribute('id', angularJS['id'])\n    }\n\n    panel.showLoading = function() {\n        if((' ' + panel.body.className + ' ').indexOf(' loading ') === -1)\n            panel.body.className += ' loading';\n    };\n\n    panel.hideLoading = function() {\n        panel.body.className = panel.body.className.replace(/\\bloading\\b/, '');\n    };\n\n    panel.toggleLoading = function() {\n        if((' ' + panel.body.className + ' ').indexOf(' loading ') === -1)\n            panel.body.className += ' loading';\n        else\n            panel.hideLoading();\n    };\n\n    panel.append = function(child) {\n        if (typeof child == 'string')\n            panel.body.innerHTML += child;\n        else\n            panel.body.appendChild(child);\n        return panel;\n    };\n\n    panel.clear = function() {\n        panel.body.innerHTML = \"\";\n    };\n\n    panel.update = function(domArray) {\n        panel.clear();\n        panel.body.appendChild(domArray);\n    };\n\n\n    panel.toggleFullScreen = function() {\n        if (!fullScreen) {\n            panel.style.position = 'fixed';\n            panel.style.top = '1px';\n            panel.style.left = '1px';\n            panel.style.zIndex = 9999;\n            panel.resize(document.body.clientWidth, document.body.clientHeight);\n        } else {\n            panel.style.position = 'relative';\n            panel.style.zIndex = 0;\n            panel.resize(container.clientWidth - margin * 2, container.clientHeight - margin * 2);\n        }\n\n        fullScreen = !fullScreen;\n\n    }\n\n    panel.resize = function(w, h) {\n        if (typeof w == 'undefined' || typeof h == 'undefined') {\n            width = container.clientWidth;\n            height = container.clientHeight;\n        } else {\n            width = w;\n            height = h;\n        }\n\n        panel.style.width = width + \"px\";\n        panel.style.height = height + \"px\";\n        panel.body.style.width = width + \"px\";\n        panel.body.style.height = height - headerHeight + \"px\";\n        if (header) {\n            panel.header.style.height = headerHeight + \"px\";\n            panel.header.style.width = width + \"px\";\n        }\n    }\n\n\n    return panel;\n}\n","export default function Progress(arg) {\n    var div = document.createElement('div'),\n        bar = document.createElement('div'),\n        progress = document.createElement('div'),\n        label = document.createElement('div'),\n        options = arg || {},\n        container = options.container || null,\n        percent = options.percentage || 0,\n        type = options.type,\n        text = options.text || '',\n        types = options.types || [];\n\n    if(type) types.push(type);\n    div.className = 'ui progress ' + types.join(' ');\n\n    progress.className = 'progress';\n    bar.className = 'bar';\n    label.className = 'label';\n\n\n    label.innerHTML = text;\n    bar.appendChild(progress);\n    div.appendChild(bar);\n    div.appendChild(label);\n    if(container) container.appendChild(div);\n\n    var jquery = window.jQuery || $;\n\n    Object.defineProperty(div, 'percent', {\n        set: function(f) {\n            percent = f;\n            setPercentage(percent);\n            return div;\n        }\n    });\n\n    function setPercentage() {\n        if(typeof jquery == 'function') {\n            jquery(div).progress({percent: percent});\n        }\n    }\n\n    setPercentage(percent);\n\n    div.hide = function() {\n        div.style.display = 'none';\n    };\n\n    div.show = function() {\n        div.style.display = 'block';\n    };\n\n    div.label = function(text) {\n        label.innerHTML = text;\n    };\n\n    return div;\n}\n","export default function Table(arg) {\n    var table = document.createElement('table'),\n        options = arg || {},\n        container = options.container || document.body,\n        rows = options.rows || false,\n        columns = options.columns || options.cols || false,\n        type = options.type,\n        width = options.width || container.clientWidth * 0.9,\n        types = options.types || [];\n\n    if(type) types.push(type);\n    if(container) container.appendChild(table);\n    table.className = 'ui table ' + types.join(' ');\n    table.style.margin = '5px auto';\n    table.style.width = width + 'px';\n    var tableHead = document.createElement('thead'),\n        tableBody = document.createElement('tbody'),\n        tr = document.createElement('tr');\n    tableHead.appendChild(tr);\n    if(columns) {\n        columns.forEach(function(col){\n            var c = document.createElement('th');\n            c.innerHTML = col;\n            tr.appendChild(c);\n        });\n    }\n    table.appendChild(tableHead);\n    table.appendChild(tableBody);\n\n    table.addRow = function(_row) {\n        var row = (Array.isArray(_row)) ? _row : [_row];\n\n        var tr = document.createElement('tr');\n        row.forEach(function(col){\n            var td = document.createElement('td');\n            if(col instanceof HTMLElement)\n                td.appendChild(col);\n            else\n                td.innerHTML = col;\n            tr.appendChild(td);\n        });\n        tableBody.appendChild(tr);\n        return tr;\n    }\n\n    table.updateCell = function(row, col, html) {\n        var tr = tableBody.childNodes[row];\n        var td = tr.childNodes[col];\n        td.innerHTML = html;\n        return td;\n    }\n\n    if (options.hasOwnProperty('style')) {\n        Object.keys(options.style).forEach(function(s) {\n            table.style[s] = options.style[s];\n        });\n    }\n\n    table.tbody = tableBody;\n\n    return table;\n}\n","export default function linePlot(options) {\n    var linePlot = {};\n    var data = options.data || [],\n        dopt = options.dopt || 'aggregate',\n        container = options.container || 'body',\n        vmap = options.vmap || {},\n        dataSizes = options.dataSizes,\n        width = options.width || 400,\n        height = options.height || 300,\n        legend = options.legend || null,\n        colorMap = options.colorMap || null,\n        yLabel = options.yLabel || true,\n        xLabel = options.xLabel || true,\n        chartTitle = options.title || false,\n        printLegend = options.legend || false,\n        margin = options.margin || {\n            top: 30,\n            right: 30,\n            bottom: 30,\n            left: 80\n        };\n\n    var svg = d3.select(container).append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    width -= margin.left + margin.right;\n    height -= margin.top + margin.bottom;\n\n    var x = d3.scaleLinear().range([0, width]),\n        y = d3.scaleLinear().range([height, 0]),\n        color;\n\n\n    var line = d3.line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d[vmap.x]);\n        })\n        .y(function(d) {\n            return y(d[vmap.y]);\n        });\n\n    var result = d3.nest().key(d => d[vmap.color]).entries(data),\n        series = result.map(d => d.key).sort((a,b)=>a-b);\n\n        if(colorMap === null) {\n            color = d3.scaleOrdinal(d3.schemeCategory20);\n            color.domain(series);\n        } else {\n            color = colorMap;\n        }\n\n    // console.log(data);\n\n    var xDomain = d3.extent(data, function(d) {\n            return d[vmap.x]\n        }),\n        yDomain = d3.extent(data, function(d) {\n            return d[vmap.y]\n        })\n    x.domain(xDomain);\n    y.domain(yDomain);\n\n    var pointPerSeries = data.length / series.length,\n        xInterval = (xDomain[1]) / pointPerSeries;\n\n\n    var xAxis = svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(\n            d3.axisBottom(x)\n            .tickSize(-height)\n            .tickPadding(10)\n            .tickFormat(function(d) {\n                return d3.format('.2s')(d / 1e+9) + 's'\n            })\n        )\n\n    // if (xLabel) {\n    //     svg.append(\"text\")\n    //         .attr(\"class\", \"label\")\n    //         .attr(\"x\", width / 2)\n    //         .attr(\"y\", margin.bottom)\n    //         .attr(\"dy\", \".35em\")\n    //         .style(\"text-anchor\", \"middle\")\n    //         .style(\"font-size\", \"1.1em\")\n    //         .text(vmap.x)\n    // }\n\n    linePlot.onbrush = function() {};\n    linePlot.onbrushend = function() {};\n\n    var brush = d3.brushX()\n        .extent([\n            [0, 0],\n            [width, height]\n        ])\n        .on(\"brush\", brushed)\n        .on(\"end\", brushedend);\n\n    var yAxis = svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(\n            d3.axisLeft(y)\n            .tickSize(-width)\n            .tickPadding(10)\n            .tickFormat(d3.format('.2s'))\n        );\n\n    if (yLabel) {\n        svg.append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", -margin.left)\n            .attr(\"x\", -height / 2)\n            .attr(\"dy\", \"1.2em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"font-size\", \"1.1em\")\n            .text(vmap.y.split('_').join(' '));\n    }\n\n\n    var trend = svg.selectAll(\".lib\")\n        .data(result)\n        .enter().append(\"g\")\n        .attr(\"class\", \"lib\");\n\n    trend.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", function(d) {\n            return line(d.values);\n        })\n        .style(\"stroke-width\", 2)\n        .style(\"fill\", 'none')\n        .style(\"stroke\", function(d) {\n            return color(d.key);\n        });\n\n    var mouseG = svg.append(\"g\")\n        .attr(\"class\", \"mouse-over-effects\");\n\n    var lineCursor = mouseG.append(\"path\") // this is the black vertical line to follow mouse\n        .attr(\"class\", \"mouse-line\")\n        .style(\"stroke\", \"black\")\n        .style(\"stroke-width\", \"1px\")\n        .style(\"opacity\", \"0\");\n\n\n    var mousePerLine = mouseG.selectAll('.mouse-per-line')\n        .data(series)\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"mouse-per-line\");\n\n    linePlot.onhover = function(mouse) {};\n\n    linePlot.showLineCursor = function(mouse) {\n        lineCursor\n            .attr(\"d\", function() {\n                var d = \"M\" + mouse[0] + \",\" + height;\n                d += \" \" + mouse[0] + \",\" + 0;\n                return d;\n            });\n    }\n\n    var brushHandle = svg.append(\"g\")\n        .attr(\"class\", \"brush\")\n        .call(brush);\n\n    linePlot.moveBrush = function(selection) {\n        brush.move(brushHandle, selection);\n    }\n\n    linePlot.colorMap = function(d) {\n        return color(d);\n    }\n\n    linePlot.brushCallBack = true;\n\n    function brushed() {\n        var selection = d3.event.selection;\n        // var selectedDomain = selection.map(x.invert, x);\n        if(linePlot.brushCallBack)\n            linePlot.onbrush(d3.event.selection);\n\n    }\n\n    function brushedend() {\n        var selection = d3.event.selection;\n        var selectedDomain = selection.map(x.invert, x);\n        if(linePlot.brushCallBack)\n            linePlot.onbrushend(d3.event.selection, selectedDomain);\n    }\n\n\n    svg.on('mouseover', function() { // on mouse in show line, circles and text\n            var mouse = d3.mouse(this);\n            d3.selectAll(\".mouse-line\").style(\"opacity\", 1);\n        })\n        .on('mousemove', function() { // mouse moving over canvas\n            var mouse = d3.mouse(this);\n            linePlot.showLineCursor(mouse);\n            linePlot.onhover(mouse);\n        })\n        .on('mouseout', function() {\n            d3.selectAll(\".mouse-line\").style(\"opacity\", 0);\n        })\n        // .on('click', function() {\n        //     var mouse = d3.mouse(this);\n        //     var xValue = xDomain[0] + Math.floor(mouse[0] / width * pointPerSeries) * xInterval;\n        //     // console.log(xValue);\n        //     var yValues = data.filter(function(d) {\n        //         return d[vmap.x] == xValue;\n        //     }).map(d => d[vmap.y]);\n        //     console.log(yValues);\n        // })\n\n    if (chartTitle) {\n        var title = svg.append(\"text\")\n            .attr(\"x\", 0)\n            .attr(\"y\", -margin.top / 2)\n            .style(\"text-anchor\", \"begin\")\n            .style(\"font-size\", \"16px\")\n            .text(chartTitle);\n    }\n\n    if (printLegend) {\n        legend = svg.append(\"g\")\n            .attr(\"class\", \"legend\")\n            .selectAll(\"g\")\n            .data(series)\n            .enter().append(\"g\")\n            .attr(\"transform\", function(d, i) {\n                return \"translate(\" + (i * Math.min(70, width / series.length)) + \", 0 )\";\n            });\n\n        legend.append(\"line\")\n            .style(\"stroke\", function(d) {\n                return color(d);\n            })\n            .style(\"stroke-width\", 5)\n            .style(\"fill\", 'none')\n            .attr(\"x2\", 20);\n\n        legend.append(\"text\")\n            .attr(\"dy\", \".35em\")\n            .attr(\"x\", 26)\n            .text(function(d) {\n                return vmap.color + d;\n            });\n    }\n\n    return linePlot;\n}\n\n","export default function (options) {\n    var data = options.data || [],\n        dopt = options.dopt || 'aggregate',\n        container = options.container || 'body',\n        vmap = options.vmap || {},\n        width = options.width || 400,\n        height = options.height || 300,\n        legend = options.legend || null,\n        yLabel = options.yLabel || true,\n        xLabel = options.xLabel || true,\n        series = options.domainY || options.series || null,\n        domainX = options.domainX || [],\n        chartTitle = options.chartTitle || false,\n        margin = options.margin || {top: 90, right: 20, bottom: 50, left: 40};\n\n    var svg = d3.select(container).append(\"svg\")\n            .attr(\"width\", width )\n            .attr(\"height\", height)\n        .append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    width -= margin.left + margin.right;\n    height -= margin.top + margin.bottom;\n\n    var x = d3.scaleBand().rangeRound([0, width]).padding(1),\n        y = d3.scaleBand().rangeRound([0, height]).padding(1),\n        z = d3.scaleOrdinal(d3.schemeCategory20);\n\n    if(series == null) {\n        var result =  d3.nest().key(function(d) { return d[vmap.color]; }).entries(data)\n        series = result.map(function(d){ return d.key });\n    }\n    z.domain(series);\n\n    x.domain(domainX);\n    y.domain(series);\n\n    var sizeScales = {};\n\n    domainX.forEach(function(metric){\n        var subset = data.filter(d=>d.metric == metric);\n\n        sizeScales[metric] = d3.scaleLinear()\n            .range([2, Math.min(height / series.length, width/4)])\n            .domain(d3.extent(subset, function(d){ return d.value; }))\n    })\n\n    var xAxis = svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n    //   .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(\n            d3.axisTop(x)\n        )\n\n    xAxis.selectAll('text')\n        .attr(\"dx\", x.bandwidth() / 2)\n        .attr(\"dy\", y.bandwidth() / 2 + 4)\n        .attr(\"transform\", \"rotate(-65)\")\n        .style(\"font-size\", \"1.1em\")\n        .style(\"text-anchor\", \"start\");\n\n    if(xLabel) {\n        xAxis.append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"x\", width/2)\n            .attr(\"y\", margin.top/2)\n            .style(\"text-anchor\", \"middle\")\n            .style(\"font-size\", \"1.1em\")\n            .text(vmap.x)\n    }\n\n    var yAxis = svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(\n            d3.axisLeft(y)\n                .tickFormat((d) => 'PE'+d)\n        );\n\n    if(yLabel) {\n        yAxis.append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", -margin.left)\n            .attr(\"x\", -height/2)\n            .attr(\"dy\", \"1.2em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"font-size\", \"1.1em\")\n            .text(vmap.y);\n    }\n\n    svg.selectAll(\".dot\")\n        .data(data)\n        .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"r\", function(d){ return sizeScales[d.metric](d.value) / 2 })\n        .attr(\"cx\", function(d) { return x(d[vmap.x]); })\n        .attr(\"cy\", function(d) { return y(d[vmap.y]); })\n        .style(\"fill\", function(d) { return z(d[vmap.color]); });\n\n    // legend = svg.append(\"g\")\n    //     .attr(\"class\", \"legend\")\n    //   .selectAll(\"g\")\n    //     .data(series)\n    //   .enter().append(\"g\")\n    //     .attr(\"transform\", function(d, i) { return \"translate(\" + (width + 10) + \",\" + (i * 18) + \")\"; });\n    //\n    // legend.append(\"line\")\n    //     .style(\"stroke\", function(d) { return z(d); })\n    //     .style(\"stroke-width\", 5)\n    //     .style(\"fill\", 'none')\n    //     .attr(\"x2\", 10);\n    //\n    // legend.append(\"text\")\n    //     .attr(\"dy\", \".35em\")\n    //     .attr(\"x\", 26)\n    //     .text(function(d) { return vmap.color + d; });\n\n}\n","export default function scatterPlot(options) {\n    var data = options.data || [],\n        dopt = options.dopt || 'aggregate',\n        container = options.container || 'body',\n        vmap = options.vmap || {},\n        dataSizes = options.dataSizes,\n        width = options.width || 400,\n        height = options.height || 300,\n        legend = options.legend || null,\n        yLabel = options.yLabel || true,\n        xLabel = options.xLabel || true,\n        chartTitle = options.chartTitle || false,\n        margin = options.margin || {top: 30, right: 80, bottom: 30, left: 80};\n\n    var svg = d3.select(container).append(\"svg\")\n            .attr(\"width\", width )\n            .attr(\"height\", height)\n        .append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    width -= margin.left + margin.right;\n    height -= margin.top + margin.bottom;\n\n    var x = d3.scaleLinear().range([0, width]),\n        y = d3.scaleLinear().range([height, 0]),\n        z = d3.scaleOrdinal(d3.schemeCategory20);\n\n    var result =  d3.nest().key(function(d) { return d[vmap.color]; }).entries(data)\n    var series = result.map(function(d){ return d.key });\n    z.domain(series);\n\n    x.domain(d3.extent(data, function(d) { return d[vmap.x]}));\n    y.domain(d3.extent(data, function(d) { return d[vmap.y]}));\n\n    var xAxis = svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(\n            d3.axisBottom(x)\n                .tickSize(-height)\n                .tickPadding(10)\n                .tickFormat(d3.format('.2s'))\n        )\n\n    xAxis.selectAll('text')\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"middle\");\n\n    if(xLabel) {\n        xAxis.append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"x\", width/2)\n            .attr(\"y\", margin.bottom)\n            .style(\"text-anchor\", \"middle\")\n            .style(\"font-size\", \"1.1em\")\n            .text(vmap.x)\n    }\n\n    var yAxis = svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(\n            d3.axisLeft(y)\n                .tickSize(-width)\n                .tickPadding(10)\n                .tickFormat(d3.format('.2s'))\n        );\n\n    if(yLabel) {\n        yAxis.append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", -margin.left)\n            .attr(\"x\", -height/2)\n            .attr(\"dy\", \"1.2em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"font-size\", \"1.1em\")\n            .text(vmap.y);\n    }\n\n    svg.selectAll(\".dot\")\n        .data(data)\n        .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"r\", 4)\n        .attr(\"cx\", function(d) { return x(d[vmap.x]); })\n        .attr(\"cy\", function(d) { return y(d[vmap.y]); })\n        .style(\"fill\", function(d) { return z(d[vmap.color]); });\n\n    legend = svg.append(\"g\")\n        .attr(\"class\", \"legend\")\n        .selectAll(\"g\")\n        .data(series)\n        .enter().append(\"g\")\n        .attr(\"transform\", function(d, i) { return \"translate(\" + (width + 10) + \",\" + (i * 18) + \")\"; });\n\n    legend.append(\"line\")\n        .style(\"stroke\", function(d) { return z(d); })\n        .style(\"stroke-width\", 5)\n        .style(\"fill\", 'none')\n        .attr(\"x2\", 10);\n\n    legend.append(\"text\")\n        .attr(\"dy\", \".35em\")\n        .attr(\"x\", 26)\n        .text(function(d) { return vmap.color + d; });\n}\n\n"],"sourceRoot":""}